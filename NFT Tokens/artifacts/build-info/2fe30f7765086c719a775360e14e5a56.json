{
	"id": "2fe30f7765086c719a775360e14e5a56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"NFT Tokens/Tk9.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract MultiToken is ERC1155 {\n    \n    mapping(uint => uint) public totalSupply;\n\n    constructor(string memory uri) ERC1155(uri) {}\n\n    function addTokenType(uint initialSupply) public {\n        uint tokenId = totalSupply[0];\n        totalSupply[tokenId] = initialSupply;\n        _mint(address(this), tokenId, initialSupply, \"\");\n    }\n\n    function transferTokens(address recipient, uint[] memory ids, uint[] memory amounts) public {\n        _safeBatchTransferFrom(msg.sender, recipient, ids, amounts, \"\");\n    }\n\n    function burnTokens(uint id, uint amount) public {\n        require(balanceOf(msg.sender, id) >= amount, \"Insufficient balance to burn\");\n        _burn(msg.sender, id, amount);\n        totalSupply[id] -= amount;\n    }\n\n    function gettotalSupply(uint id) public view returns(uint) {\n        return totalSupply[id];\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a0de1b46c7a8779699b1cb8dc3ac5a5a5683fdf85183613069412c7dd6887fe64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a0de1b46c7a8779699b1cb8dc3ac5a5a5683fdf85183613069412c7dd6887fe64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xD 0xE1 0xB4 PUSH13 0x7A8779699B1CB8DC3AC5A5A568 EXTCODEHASH 0xDF DUP6 XOR CALLDATASIZE SGT MOD SWAP5 SLT 0xC7 0xDD PUSH9 0x87FE64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;276:4526:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a0de1b46c7a8779699b1cb8dc3ac5a5a5683fdf85183613069412c7dd6887fe64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xD 0xE1 0xB4 PUSH13 0x7A8779699B1CB8DC3AC5A5A568 EXTCODEHASH 0xDF DUP6 XOR CALLDATASIZE SGT MOD SWAP5 SLT 0xC7 0xDD PUSH9 0x87FE64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a0de1b46c7a8779699b1cb8dc3ac5a5a5683fdf85183613069412c7dd6887fe64736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NFT Tokens/Tk9.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NFT Tokens/Tk9.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NFT Tokens/Tk9.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT Tokens/Tk9.sol": {
				"MultiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"name": "addTokenType",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "gettotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT Tokens/Tk9.sol\":119:966  contract MultiToken is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"NFT Tokens/Tk9.sol\":208:254  constructor(string memory uri) ERC1155(uri) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFT Tokens/Tk9.sol\":247:250  uri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_7\n    /* \"NFT Tokens/Tk9.sol\":247:250  uri */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"NFT Tokens/Tk9.sol\":208:254  constructor(string memory uri) ERC1155(uri) {} */\n  pop\n    /* \"NFT Tokens/Tk9.sol\":119:966  contract MultiToken is ERC1155 {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_14:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1058   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":279:281   */\n  0x20\n    /* \"#utility.yul\":267:276   */\n  dup3\n    /* \"#utility.yul\":258:265   */\n  dup5\n    /* \"#utility.yul\":254:277   */\n  sub\n    /* \"#utility.yul\":250:282   */\n  slt\n    /* \"#utility.yul\":247:299   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":295:296   */\n  0x00\n    /* \"#utility.yul\":292:293   */\n  dup1\n    /* \"#utility.yul\":285:297   */\n  revert\n    /* \"#utility.yul\":247:299   */\ntag_22:\n    /* \"#utility.yul\":322:338   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":387:401   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":384:418   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":414:415   */\n  0x00\n    /* \"#utility.yul\":411:412   */\n  dup1\n    /* \"#utility.yul\":404:416   */\n  revert\n    /* \"#utility.yul\":384:418   */\ntag_23:\n    /* \"#utility.yul\":452:458   */\n  dup2\n    /* \"#utility.yul\":441:450   */\n  dup5\n    /* \"#utility.yul\":437:459   */\n  add\n    /* \"#utility.yul\":427:459   */\n  swap2\n  pop\n    /* \"#utility.yul\":497:504   */\n  dup5\n    /* \"#utility.yul\":490:494   */\n  0x1f\n    /* \"#utility.yul\":486:488   */\n  dup4\n    /* \"#utility.yul\":482:495   */\n  add\n    /* \"#utility.yul\":478:505   */\n  slt\n    /* \"#utility.yul\":468:523   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":519:520   */\n  0x00\n    /* \"#utility.yul\":516:517   */\n  dup1\n    /* \"#utility.yul\":509:521   */\n  revert\n    /* \"#utility.yul\":468:523   */\ntag_24:\n    /* \"#utility.yul\":548:550   */\n  dup2\n    /* \"#utility.yul\":542:551   */\n  mload\n    /* \"#utility.yul\":570:572   */\n  dup2\n    /* \"#utility.yul\":566:568   */\n  dup2\n    /* \"#utility.yul\":563:573   */\n  gt\n    /* \"#utility.yul\":560:596   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":576:594   */\n  tag_26\n  tag_14\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":651:653   */\n  0x40\n    /* \"#utility.yul\":645:654   */\n  mload\n    /* \"#utility.yul\":619:621   */\n  0x1f\n    /* \"#utility.yul\":705:718   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":701:723   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":725:727   */\n  0x3f\n    /* \"#utility.yul\":697:728   */\n  add\n    /* \"#utility.yul\":693:733   */\n  and\n    /* \"#utility.yul\":681:734   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":749:767   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":769:791   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":746:792   */\n  or\n    /* \"#utility.yul\":743:815   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":795:813   */\n  tag_28\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":835:845   */\n  dup2\n    /* \"#utility.yul\":831:833   */\n  0x40\n    /* \"#utility.yul\":824:846   */\n  mstore\n    /* \"#utility.yul\":870:872   */\n  dup3\n    /* \"#utility.yul\":862:868   */\n  dup2\n    /* \"#utility.yul\":855:873   */\n  mstore\n    /* \"#utility.yul\":910:917   */\n  dup8\n    /* \"#utility.yul\":905:907   */\n  0x20\n    /* \"#utility.yul\":900:902   */\n  dup5\n    /* \"#utility.yul\":896:898   */\n  dup8\n    /* \"#utility.yul\":892:903   */\n  add\n    /* \"#utility.yul\":888:908   */\n  add\n    /* \"#utility.yul\":885:918   */\n  gt\n    /* \"#utility.yul\":882:935   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":931:932   */\n  0x00\n    /* \"#utility.yul\":928:929   */\n  dup1\n    /* \"#utility.yul\":921:933   */\n  revert\n    /* \"#utility.yul\":882:935   */\ntag_29:\n    /* \"#utility.yul\":980:982   */\n  dup3\n    /* \"#utility.yul\":975:977   */\n  0x20\n    /* \"#utility.yul\":971:973   */\n  dup7\n    /* \"#utility.yul\":967:978   */\n  add\n    /* \"#utility.yul\":962:964   */\n  0x20\n    /* \"#utility.yul\":954:960   */\n  dup4\n    /* \"#utility.yul\":950:965   */\n  add\n    /* \"#utility.yul\":944:983   */\n  mcopy\n    /* \"#utility.yul\":1025:1026   */\n  0x00\n    /* \"#utility.yul\":1003:1018   */\n  swap3\n  dup2\n  add\n    /* \"#utility.yul\":1020:1022   */\n  0x20\n    /* \"#utility.yul\":999:1023   */\n  add\n    /* \"#utility.yul\":992:1027   */\n  swap3\n  swap1\n  swap3\n  mstore\n  pop\n    /* \"#utility.yul\":1007:1013   */\n  swap6\n    /* \"#utility.yul\":146:1058   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1063:1443   */\ntag_15:\n    /* \"#utility.yul\":1142:1143   */\n  0x01\n    /* \"#utility.yul\":1138:1150   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1185:1197   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1206:1267   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1260:1264   */\n  0x7f\n    /* \"#utility.yul\":1252:1258   */\n  dup3\n    /* \"#utility.yul\":1248:1265   */\n  and\n    /* \"#utility.yul\":1238:1265   */\n  swap2\n  pop\n    /* \"#utility.yul\":1206:1267   */\ntag_31:\n    /* \"#utility.yul\":1313:1315   */\n  0x20\n    /* \"#utility.yul\":1305:1311   */\n  dup3\n    /* \"#utility.yul\":1302:1316   */\n  lt\n    /* \"#utility.yul\":1282:1300   */\n  dup2\n    /* \"#utility.yul\":1279:1317   */\n  sub\n    /* \"#utility.yul\":1276:1437   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1359:1369   */\n  0x4e487b71\n    /* \"#utility.yul\":1354:1357   */\n  0xe0\n    /* \"#utility.yul\":1350:1370   */\n  shl\n    /* \"#utility.yul\":1347:1348   */\n  0x00\n    /* \"#utility.yul\":1340:1371   */\n  mstore\n    /* \"#utility.yul\":1394:1398   */\n  0x22\n    /* \"#utility.yul\":1391:1392   */\n  0x04\n    /* \"#utility.yul\":1384:1399   */\n  mstore\n    /* \"#utility.yul\":1422:1426   */\n  0x24\n    /* \"#utility.yul\":1419:1420   */\n  0x00\n    /* \"#utility.yul\":1412:1427   */\n  revert\n    /* \"#utility.yul\":1276:1437   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1063:1443   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1574:2092   */\ntag_17:\n    /* \"#utility.yul\":1676:1678   */\n  0x1f\n    /* \"#utility.yul\":1671:1674   */\n  dup3\n    /* \"#utility.yul\":1668:1679   */\n  gt\n    /* \"#utility.yul\":1665:2086   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1712:1717   */\n  dup1\n    /* \"#utility.yul\":1709:1710   */\n  0x00\n    /* \"#utility.yul\":1702:1718   */\n  mstore\n    /* \"#utility.yul\":1756:1760   */\n  0x20\n    /* \"#utility.yul\":1753:1754   */\n  0x00\n    /* \"#utility.yul\":1743:1761   */\n  keccak256\n    /* \"#utility.yul\":1826:1828   */\n  0x1f\n    /* \"#utility.yul\":1814:1824   */\n  dup5\n    /* \"#utility.yul\":1810:1829   */\n  add\n    /* \"#utility.yul\":1807:1808   */\n  0x05\n    /* \"#utility.yul\":1803:1830   */\n  shr\n    /* \"#utility.yul\":1797:1801   */\n  dup2\n    /* \"#utility.yul\":1793:1831   */\n  add\n    /* \"#utility.yul\":1862:1866   */\n  0x20\n    /* \"#utility.yul\":1850:1860   */\n  dup6\n    /* \"#utility.yul\":1847:1867   */\n  lt\n    /* \"#utility.yul\":1844:1891   */\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"#utility.yul\":1885:1889   */\n  dup1\n    /* \"#utility.yul\":1844:1891   */\ntag_36:\n    /* \"#utility.yul\":1940:1942   */\n  0x1f\n    /* \"#utility.yul\":1935:1938   */\n  dup5\n    /* \"#utility.yul\":1931:1943   */\n  add\n    /* \"#utility.yul\":1928:1929   */\n  0x05\n    /* \"#utility.yul\":1924:1944   */\n  shr\n    /* \"#utility.yul\":1918:1922   */\n  dup3\n    /* \"#utility.yul\":1914:1945   */\n  add\n    /* \"#utility.yul\":1904:1945   */\n  swap2\n  pop\n    /* \"#utility.yul\":1995:2076   */\ntag_37:\n    /* \"#utility.yul\":2013:2015   */\n  dup2\n    /* \"#utility.yul\":2006:2011   */\n  dup2\n    /* \"#utility.yul\":2003:2016   */\n  lt\n    /* \"#utility.yul\":1995:2076   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2072:2073   */\n  0x00\n    /* \"#utility.yul\":2058:2074   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2039:2040   */\n  0x01\n    /* \"#utility.yul\":2028:2041   */\n  add\n    /* \"#utility.yul\":1995:2076   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":1999:2002   */\n  pop\n  pop\n    /* \"#utility.yul\":1665:2086   */\ntag_35:\n    /* \"#utility.yul\":1574:2092   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2268:3613   */\ntag_13:\n    /* \"#utility.yul\":2388:2398   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2410:2440   */\n  dup2\n  gt\n    /* \"#utility.yul\":2407:2463   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2443:2461   */\n  tag_43\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2472:2569   */\n  tag_44\n    /* \"#utility.yul\":2562:2568   */\n  dup2\n    /* \"#utility.yul\":2522:2560   */\n  tag_45\n    /* \"#utility.yul\":2554:2558   */\n  dup5\n    /* \"#utility.yul\":2548:2559   */\n  sload\n    /* \"#utility.yul\":2522:2560   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2516:2520   */\n  dup5\n    /* \"#utility.yul\":2472:2569   */\n  tag_17\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2624:2628   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2681:2683   */\n  0x1f\n    /* \"#utility.yul\":2670:2684   */\n  dup4\n  gt\n    /* \"#utility.yul\":2698:2699   */\n  0x01\n    /* \"#utility.yul\":2693:3356   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":3400:3401   */\n  0x00\n    /* \"#utility.yul\":3417:3423   */\n  dup5\n    /* \"#utility.yul\":3414:3503   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":3469:3488   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3463:3489   */\n  mload\n    /* \"#utility.yul\":3414:3503   */\ntag_48:\n  not(0x00)\n    /* \"#utility.yul\":2225:2226   */\n  0x03\n    /* \"#utility.yul\":2221:2232   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2217:2241   */\n  shr\n    /* \"#utility.yul\":2213:2242   */\n  not\n    /* \"#utility.yul\":2203:2243   */\n  and\n    /* \"#utility.yul\":2249:2250   */\n  0x01\n    /* \"#utility.yul\":2245:2256   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2200:2257   */\n  or\n    /* \"#utility.yul\":3516:3597   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2663:3607   */\n  jump(tag_46)\n    /* \"#utility.yul\":2693:3356   */\ntag_47:\n    /* \"#utility.yul\":1521:1522   */\n  0x00\n    /* \"#utility.yul\":1514:1528   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1558:1562   */\n  0x20\n    /* \"#utility.yul\":1545:1563   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2729:2749   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2847:3083   */\ntag_51:\n    /* \"#utility.yul\":2861:2868   */\n  dup3\n    /* \"#utility.yul\":2858:2859   */\n  dup2\n    /* \"#utility.yul\":2855:2869   */\n  lt\n    /* \"#utility.yul\":2847:3083   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2950:2969   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2944:2970   */\n  mload\n    /* \"#utility.yul\":2929:2971   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3042:3069   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3010:3011   */\n  0x01\n    /* \"#utility.yul\":2998:3012   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2877:2896   */\n  dup5\n  add\n    /* \"#utility.yul\":2847:3083   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":2851:2854   */\n  pop\n    /* \"#utility.yul\":3111:3117   */\n  dup6\n    /* \"#utility.yul\":3102:3109   */\n  dup3\n    /* \"#utility.yul\":3099:3118   */\n  lt\n    /* \"#utility.yul\":3096:3297   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3172:3191   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3166:3192   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3255:3256   */\n  0x03\n    /* \"#utility.yul\":3251:3265   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3267:3270   */\n  0xf8\n    /* \"#utility.yul\":3247:3271   */\n  and\n    /* \"#utility.yul\":3243:3280   */\n  shr\n    /* \"#utility.yul\":3239:3281   */\n  not\n    /* \"#utility.yul\":3224:3282   */\n  and\n    /* \"#utility.yul\":3209:3283   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3096:3297   */\ntag_54:\n  pop\n  pop\n    /* \"#utility.yul\":3343:3344   */\n  0x01\n    /* \"#utility.yul\":3334:3340   */\n  dup5\n    /* \"#utility.yul\":3331:3332   */\n  0x01\n    /* \"#utility.yul\":3327:3341   */\n  shl\n    /* \"#utility.yul\":3323:3345   */\n  add\n    /* \"#utility.yul\":3317:3321   */\n  dup6\n    /* \"#utility.yul\":3310:3346   */\n  sstore\n    /* \"#utility.yul\":2663:3607   */\ntag_46:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2268:3613   */\n  pop\n  pop\n  jump\t// out\ntag_19:\n    /* \"NFT Tokens/Tk9.sol\":119:966  contract MultiToken is ERC1155 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFT Tokens/Tk9.sol\":119:966  contract MultiToken is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e81c64d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x93442218\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1cb0d481\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x20295559\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"NFT Tokens/Tk9.sol\":465:637  function transferTokens(address recipient, uint[] memory ids, uint[] memory amounts) public {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"NFT Tokens/Tk9.sol\":865:963  function gettotalSupply(uint id) public view returns(uint) {... */\n    tag_7:\n      tag_18\n      tag_41\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"NFT Tokens/Tk9.sol\":918:922  uint */\n      0x00\n        /* \"NFT Tokens/Tk9.sol\":941:956  totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"NFT Tokens/Tk9.sol\":941:952  totalSupply */\n      0x03\n        /* \"NFT Tokens/Tk9.sol\":941:956  totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":865:963  function gettotalSupply(uint id) public view returns(uint) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"NFT Tokens/Tk9.sol\":643:859  function burnTokens(uint id, uint amount) public {... */\n    tag_10:\n      tag_36\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"NFT Tokens/Tk9.sol\":260:459  function addTokenType(uint initialSupply) public {... */\n    tag_11:\n      tag_36\n      tag_59\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_36\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"NFT Tokens/Tk9.sol\":161:201  mapping(uint => uint) public totalSupply */\n    tag_13:\n      tag_18\n      tag_66\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_66:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_15:\n      tag_36\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_78:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_80\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk9.sol\":465:637  function transferTokens(address recipient, uint[] memory ids, uint[] memory amounts) public {... */\n    tag_39:\n        /* \"NFT Tokens/Tk9.sol\":567:630  _safeBatchTransferFrom(msg.sender, recipient, ids, amounts, \"\") */\n      tag_92\n        /* \"NFT Tokens/Tk9.sol\":590:600  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk9.sol\":602:611  recipient */\n      dup5\n        /* \"NFT Tokens/Tk9.sol\":613:616  ids */\n      dup5\n        /* \"NFT Tokens/Tk9.sol\":618:625  amounts */\n      dup5\n        /* \"NFT Tokens/Tk9.sol\":567:630  _safeBatchTransferFrom(msg.sender, recipient, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFT Tokens/Tk9.sol\":567:589  _safeBatchTransferFrom */\n      tag_93\n        /* \"NFT Tokens/Tk9.sol\":567:630  _safeBatchTransferFrom(msg.sender, recipient, ids, amounts, \"\") */\n      jump\t// in\n    tag_92:\n        /* \"NFT Tokens/Tk9.sol\":465:637  function transferTokens(address recipient, uint[] memory ids, uint[] memory amounts) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9302:9317   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9284:9318   */\n      mstore\n        /* \"#utility.yul\":9354:9369   */\n      dup8\n      and\n        /* \"#utility.yul\":9334:9352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9327:9370   */\n      mstore\n        /* \"#utility.yul\":9219:9237   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      dup4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9555:9580   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9596:9614   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9589:9623   */\n      mstore\n        /* \"#utility.yul\":9528:9546   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      tag_101\n        /* \"#utility.yul\":9381:9629   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_109\n      jumpi\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup1\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup7\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_115\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup1\n      dup5\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup8\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      tag_21\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_112)\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk9.sol\":643:859  function burnTokens(uint id, uint amount) public {... */\n    tag_57:\n        /* \"NFT Tokens/Tk9.sol\":739:745  amount */\n      dup1\n        /* \"NFT Tokens/Tk9.sol\":710:735  balanceOf(msg.sender, id) */\n      tag_124\n        /* \"NFT Tokens/Tk9.sol\":720:730  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk9.sol\":732:734  id */\n      dup5\n        /* \"NFT Tokens/Tk9.sol\":710:719  balanceOf */\n      tag_21\n        /* \"NFT Tokens/Tk9.sol\":710:735  balanceOf(msg.sender, id) */\n      jump\t// in\n    tag_124:\n        /* \"NFT Tokens/Tk9.sol\":710:745  balanceOf(msg.sender, id) >= amount */\n      lt\n      iszero\n        /* \"NFT Tokens/Tk9.sol\":702:778  require(balanceOf(msg.sender, id) >= amount, \"Insufficient balance to burn\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9968:9970   */\n      0x20\n        /* \"NFT Tokens/Tk9.sol\":702:778  require(balanceOf(msg.sender, id) >= amount, \"Insufficient balance to burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9950:9971   */\n      mstore\n        /* \"#utility.yul\":10007:10009   */\n      0x1c\n        /* \"#utility.yul\":9987:10005   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9980:10010   */\n      mstore\n        /* \"#utility.yul\":10046:10076   */\n      0x496e73756666696369656e742062616c616e636520746f206275726e00000000\n        /* \"#utility.yul\":10026:10044   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10019:10077   */\n      mstore\n        /* \"#utility.yul\":10094:10112   */\n      0x64\n      add\n        /* \"NFT Tokens/Tk9.sol\":702:778  require(balanceOf(msg.sender, id) >= amount, \"Insufficient balance to burn\") */\n      tag_101\n        /* \"#utility.yul\":9766:10118   */\n      jump\n        /* \"NFT Tokens/Tk9.sol\":702:778  require(balanceOf(msg.sender, id) >= amount, \"Insufficient balance to burn\") */\n    tag_125:\n        /* \"NFT Tokens/Tk9.sol\":788:817  _burn(msg.sender, id, amount) */\n      tag_128\n        /* \"NFT Tokens/Tk9.sol\":794:804  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk9.sol\":806:808  id */\n      dup4\n        /* \"NFT Tokens/Tk9.sol\":810:816  amount */\n      dup4\n        /* \"NFT Tokens/Tk9.sol\":788:793  _burn */\n      tag_129\n        /* \"NFT Tokens/Tk9.sol\":788:817  _burn(msg.sender, id, amount) */\n      jump\t// in\n    tag_128:\n        /* \"NFT Tokens/Tk9.sol\":827:842  totalSupply[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"NFT Tokens/Tk9.sol\":827:838  totalSupply */\n      0x03\n        /* \"NFT Tokens/Tk9.sol\":827:842  totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NFT Tokens/Tk9.sol\":827:852  totalSupply[id] -= amount */\n      dup1\n      sload\n        /* \"NFT Tokens/Tk9.sol\":846:852  amount */\n      dup4\n      swap3\n        /* \"NFT Tokens/Tk9.sol\":827:842  totalSupply[id] */\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":827:852  totalSupply[id] -= amount */\n      tag_130\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":846:852  amount */\n      dup5\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":827:852  totalSupply[id] -= amount */\n      tag_131\n      jump\t// in\n    tag_130:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"NFT Tokens/Tk9.sol\":643:859  function burnTokens(uint id, uint amount) public {... */\n      jump\t// out\n        /* \"NFT Tokens/Tk9.sol\":260:459  function addTokenType(uint initialSupply) public {... */\n    tag_60:\n        /* \"NFT Tokens/Tk9.sol\":334:345  totalSupply */\n      0x03\n        /* \"NFT Tokens/Tk9.sol\":334:348  totalSupply[0] */\n      0x20\n      swap1\n      dup2\n      mstore\n      sload(0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff)\n        /* \"NFT Tokens/Tk9.sol\":319:331  uint tokenId */\n      0x00\n        /* \"NFT Tokens/Tk9.sol\":358:378  totalSupply[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"NFT Tokens/Tk9.sol\":334:348  totalSupply[0] */\n      0x40\n        /* \"NFT Tokens/Tk9.sol\":358:378  totalSupply[tokenId] */\n      dup1\n      dup3\n      keccak256\n        /* \"NFT Tokens/Tk9.sol\":358:394  totalSupply[tokenId] = initialSupply */\n      dup6\n      swap1\n      sstore\n        /* \"NFT Tokens/Tk9.sol\":404:452  _mint(address(this), tokenId, initialSupply, \"\") */\n      dup1\n      mload\n      swap4\n      dup5\n      add\n      swap1\n      mstore\n      dup3\n      mstore\n        /* \"NFT Tokens/Tk9.sol\":334:348  totalSupply[0] */\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":404:452  _mint(address(this), tokenId, initialSupply, \"\") */\n      tag_133\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":418:422  this */\n      address\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":334:348  totalSupply[0] */\n      dup4\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":381:394  initialSupply */\n      dup6\n      swap1\n        /* \"NFT Tokens/Tk9.sol\":404:409  _mint */\n      tag_134\n        /* \"NFT Tokens/Tk9.sol\":404:452  _mint(address(this), tokenId, initialSupply, \"\") */\n      jump\t// in\n    tag_133:\n        /* \"NFT Tokens/Tk9.sol\":309:459  {... */\n      pop\n        /* \"NFT Tokens/Tk9.sol\":260:459  function addTokenType(uint initialSupply) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      tag_142\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9302:9317   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9284:9318   */\n      mstore\n        /* \"#utility.yul\":9354:9369   */\n      dup8\n      and\n        /* \"#utility.yul\":9334:9352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9327:9370   */\n      mstore\n        /* \"#utility.yul\":9219:9237   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      tag_101\n        /* \"#utility.yul\":9072:9376   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      0xa0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_155\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_103\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      shl(0xe8, 0xced3e1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      dup6\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_103)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9555:9580   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9596:9614   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9589:9623   */\n      mstore\n        /* \"#utility.yul\":9528:9546   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      tag_101\n        /* \"#utility.yul\":9381:9629   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup2\n      dup2\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup6\n      dup2\n      add\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup6\n      add\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      dup9\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      shl(0xe0, 0x03dee4c5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10845:10877   */\n      dup11\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10827:10878   */\n      mstore\n        /* \"#utility.yul\":10894:10912   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10887:10921   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10937:10955   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10930:10964   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10980:10998   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":10973:11007   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10799:10818   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      tag_101\n        /* \"#utility.yul\":10596:11013   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      dup8\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_210\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_211\n      jump\t// in\n    tag_210:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_209:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_215\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":9555:9580   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"#utility.yul\":9596:9614   */\n      dup3\n      add\n        /* \"#utility.yul\":9589:9623   */\n      mstore\n        /* \"#utility.yul\":9543:9545   */\n      0x40\n        /* \"#utility.yul\":9528:9546   */\n      add\n      swap1\n        /* \"#utility.yul\":9381:9629   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_155)\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      tag_221\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      0x04\n      add\n      tag_222\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_224\n      swap2\n      dup2\n      add\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x01\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_226\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_231\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_230)\n    tag_231:\n      0x60\n      swap2\n      pop\n    tag_230:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10552:10584   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_226:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10552:10584   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      tag_240\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_240:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_243\n      swap2\n      dup2\n      add\n      swap1\n      tag_225\n      jump\t// in\n    tag_243:\n      0x01\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_244\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_231\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_230)\n    tag_244:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10552:10584   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10534:10585   */\n      mstore\n        /* \"#utility.yul\":10507:10525   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      tag_101\n        /* \"#utility.yul\":10388:10591   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_256:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_267:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_20:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_269:\n        /* \"#utility.yul\":360:389   */\n      tag_270\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_256\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_273:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_26:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_275:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_276\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_257\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_32:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1685   */\n    tag_258:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1559:1565   */\n      dup1\n        /* \"#utility.yul\":1552:1556   */\n      0x20\n        /* \"#utility.yul\":1545:1550   */\n      dup5\n        /* \"#utility.yul\":1541:1557   */\n      add\n        /* \"#utility.yul\":1534:1538   */\n      0x20\n        /* \"#utility.yul\":1529:1532   */\n      dup7\n        /* \"#utility.yul\":1525:1539   */\n      add\n        /* \"#utility.yul\":1519:1566   */\n      mcopy\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1604:1608   */\n      0x20\n        /* \"#utility.yul\":1595:1601   */\n      dup3\n        /* \"#utility.yul\":1590:1593   */\n      dup7\n        /* \"#utility.yul\":1586:1602   */\n      add\n        /* \"#utility.yul\":1582:1609   */\n      add\n        /* \"#utility.yul\":1575:1613   */\n      mstore\n        /* \"#utility.yul\":1674:1678   */\n      0x20\n        /* \"#utility.yul\":1667:1669   */\n      0x1f\n        /* \"#utility.yul\":1663:1670   */\n      not\n        /* \"#utility.yul\":1658:1660   */\n      0x1f\n        /* \"#utility.yul\":1650:1656   */\n      dup4\n        /* \"#utility.yul\":1646:1661   */\n      add\n        /* \"#utility.yul\":1642:1671   */\n      and\n        /* \"#utility.yul\":1637:1640   */\n      dup6\n        /* \"#utility.yul\":1633:1672   */\n      add\n        /* \"#utility.yul\":1629:1679   */\n      add\n        /* \"#utility.yul\":1622:1679   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1690:1910   */\n    tag_35:\n        /* \"#utility.yul\":1839:1841   */\n      0x20\n        /* \"#utility.yul\":1828:1837   */\n      dup2\n        /* \"#utility.yul\":1821:1842   */\n      mstore\n        /* \"#utility.yul\":1802:1806   */\n      0x00\n        /* \"#utility.yul\":1859:1904   */\n      tag_276\n        /* \"#utility.yul\":1900:1902   */\n      0x20\n        /* \"#utility.yul\":1889:1898   */\n      dup4\n        /* \"#utility.yul\":1885:1903   */\n      add\n        /* \"#utility.yul\":1877:1883   */\n      dup5\n        /* \"#utility.yul\":1859:1904   */\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":1915:2042   */\n    tag_110:\n        /* \"#utility.yul\":1976:1986   */\n      0x4e487b71\n        /* \"#utility.yul\":1971:1974   */\n      0xe0\n        /* \"#utility.yul\":1967:1987   */\n      shl\n        /* \"#utility.yul\":1964:1965   */\n      0x00\n        /* \"#utility.yul\":1957:1988   */\n      mstore\n        /* \"#utility.yul\":2007:2011   */\n      0x41\n        /* \"#utility.yul\":2004:2005   */\n      0x04\n        /* \"#utility.yul\":1997:2012   */\n      mstore\n        /* \"#utility.yul\":2031:2035   */\n      0x24\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2021:2036   */\n      revert\n        /* \"#utility.yul\":2047:2322   */\n    tag_259:\n        /* \"#utility.yul\":2118:2120   */\n      0x40\n        /* \"#utility.yul\":2112:2121   */\n      mload\n        /* \"#utility.yul\":2183:2185   */\n      0x1f\n        /* \"#utility.yul\":2164:2177   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2160:2187   */\n      and\n        /* \"#utility.yul\":2148:2188   */\n      dup2\n      add\n        /* \"#utility.yul\":2218:2236   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2203:2237   */\n      dup2\n      gt\n        /* \"#utility.yul\":2239:2261   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2200:2262   */\n      or\n        /* \"#utility.yul\":2197:2285   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2265:2283   */\n      tag_286\n      tag_110\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2301:2303   */\n      0x40\n        /* \"#utility.yul\":2294:2316   */\n      mstore\n        /* \"#utility.yul\":2047:2322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2510   */\n    tag_260:\n        /* \"#utility.yul\":2387:2391   */\n      0x00\n        /* \"#utility.yul\":2420:2438   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2412:2418   */\n      dup3\n        /* \"#utility.yul\":2409:2439   */\n      gt\n        /* \"#utility.yul\":2406:2462   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2442:2460   */\n      tag_289\n      tag_110\n      jump\t// in\n    tag_289:\n      pop\n        /* \"#utility.yul\":2487:2488   */\n      0x05\n        /* \"#utility.yul\":2483:2497   */\n      shl\n        /* \"#utility.yul\":2499:2503   */\n      0x20\n        /* \"#utility.yul\":2479:2504   */\n      add\n      swap1\n        /* \"#utility.yul\":2327:2510   */\n      jump\t// out\n        /* \"#utility.yul\":2515:3183   */\n    tag_261:\n        /* \"#utility.yul\":2569:2574   */\n      0x00\n        /* \"#utility.yul\":2622:2625   */\n      dup3\n        /* \"#utility.yul\":2615:2619   */\n      0x1f\n        /* \"#utility.yul\":2607:2613   */\n      dup4\n        /* \"#utility.yul\":2603:2620   */\n      add\n        /* \"#utility.yul\":2599:2626   */\n      slt\n        /* \"#utility.yul\":2589:2644   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2637:2638   */\n      dup1\n        /* \"#utility.yul\":2630:2642   */\n      revert\n        /* \"#utility.yul\":2589:2644   */\n    tag_291:\n        /* \"#utility.yul\":2676:2682   */\n      dup2\n        /* \"#utility.yul\":2663:2683   */\n      calldataload\n        /* \"#utility.yul\":2702:2706   */\n      0x20\n        /* \"#utility.yul\":2726:2786   */\n      tag_292\n        /* \"#utility.yul\":2742:2785   */\n      tag_293\n        /* \"#utility.yul\":2782:2784   */\n      dup4\n        /* \"#utility.yul\":2742:2785   */\n      tag_260\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2726:2786   */\n      tag_259\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2808:2811   */\n      dup1\n        /* \"#utility.yul\":2832:2834   */\n      dup4\n        /* \"#utility.yul\":2827:2830   */\n      dup3\n        /* \"#utility.yul\":2820:2835   */\n      mstore\n        /* \"#utility.yul\":2860:2864   */\n      0x20\n        /* \"#utility.yul\":2855:2858   */\n      dup3\n        /* \"#utility.yul\":2851:2865   */\n      add\n        /* \"#utility.yul\":2844:2865   */\n      swap2\n      pop\n        /* \"#utility.yul\":2917:2921   */\n      0x20\n        /* \"#utility.yul\":2911:2913   */\n      dup5\n        /* \"#utility.yul\":2908:2909   */\n      0x05\n        /* \"#utility.yul\":2904:2914   */\n      shl\n        /* \"#utility.yul\":2896:2902   */\n      dup8\n        /* \"#utility.yul\":2892:2915   */\n      add\n        /* \"#utility.yul\":2888:2922   */\n      add\n        /* \"#utility.yul\":2874:2922   */\n      swap4\n      pop\n        /* \"#utility.yul\":2945:2948   */\n      dup7\n        /* \"#utility.yul\":2937:2943   */\n      dup5\n        /* \"#utility.yul\":2934:2949   */\n      gt\n        /* \"#utility.yul\":2931:2966   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2962:2963   */\n      0x00\n        /* \"#utility.yul\":2959:2960   */\n      dup1\n        /* \"#utility.yul\":2952:2964   */\n      revert\n        /* \"#utility.yul\":2931:2966   */\n    tag_294:\n        /* \"#utility.yul\":2998:3002   */\n      0x20\n        /* \"#utility.yul\":2990:2996   */\n      dup7\n        /* \"#utility.yul\":2986:3003   */\n      add\n        /* \"#utility.yul\":3012:3154   */\n    tag_295:\n        /* \"#utility.yul\":3028:3034   */\n      dup5\n        /* \"#utility.yul\":3023:3026   */\n      dup2\n        /* \"#utility.yul\":3020:3035   */\n      lt\n        /* \"#utility.yul\":3012:3154   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3094:3111   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3082:3112   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3132:3144   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3045:3057   */\n      dup4\n      add\n        /* \"#utility.yul\":3012:3154   */\n      jump(tag_295)\n    tag_297:\n      pop\n        /* \"#utility.yul\":3172:3177   */\n      swap7\n        /* \"#utility.yul\":2515:3183   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3857   */\n    tag_38:\n        /* \"#utility.yul\":3315:3321   */\n      0x00\n        /* \"#utility.yul\":3323:3329   */\n      dup1\n        /* \"#utility.yul\":3331:3337   */\n      0x00\n        /* \"#utility.yul\":3384:3386   */\n      0x60\n        /* \"#utility.yul\":3372:3381   */\n      dup5\n        /* \"#utility.yul\":3363:3370   */\n      dup7\n        /* \"#utility.yul\":3359:3382   */\n      sub\n        /* \"#utility.yul\":3355:3387   */\n      slt\n        /* \"#utility.yul\":3352:3404   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3397:3398   */\n      dup1\n        /* \"#utility.yul\":3390:3402   */\n      revert\n        /* \"#utility.yul\":3352:3404   */\n    tag_299:\n        /* \"#utility.yul\":3423:3452   */\n      tag_300\n        /* \"#utility.yul\":3442:3451   */\n      dup5\n        /* \"#utility.yul\":3423:3452   */\n      tag_256\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3413:3452   */\n      swap3\n      pop\n        /* \"#utility.yul\":3503:3505   */\n      0x20\n        /* \"#utility.yul\":3492:3501   */\n      dup5\n        /* \"#utility.yul\":3488:3506   */\n      add\n        /* \"#utility.yul\":3475:3507   */\n      calldataload\n        /* \"#utility.yul\":3526:3544   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3567:3569   */\n      dup1\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3556:3570   */\n      gt\n        /* \"#utility.yul\":3553:3587   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3583:3584   */\n      0x00\n        /* \"#utility.yul\":3580:3581   */\n      dup1\n        /* \"#utility.yul\":3573:3585   */\n      revert\n        /* \"#utility.yul\":3553:3587   */\n    tag_301:\n        /* \"#utility.yul\":3606:3667   */\n      tag_302\n        /* \"#utility.yul\":3659:3666   */\n      dup8\n        /* \"#utility.yul\":3650:3656   */\n      dup4\n        /* \"#utility.yul\":3639:3648   */\n      dup9\n        /* \"#utility.yul\":3635:3657   */\n      add\n        /* \"#utility.yul\":3606:3667   */\n      tag_261\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3596:3667   */\n      swap4\n      pop\n        /* \"#utility.yul\":3720:3722   */\n      0x40\n        /* \"#utility.yul\":3709:3718   */\n      dup7\n        /* \"#utility.yul\":3705:3723   */\n      add\n        /* \"#utility.yul\":3692:3724   */\n      calldataload\n        /* \"#utility.yul\":3676:3724   */\n      swap2\n      pop\n        /* \"#utility.yul\":3749:3751   */\n      dup1\n        /* \"#utility.yul\":3739:3747   */\n      dup3\n        /* \"#utility.yul\":3736:3752   */\n      gt\n        /* \"#utility.yul\":3733:3769   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3765:3766   */\n      0x00\n        /* \"#utility.yul\":3762:3763   */\n      dup1\n        /* \"#utility.yul\":3755:3767   */\n      revert\n        /* \"#utility.yul\":3733:3769   */\n    tag_303:\n      pop\n        /* \"#utility.yul\":3788:3851   */\n      tag_304\n        /* \"#utility.yul\":3843:3850   */\n      dup7\n        /* \"#utility.yul\":3832:3840   */\n      dup3\n        /* \"#utility.yul\":3821:3830   */\n      dup8\n        /* \"#utility.yul\":3817:3841   */\n      add\n        /* \"#utility.yul\":3788:3851   */\n      tag_261\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3778:3851   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3188:3857   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3862:4392   */\n    tag_262:\n        /* \"#utility.yul\":3904:3909   */\n      0x00\n        /* \"#utility.yul\":3957:3960   */\n      dup3\n        /* \"#utility.yul\":3950:3954   */\n      0x1f\n        /* \"#utility.yul\":3942:3948   */\n      dup4\n        /* \"#utility.yul\":3938:3955   */\n      add\n        /* \"#utility.yul\":3934:3961   */\n      slt\n        /* \"#utility.yul\":3924:3979   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3975:3976   */\n      0x00\n        /* \"#utility.yul\":3972:3973   */\n      dup1\n        /* \"#utility.yul\":3965:3977   */\n      revert\n        /* \"#utility.yul\":3924:3979   */\n    tag_306:\n        /* \"#utility.yul\":4011:4017   */\n      dup2\n        /* \"#utility.yul\":3998:4018   */\n      calldataload\n        /* \"#utility.yul\":4037:4055   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4033:4035   */\n      dup2\n        /* \"#utility.yul\":4030:4056   */\n      gt\n        /* \"#utility.yul\":4027:4079   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4059:4077   */\n      tag_308\n      tag_110\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4103:4158   */\n      tag_309\n        /* \"#utility.yul\":4146:4148   */\n      0x1f\n        /* \"#utility.yul\":4127:4140   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4123:4150   */\n      and\n        /* \"#utility.yul\":4152:4156   */\n      0x20\n        /* \"#utility.yul\":4119:4157   */\n      add\n        /* \"#utility.yul\":4103:4158   */\n      tag_259\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4183:4185   */\n      dup2\n        /* \"#utility.yul\":4174:4181   */\n      dup2\n        /* \"#utility.yul\":4167:4186   */\n      mstore\n        /* \"#utility.yul\":4229:4232   */\n      dup5\n        /* \"#utility.yul\":4222:4226   */\n      0x20\n        /* \"#utility.yul\":4217:4219   */\n      dup4\n        /* \"#utility.yul\":4209:4215   */\n      dup7\n        /* \"#utility.yul\":4205:4220   */\n      add\n        /* \"#utility.yul\":4201:4227   */\n      add\n        /* \"#utility.yul\":4198:4233   */\n      gt\n        /* \"#utility.yul\":4195:4250   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4246:4247   */\n      0x00\n        /* \"#utility.yul\":4243:4244   */\n      dup1\n        /* \"#utility.yul\":4236:4248   */\n      revert\n        /* \"#utility.yul\":4195:4250   */\n    tag_310:\n        /* \"#utility.yul\":4311:4313   */\n      dup2\n        /* \"#utility.yul\":4304:4308   */\n      0x20\n        /* \"#utility.yul\":4296:4302   */\n      dup6\n        /* \"#utility.yul\":4292:4309   */\n      add\n        /* \"#utility.yul\":4285:4289   */\n      0x20\n        /* \"#utility.yul\":4276:4283   */\n      dup4\n        /* \"#utility.yul\":4272:4290   */\n      add\n        /* \"#utility.yul\":4259:4314   */\n      calldatacopy\n        /* \"#utility.yul\":4359:4360   */\n      0x00\n        /* \"#utility.yul\":4334:4350   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4352:4356   */\n      0x20\n        /* \"#utility.yul\":4330:4357   */\n      add\n        /* \"#utility.yul\":4323:4361   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4338:4345   */\n      swap4\n        /* \"#utility.yul\":3862:4392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4397:5340   */\n    tag_46:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4559:4565   */\n      dup1\n        /* \"#utility.yul\":4567:4573   */\n      0x00\n        /* \"#utility.yul\":4575:4581   */\n      dup1\n        /* \"#utility.yul\":4583:4589   */\n      0x00\n        /* \"#utility.yul\":4636:4639   */\n      0xa0\n        /* \"#utility.yul\":4624:4633   */\n      dup7\n        /* \"#utility.yul\":4615:4622   */\n      dup9\n        /* \"#utility.yul\":4611:4634   */\n      sub\n        /* \"#utility.yul\":4607:4640   */\n      slt\n        /* \"#utility.yul\":4604:4657   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4653:4654   */\n      0x00\n        /* \"#utility.yul\":4650:4651   */\n      dup1\n        /* \"#utility.yul\":4643:4655   */\n      revert\n        /* \"#utility.yul\":4604:4657   */\n    tag_312:\n        /* \"#utility.yul\":4676:4705   */\n      tag_313\n        /* \"#utility.yul\":4695:4704   */\n      dup7\n        /* \"#utility.yul\":4676:4705   */\n      tag_256\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4666:4705   */\n      swap5\n      pop\n        /* \"#utility.yul\":4724:4762   */\n      tag_314\n        /* \"#utility.yul\":4758:4760   */\n      0x20\n        /* \"#utility.yul\":4747:4756   */\n      dup8\n        /* \"#utility.yul\":4743:4761   */\n      add\n        /* \"#utility.yul\":4724:4762   */\n      tag_256\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4714:4762   */\n      swap4\n      pop\n        /* \"#utility.yul\":4813:4815   */\n      0x40\n        /* \"#utility.yul\":4802:4811   */\n      dup7\n        /* \"#utility.yul\":4798:4816   */\n      add\n        /* \"#utility.yul\":4785:4817   */\n      calldataload\n        /* \"#utility.yul\":4836:4854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4877:4879   */\n      dup1\n        /* \"#utility.yul\":4869:4875   */\n      dup3\n        /* \"#utility.yul\":4866:4880   */\n      gt\n        /* \"#utility.yul\":4863:4897   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4893:4894   */\n      0x00\n        /* \"#utility.yul\":4890:4891   */\n      dup1\n        /* \"#utility.yul\":4883:4895   */\n      revert\n        /* \"#utility.yul\":4863:4897   */\n    tag_315:\n        /* \"#utility.yul\":4916:4977   */\n      tag_316\n        /* \"#utility.yul\":4969:4976   */\n      dup10\n        /* \"#utility.yul\":4960:4966   */\n      dup4\n        /* \"#utility.yul\":4949:4958   */\n      dup11\n        /* \"#utility.yul\":4945:4967   */\n      add\n        /* \"#utility.yul\":4916:4977   */\n      tag_261\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4906:4977   */\n      swap5\n      pop\n        /* \"#utility.yul\":5030:5032   */\n      0x60\n        /* \"#utility.yul\":5019:5028   */\n      dup9\n        /* \"#utility.yul\":5015:5033   */\n      add\n        /* \"#utility.yul\":5002:5034   */\n      calldataload\n        /* \"#utility.yul\":4986:5034   */\n      swap2\n      pop\n        /* \"#utility.yul\":5059:5061   */\n      dup1\n        /* \"#utility.yul\":5049:5057   */\n      dup3\n        /* \"#utility.yul\":5046:5062   */\n      gt\n        /* \"#utility.yul\":5043:5079   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5072:5073   */\n      dup1\n        /* \"#utility.yul\":5065:5077   */\n      revert\n        /* \"#utility.yul\":5043:5079   */\n    tag_317:\n        /* \"#utility.yul\":5098:5161   */\n      tag_318\n        /* \"#utility.yul\":5153:5160   */\n      dup10\n        /* \"#utility.yul\":5142:5150   */\n      dup4\n        /* \"#utility.yul\":5131:5140   */\n      dup11\n        /* \"#utility.yul\":5127:5151   */\n      add\n        /* \"#utility.yul\":5098:5161   */\n      tag_261\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5088:5161   */\n      swap4\n      pop\n        /* \"#utility.yul\":5214:5217   */\n      0x80\n        /* \"#utility.yul\":5203:5212   */\n      dup9\n        /* \"#utility.yul\":5199:5218   */\n      add\n        /* \"#utility.yul\":5186:5219   */\n      calldataload\n        /* \"#utility.yul\":5170:5219   */\n      swap2\n      pop\n        /* \"#utility.yul\":5244:5246   */\n      dup1\n        /* \"#utility.yul\":5234:5242   */\n      dup3\n        /* \"#utility.yul\":5231:5247   */\n      gt\n        /* \"#utility.yul\":5228:5264   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5260:5261   */\n      0x00\n        /* \"#utility.yul\":5257:5258   */\n      dup1\n        /* \"#utility.yul\":5250:5262   */\n      revert\n        /* \"#utility.yul\":5228:5264   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":5283:5334   */\n      tag_320\n        /* \"#utility.yul\":5326:5333   */\n      dup9\n        /* \"#utility.yul\":5315:5323   */\n      dup3\n        /* \"#utility.yul\":5304:5313   */\n      dup10\n        /* \"#utility.yul\":5300:5324   */\n      add\n        /* \"#utility.yul\":5283:5334   */\n      tag_262\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5273:5334   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4397:5340   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:6491   */\n    tag_50:\n        /* \"#utility.yul\":5463:5469   */\n      0x00\n        /* \"#utility.yul\":5471:5477   */\n      dup1\n        /* \"#utility.yul\":5524:5526   */\n      0x40\n        /* \"#utility.yul\":5512:5521   */\n      dup4\n        /* \"#utility.yul\":5503:5510   */\n      dup6\n        /* \"#utility.yul\":5499:5522   */\n      sub\n        /* \"#utility.yul\":5495:5527   */\n      slt\n        /* \"#utility.yul\":5492:5544   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5540:5541   */\n      0x00\n        /* \"#utility.yul\":5537:5538   */\n      dup1\n        /* \"#utility.yul\":5530:5542   */\n      revert\n        /* \"#utility.yul\":5492:5544   */\n    tag_322:\n        /* \"#utility.yul\":5580:5589   */\n      dup3\n        /* \"#utility.yul\":5567:5590   */\n      calldataload\n        /* \"#utility.yul\":5609:5627   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5650:5652   */\n      dup1\n        /* \"#utility.yul\":5642:5648   */\n      dup3\n        /* \"#utility.yul\":5639:5653   */\n      gt\n        /* \"#utility.yul\":5636:5670   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5666:5667   */\n      0x00\n        /* \"#utility.yul\":5663:5664   */\n      dup1\n        /* \"#utility.yul\":5656:5668   */\n      revert\n        /* \"#utility.yul\":5636:5670   */\n    tag_323:\n        /* \"#utility.yul\":5704:5710   */\n      dup2\n        /* \"#utility.yul\":5693:5702   */\n      dup6\n        /* \"#utility.yul\":5689:5711   */\n      add\n        /* \"#utility.yul\":5679:5711   */\n      swap2\n      pop\n        /* \"#utility.yul\":5749:5756   */\n      dup6\n        /* \"#utility.yul\":5742:5746   */\n      0x1f\n        /* \"#utility.yul\":5738:5740   */\n      dup4\n        /* \"#utility.yul\":5734:5747   */\n      add\n        /* \"#utility.yul\":5730:5757   */\n      slt\n        /* \"#utility.yul\":5720:5775   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":5771:5772   */\n      0x00\n        /* \"#utility.yul\":5768:5769   */\n      dup1\n        /* \"#utility.yul\":5761:5773   */\n      revert\n        /* \"#utility.yul\":5720:5775   */\n    tag_324:\n        /* \"#utility.yul\":5807:5809   */\n      dup2\n        /* \"#utility.yul\":5794:5810   */\n      calldataload\n        /* \"#utility.yul\":5829:5833   */\n      0x20\n        /* \"#utility.yul\":5853:5913   */\n      tag_325\n        /* \"#utility.yul\":5869:5912   */\n      tag_293\n        /* \"#utility.yul\":5909:5911   */\n      dup4\n        /* \"#utility.yul\":5869:5912   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":5853:5913   */\n    tag_325:\n        /* \"#utility.yul\":5947:5962   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":6029:6030   */\n      0x05\n        /* \"#utility.yul\":6025:6035   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":6017:6036   */\n      dup5\n      add\n        /* \"#utility.yul\":6013:6041   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":5978:5990   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6053:6072   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":6050:6089   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6085:6086   */\n      0x00\n        /* \"#utility.yul\":6082:6083   */\n      dup1\n        /* \"#utility.yul\":6075:6087   */\n      revert\n        /* \"#utility.yul\":6050:6089   */\n    tag_327:\n        /* \"#utility.yul\":6109:6120   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6129:6277   */\n    tag_328:\n        /* \"#utility.yul\":6145:6151   */\n      dup4\n        /* \"#utility.yul\":6140:6143   */\n      dup7\n        /* \"#utility.yul\":6137:6152   */\n      lt\n        /* \"#utility.yul\":6129:6277   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":6211:6234   */\n      tag_331\n        /* \"#utility.yul\":6230:6233   */\n      dup7\n        /* \"#utility.yul\":6211:6234   */\n      tag_256\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6199:6235   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6162:6174   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6255:6267   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6129:6277   */\n      jump(tag_328)\n    tag_330:\n        /* \"#utility.yul\":6296:6301   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6339:6357   */\n      dup7\n      add\n        /* \"#utility.yul\":6326:6358   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6370:6386   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6367:6403   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6399:6400   */\n      0x00\n        /* \"#utility.yul\":6396:6397   */\n      dup1\n        /* \"#utility.yul\":6389:6401   */\n      revert\n        /* \"#utility.yul\":6367:6403   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":6422:6485   */\n      tag_333\n        /* \"#utility.yul\":6477:6484   */\n      dup6\n        /* \"#utility.yul\":6466:6474   */\n      dup3\n        /* \"#utility.yul\":6455:6464   */\n      dup7\n        /* \"#utility.yul\":6451:6475   */\n      add\n        /* \"#utility.yul\":6422:6485   */\n      tag_261\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6412:6485   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5345:6491   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6935   */\n    tag_263:\n        /* \"#utility.yul\":6549:6552   */\n      0x00\n        /* \"#utility.yul\":6587:6592   */\n      dup2\n        /* \"#utility.yul\":6581:6593   */\n      mload\n        /* \"#utility.yul\":6614:6620   */\n      dup1\n        /* \"#utility.yul\":6609:6612   */\n      dup5\n        /* \"#utility.yul\":6602:6621   */\n      mstore\n        /* \"#utility.yul\":6640:6644   */\n      0x20\n        /* \"#utility.yul\":6669:6673   */\n      dup1\n        /* \"#utility.yul\":6664:6667   */\n      dup6\n        /* \"#utility.yul\":6660:6674   */\n      add\n        /* \"#utility.yul\":6653:6674   */\n      swap5\n      pop\n        /* \"#utility.yul\":6708:6712   */\n      0x20\n        /* \"#utility.yul\":6701:6706   */\n      dup5\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6731:6732   */\n      0x00\n        /* \"#utility.yul\":6741:6910   */\n    tag_335:\n        /* \"#utility.yul\":6755:6761   */\n      dup4\n        /* \"#utility.yul\":6752:6753   */\n      dup2\n        /* \"#utility.yul\":6749:6762   */\n      lt\n        /* \"#utility.yul\":6741:6910   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6816:6829   */\n      dup2\n      mload\n        /* \"#utility.yul\":6804:6830   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6850:6862   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6885:6900   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6777:6778   */\n      0x01\n        /* \"#utility.yul\":6770:6779   */\n      add\n        /* \"#utility.yul\":6741:6910   */\n      jump(tag_335)\n    tag_337:\n      pop\n        /* \"#utility.yul\":6926:6929   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6496:6935   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6940:7201   */\n    tag_53:\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7108:7117   */\n      dup2\n        /* \"#utility.yul\":7101:7122   */\n      mstore\n        /* \"#utility.yul\":7082:7086   */\n      0x00\n        /* \"#utility.yul\":7139:7195   */\n      tag_276\n        /* \"#utility.yul\":7191:7193   */\n      0x20\n        /* \"#utility.yul\":7180:7189   */\n      dup4\n        /* \"#utility.yul\":7176:7194   */\n      add\n        /* \"#utility.yul\":7168:7174   */\n      dup5\n        /* \"#utility.yul\":7139:7195   */\n      tag_263\n      jump\t// in\n        /* \"#utility.yul\":7206:7454   */\n    tag_56:\n        /* \"#utility.yul\":7274:7280   */\n      0x00\n        /* \"#utility.yul\":7282:7288   */\n      dup1\n        /* \"#utility.yul\":7335:7337   */\n      0x40\n        /* \"#utility.yul\":7323:7332   */\n      dup4\n        /* \"#utility.yul\":7314:7321   */\n      dup6\n        /* \"#utility.yul\":7310:7333   */\n      sub\n        /* \"#utility.yul\":7306:7338   */\n      slt\n        /* \"#utility.yul\":7303:7355   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7348:7349   */\n      dup1\n        /* \"#utility.yul\":7341:7353   */\n      revert\n        /* \"#utility.yul\":7303:7355   */\n    tag_341:\n      pop\n      pop\n        /* \"#utility.yul\":7374:7397   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":7444:7446   */\n      0x20\n        /* \"#utility.yul\":7429:7447   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7416:7448   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7206:7454   */\n      jump\t// out\n        /* \"#utility.yul\":7459:7806   */\n    tag_63:\n        /* \"#utility.yul\":7524:7530   */\n      0x00\n        /* \"#utility.yul\":7532:7538   */\n      dup1\n        /* \"#utility.yul\":7585:7587   */\n      0x40\n        /* \"#utility.yul\":7573:7582   */\n      dup4\n        /* \"#utility.yul\":7564:7571   */\n      dup6\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7588   */\n      slt\n        /* \"#utility.yul\":7553:7605   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7601:7602   */\n      0x00\n        /* \"#utility.yul\":7598:7599   */\n      dup1\n        /* \"#utility.yul\":7591:7603   */\n      revert\n        /* \"#utility.yul\":7553:7605   */\n    tag_343:\n        /* \"#utility.yul\":7624:7653   */\n      tag_344\n        /* \"#utility.yul\":7643:7652   */\n      dup4\n        /* \"#utility.yul\":7624:7653   */\n      tag_256\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7614:7653   */\n      swap2\n      pop\n        /* \"#utility.yul\":7703:7705   */\n      0x20\n        /* \"#utility.yul\":7692:7701   */\n      dup4\n        /* \"#utility.yul\":7688:7706   */\n      add\n        /* \"#utility.yul\":7675:7707   */\n      calldataload\n        /* \"#utility.yul\":7750:7755   */\n      dup1\n        /* \"#utility.yul\":7743:7756   */\n      iszero\n        /* \"#utility.yul\":7736:7757   */\n      iszero\n        /* \"#utility.yul\":7729:7734   */\n      dup2\n        /* \"#utility.yul\":7726:7758   */\n      eq\n        /* \"#utility.yul\":7716:7776   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7772:7773   */\n      0x00\n        /* \"#utility.yul\":7769:7770   */\n      dup1\n        /* \"#utility.yul\":7762:7774   */\n      revert\n        /* \"#utility.yul\":7716:7776   */\n    tag_345:\n        /* \"#utility.yul\":7795:7800   */\n      dup1\n        /* \"#utility.yul\":7785:7800   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7459:7806   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7811:8071   */\n    tag_71:\n        /* \"#utility.yul\":7879:7885   */\n      0x00\n        /* \"#utility.yul\":7887:7893   */\n      dup1\n        /* \"#utility.yul\":7940:7942   */\n      0x40\n        /* \"#utility.yul\":7928:7937   */\n      dup4\n        /* \"#utility.yul\":7919:7926   */\n      dup6\n        /* \"#utility.yul\":7915:7938   */\n      sub\n        /* \"#utility.yul\":7911:7943   */\n      slt\n        /* \"#utility.yul\":7908:7960   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7953:7954   */\n      dup1\n        /* \"#utility.yul\":7946:7958   */\n      revert\n        /* \"#utility.yul\":7908:7960   */\n    tag_347:\n        /* \"#utility.yul\":7979:8008   */\n      tag_348\n        /* \"#utility.yul\":7998:8007   */\n      dup4\n        /* \"#utility.yul\":7979:8008   */\n      tag_256\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7969:8008   */\n      swap2\n      pop\n        /* \"#utility.yul\":8027:8065   */\n      tag_349\n        /* \"#utility.yul\":8061:8063   */\n      0x20\n        /* \"#utility.yul\":8050:8059   */\n      dup5\n        /* \"#utility.yul\":8046:8064   */\n      add\n        /* \"#utility.yul\":8027:8065   */\n      tag_256\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8017:8065   */\n      swap1\n      pop\n        /* \"#utility.yul\":7811:8071   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8076:8682   */\n    tag_76:\n        /* \"#utility.yul\":8180:8186   */\n      0x00\n        /* \"#utility.yul\":8188:8194   */\n      dup1\n        /* \"#utility.yul\":8196:8202   */\n      0x00\n        /* \"#utility.yul\":8204:8210   */\n      dup1\n        /* \"#utility.yul\":8212:8218   */\n      0x00\n        /* \"#utility.yul\":8265:8268   */\n      0xa0\n        /* \"#utility.yul\":8253:8262   */\n      dup7\n        /* \"#utility.yul\":8244:8251   */\n      dup9\n        /* \"#utility.yul\":8240:8263   */\n      sub\n        /* \"#utility.yul\":8236:8269   */\n      slt\n        /* \"#utility.yul\":8233:8286   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8282:8283   */\n      0x00\n        /* \"#utility.yul\":8279:8280   */\n      dup1\n        /* \"#utility.yul\":8272:8284   */\n      revert\n        /* \"#utility.yul\":8233:8286   */\n    tag_351:\n        /* \"#utility.yul\":8305:8334   */\n      tag_352\n        /* \"#utility.yul\":8324:8333   */\n      dup7\n        /* \"#utility.yul\":8305:8334   */\n      tag_256\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8295:8334   */\n      swap5\n      pop\n        /* \"#utility.yul\":8353:8391   */\n      tag_353\n        /* \"#utility.yul\":8387:8389   */\n      0x20\n        /* \"#utility.yul\":8376:8385   */\n      dup8\n        /* \"#utility.yul\":8372:8390   */\n      add\n        /* \"#utility.yul\":8353:8391   */\n      tag_256\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8343:8391   */\n      swap4\n      pop\n        /* \"#utility.yul\":8438:8440   */\n      0x40\n        /* \"#utility.yul\":8427:8436   */\n      dup7\n        /* \"#utility.yul\":8423:8441   */\n      add\n        /* \"#utility.yul\":8410:8442   */\n      calldataload\n        /* \"#utility.yul\":8400:8442   */\n      swap3\n      pop\n        /* \"#utility.yul\":8489:8491   */\n      0x60\n        /* \"#utility.yul\":8478:8487   */\n      dup7\n        /* \"#utility.yul\":8474:8492   */\n      add\n        /* \"#utility.yul\":8461:8493   */\n      calldataload\n        /* \"#utility.yul\":8451:8493   */\n      swap2\n      pop\n        /* \"#utility.yul\":8544:8547   */\n      0x80\n        /* \"#utility.yul\":8533:8542   */\n      dup7\n        /* \"#utility.yul\":8529:8548   */\n      add\n        /* \"#utility.yul\":8516:8549   */\n      calldataload\n        /* \"#utility.yul\":8572:8590   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8564:8570   */\n      dup2\n        /* \"#utility.yul\":8561:8591   */\n      gt\n        /* \"#utility.yul\":8558:8608   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":8604:8605   */\n      0x00\n        /* \"#utility.yul\":8601:8602   */\n      dup1\n        /* \"#utility.yul\":8594:8606   */\n      revert\n        /* \"#utility.yul\":8558:8608   */\n    tag_354:\n        /* \"#utility.yul\":8627:8676   */\n      tag_320\n        /* \"#utility.yul\":8668:8675   */\n      dup9\n        /* \"#utility.yul\":8659:8665   */\n      dup3\n        /* \"#utility.yul\":8648:8657   */\n      dup10\n        /* \"#utility.yul\":8644:8666   */\n      add\n        /* \"#utility.yul\":8627:8676   */\n      tag_262\n      jump\t// in\n        /* \"#utility.yul\":8687:9067   */\n    tag_86:\n        /* \"#utility.yul\":8766:8767   */\n      0x01\n        /* \"#utility.yul\":8762:8774   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8809:8821   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8830:8891   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8884:8888   */\n      0x7f\n        /* \"#utility.yul\":8876:8882   */\n      dup3\n        /* \"#utility.yul\":8872:8889   */\n      and\n        /* \"#utility.yul\":8862:8889   */\n      swap2\n      pop\n        /* \"#utility.yul\":8830:8891   */\n    tag_357:\n        /* \"#utility.yul\":8937:8939   */\n      0x20\n        /* \"#utility.yul\":8929:8935   */\n      dup3\n        /* \"#utility.yul\":8926:8940   */\n      lt\n        /* \"#utility.yul\":8906:8924   */\n      dup2\n        /* \"#utility.yul\":8903:8941   */\n      sub\n        /* \"#utility.yul\":8900:9061   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8983:8993   */\n      0x4e487b71\n        /* \"#utility.yul\":8978:8981   */\n      0xe0\n        /* \"#utility.yul\":8974:8994   */\n      shl\n        /* \"#utility.yul\":8971:8972   */\n      0x00\n        /* \"#utility.yul\":8964:8995   */\n      mstore\n        /* \"#utility.yul\":9018:9022   */\n      0x22\n        /* \"#utility.yul\":9015:9016   */\n      0x04\n        /* \"#utility.yul\":9008:9023   */\n      mstore\n        /* \"#utility.yul\":9046:9050   */\n      0x24\n        /* \"#utility.yul\":9043:9044   */\n      0x00\n        /* \"#utility.yul\":9036:9051   */\n      revert\n        /* \"#utility.yul\":8900:9061   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":8687:9067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9634:9761   */\n    tag_122:\n        /* \"#utility.yul\":9695:9705   */\n      0x4e487b71\n        /* \"#utility.yul\":9690:9693   */\n      0xe0\n        /* \"#utility.yul\":9686:9706   */\n      shl\n        /* \"#utility.yul\":9683:9684   */\n      0x00\n        /* \"#utility.yul\":9676:9707   */\n      mstore\n        /* \"#utility.yul\":9726:9730   */\n      0x32\n        /* \"#utility.yul\":9723:9724   */\n      0x04\n        /* \"#utility.yul\":9716:9731   */\n      mstore\n        /* \"#utility.yul\":9750:9754   */\n      0x24\n        /* \"#utility.yul\":9747:9748   */\n      0x00\n        /* \"#utility.yul\":9740:9755   */\n      revert\n        /* \"#utility.yul\":10123:10250   */\n    tag_264:\n        /* \"#utility.yul\":10184:10194   */\n      0x4e487b71\n        /* \"#utility.yul\":10179:10182   */\n      0xe0\n        /* \"#utility.yul\":10175:10195   */\n      shl\n        /* \"#utility.yul\":10172:10173   */\n      0x00\n        /* \"#utility.yul\":10165:10196   */\n      mstore\n        /* \"#utility.yul\":10215:10219   */\n      0x11\n        /* \"#utility.yul\":10212:10213   */\n      0x04\n        /* \"#utility.yul\":10205:10220   */\n      mstore\n        /* \"#utility.yul\":10239:10243   */\n      0x24\n        /* \"#utility.yul\":10236:10237   */\n      0x00\n        /* \"#utility.yul\":10229:10244   */\n      revert\n        /* \"#utility.yul\":10255:10383   */\n    tag_131:\n        /* \"#utility.yul\":10322:10331   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10343:10354   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10340:10377   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":10357:10375   */\n      tag_78\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":11018:11143   */\n    tag_211:\n        /* \"#utility.yul\":11083:11092   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11104:11114   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11101:11137   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":11117:11135   */\n      tag_78\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":11148:11613   */\n    tag_218:\n        /* \"#utility.yul\":11405:11407   */\n      0x40\n        /* \"#utility.yul\":11394:11403   */\n      dup2\n        /* \"#utility.yul\":11387:11408   */\n      mstore\n        /* \"#utility.yul\":11368:11372   */\n      0x00\n        /* \"#utility.yul\":11431:11487   */\n      tag_373\n        /* \"#utility.yul\":11483:11485   */\n      0x40\n        /* \"#utility.yul\":11472:11481   */\n      dup4\n        /* \"#utility.yul\":11468:11486   */\n      add\n        /* \"#utility.yul\":11460:11466   */\n      dup6\n        /* \"#utility.yul\":11431:11487   */\n      tag_263\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11535:11544   */\n      dup3\n        /* \"#utility.yul\":11527:11533   */\n      dup2\n        /* \"#utility.yul\":11523:11545   */\n      sub\n        /* \"#utility.yul\":11518:11520   */\n      0x20\n        /* \"#utility.yul\":11507:11516   */\n      dup5\n        /* \"#utility.yul\":11503:11521   */\n      add\n        /* \"#utility.yul\":11496:11546   */\n      mstore\n        /* \"#utility.yul\":11563:11607   */\n      tag_374\n        /* \"#utility.yul\":11600:11606   */\n      dup2\n        /* \"#utility.yul\":11592:11598   */\n      dup6\n        /* \"#utility.yul\":11563:11607   */\n      tag_263\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11555:11607   */\n      swap6\n        /* \"#utility.yul\":11148:11613   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11618:12179   */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11915:11930   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":11897:11931   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11967:11982   */\n      dup6\n      and\n        /* \"#utility.yul\":11962:11964   */\n      0x20\n        /* \"#utility.yul\":11947:11965   */\n      dup3\n      add\n        /* \"#utility.yul\":11940:11983   */\n      mstore\n        /* \"#utility.yul\":12014:12016   */\n      0x40\n        /* \"#utility.yul\":11999:12017   */\n      dup2\n      add\n        /* \"#utility.yul\":11992:12026   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":12057:12059   */\n      0x60\n        /* \"#utility.yul\":12042:12060   */\n      dup2\n      add\n        /* \"#utility.yul\":12035:12069   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11877:11880   */\n      0xa0\n        /* \"#utility.yul\":12100:12103   */\n      0x80\n        /* \"#utility.yul\":12085:12104   */\n      dup3\n      add\n        /* \"#utility.yul\":12078:12110   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11840:11844   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12127:12173   */\n      tag_376\n      swap1\n        /* \"#utility.yul\":12153:12172   */\n      dup4\n      add\n        /* \"#utility.yul\":12145:12151   */\n      dup5\n        /* \"#utility.yul\":12127:12173   */\n      tag_258\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12119:12173   */\n      swap8\n        /* \"#utility.yul\":11618:12179   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12184:12433   */\n    tag_225:\n        /* \"#utility.yul\":12253:12259   */\n      0x00\n        /* \"#utility.yul\":12306:12308   */\n      0x20\n        /* \"#utility.yul\":12294:12303   */\n      dup3\n        /* \"#utility.yul\":12285:12292   */\n      dup5\n        /* \"#utility.yul\":12281:12304   */\n      sub\n        /* \"#utility.yul\":12277:12309   */\n      slt\n        /* \"#utility.yul\":12274:12326   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":12322:12323   */\n      0x00\n        /* \"#utility.yul\":12319:12320   */\n      dup1\n        /* \"#utility.yul\":12312:12324   */\n      revert\n        /* \"#utility.yul\":12274:12326   */\n    tag_378:\n        /* \"#utility.yul\":12354:12363   */\n      dup2\n        /* \"#utility.yul\":12348:12364   */\n      mload\n        /* \"#utility.yul\":12373:12403   */\n      tag_276\n        /* \"#utility.yul\":12397:12402   */\n      dup2\n        /* \"#utility.yul\":12373:12403   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":12438:13265   */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12835:12850   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":12817:12851   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12887:12902   */\n      dup6\n      and\n        /* \"#utility.yul\":12882:12884   */\n      0x20\n        /* \"#utility.yul\":12867:12885   */\n      dup3\n      add\n        /* \"#utility.yul\":12860:12903   */\n      mstore\n        /* \"#utility.yul\":12797:12800   */\n      0xa0\n        /* \"#utility.yul\":12934:12936   */\n      0x40\n        /* \"#utility.yul\":12919:12937   */\n      dup3\n      add\n        /* \"#utility.yul\":12912:12943   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12760:12764   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12966:13023   */\n      tag_381\n      swap1\n        /* \"#utility.yul\":13003:13022   */\n      dup4\n      add\n        /* \"#utility.yul\":12995:13001   */\n      dup7\n        /* \"#utility.yul\":12966:13023   */\n      tag_263\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13071:13080   */\n      dup3\n        /* \"#utility.yul\":13063:13069   */\n      dup2\n        /* \"#utility.yul\":13059:13081   */\n      sub\n        /* \"#utility.yul\":13054:13056   */\n      0x60\n        /* \"#utility.yul\":13043:13052   */\n      dup5\n        /* \"#utility.yul\":13039:13057   */\n      add\n        /* \"#utility.yul\":13032:13082   */\n      mstore\n        /* \"#utility.yul\":13105:13149   */\n      tag_382\n        /* \"#utility.yul\":13142:13148   */\n      dup2\n        /* \"#utility.yul\":13134:13140   */\n      dup7\n        /* \"#utility.yul\":13105:13149   */\n      tag_263\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13091:13149   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13207   */\n      dup3\n        /* \"#utility.yul\":13190:13196   */\n      dup2\n        /* \"#utility.yul\":13186:13208   */\n      sub\n        /* \"#utility.yul\":13180:13183   */\n      0x80\n        /* \"#utility.yul\":13169:13178   */\n      dup5\n        /* \"#utility.yul\":13165:13184   */\n      add\n        /* \"#utility.yul\":13158:13209   */\n      mstore\n        /* \"#utility.yul\":13226:13259   */\n      tag_383\n        /* \"#utility.yul\":13252:13258   */\n      dup2\n        /* \"#utility.yul\":13244:13250   */\n      dup6\n        /* \"#utility.yul\":13226:13259   */\n      tag_258\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13218:13259   */\n      swap9\n        /* \"#utility.yul\":12438:13265   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220708d813e048a13d9ddbb68ef1d7996ba2d0fd98dc762eae2f4752fe91cbd131064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2799": {
									"entryPoint": null,
									"id": 2799,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_810": {
									"entryPoint": 63,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3615:12",
										"nodeType": "YulBlock",
										"src": "0:3615:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "237:821:12",
													"nodeType": "YulBlock",
													"src": "237:821:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "283:16:12",
																"nodeType": "YulBlock",
																"src": "283:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "292:1:12",
																					"nodeType": "YulLiteral",
																					"src": "292:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "295:1:12",
																					"nodeType": "YulLiteral",
																					"src": "295:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "285:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:12"
																			},
																			"nativeSrc": "285:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:12"
																		},
																		"nativeSrc": "285:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "258:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "267:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "254:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:12"
																		},
																		"nativeSrc": "254:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "279:2:12",
																		"nodeType": "YulLiteral",
																		"src": "279:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "250:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:12"
																},
																"nativeSrc": "250:32:12",
																"nodeType": "YulFunctionCall",
																"src": "250:32:12"
															},
															"nativeSrc": "247:52:12",
															"nodeType": "YulIf",
															"src": "247:52:12"
														},
														{
															"nativeSrc": "308:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "308:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "328:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "328:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "322:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "322:5:12"
																},
																"nativeSrc": "322:16:12",
																"nodeType": "YulFunctionCall",
																"src": "322:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "312:6:12",
																	"nodeType": "YulTypedName",
																	"src": "312:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "347:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "347:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:2:12",
																				"nodeType": "YulLiteral",
																				"src": "365:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "369:1:12",
																				"nodeType": "YulLiteral",
																				"src": "369:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:12"
																		},
																		"nativeSrc": "361:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "361:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "373:1:12",
																		"nodeType": "YulLiteral",
																		"src": "373:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:12"
																},
																"nativeSrc": "357:18:12",
																"nodeType": "YulFunctionCall",
																"src": "357:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "351:2:12",
																	"nodeType": "YulTypedName",
																	"src": "351:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "402:16:12",
																"nodeType": "YulBlock",
																"src": "402:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "411:1:12",
																					"nodeType": "YulLiteral",
																					"src": "411:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:1:12",
																					"nodeType": "YulLiteral",
																					"src": "414:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "404:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:12"
																			},
																			"nativeSrc": "404:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "404:12:12"
																		},
																		"nativeSrc": "404:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "404:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "390:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "390:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "398:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "398:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "387:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:12"
																},
																"nativeSrc": "387:14:12",
																"nodeType": "YulFunctionCall",
																"src": "387:14:12"
															},
															"nativeSrc": "384:34:12",
															"nodeType": "YulIf",
															"src": "384:34:12"
														},
														{
															"nativeSrc": "427:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "427:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "441:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "452:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "437:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "437:3:12"
																},
																"nativeSrc": "437:22:12",
																"nodeType": "YulFunctionCall",
																"src": "437:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "431:2:12",
																	"nodeType": "YulTypedName",
																	"src": "431:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "507:16:12",
																"nodeType": "YulBlock",
																"src": "507:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:12",
																					"nodeType": "YulLiteral",
																					"src": "516:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:12",
																					"nodeType": "YulLiteral",
																					"src": "519:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:12"
																			},
																			"nativeSrc": "509:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:12"
																		},
																		"nativeSrc": "509:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "486:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "486:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "490:4:12",
																						"nodeType": "YulLiteral",
																						"src": "490:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "482:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "482:3:12"
																				},
																				"nativeSrc": "482:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "482:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "497:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "478:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "478:3:12"
																		},
																		"nativeSrc": "478:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "478:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "471:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:12"
																},
																"nativeSrc": "471:35:12",
																"nodeType": "YulFunctionCall",
																"src": "471:35:12"
															},
															"nativeSrc": "468:55:12",
															"nodeType": "YulIf",
															"src": "468:55:12"
														},
														{
															"nativeSrc": "532:19:12",
															"nodeType": "YulVariableDeclaration",
															"src": "532:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "548:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "548:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "542:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:12"
																},
																"nativeSrc": "542:9:12",
																"nodeType": "YulFunctionCall",
																"src": "542:9:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "536:2:12",
																	"nodeType": "YulTypedName",
																	"src": "536:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "574:22:12",
																"nodeType": "YulBlock",
																"src": "574:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "576:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "576:16:12"
																			},
																			"nativeSrc": "576:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "576:18:12"
																		},
																		"nativeSrc": "576:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "576:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "566:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "566:2:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "570:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "570:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "563:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "563:2:12"
																},
																"nativeSrc": "563:10:12",
																"nodeType": "YulFunctionCall",
																"src": "563:10:12"
															},
															"nativeSrc": "560:36:12",
															"nodeType": "YulIf",
															"src": "560:36:12"
														},
														{
															"nativeSrc": "605:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "605:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "619:2:12",
																		"nodeType": "YulLiteral",
																		"src": "619:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "615:3:12"
																},
																"nativeSrc": "615:7:12",
																"nodeType": "YulFunctionCall",
																"src": "615:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "609:2:12",
																	"nodeType": "YulTypedName",
																	"src": "609:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "631:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "631:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "651:2:12",
																		"nodeType": "YulLiteral",
																		"src": "651:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "645:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "645:5:12"
																},
																"nativeSrc": "645:9:12",
																"nodeType": "YulFunctionCall",
																"src": "645:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "635:6:12",
																	"nodeType": "YulTypedName",
																	"src": "635:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "663:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "663:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "685:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "685:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "709:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "709:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "713:4:12",
																										"nodeType": "YulLiteral",
																										"src": "713:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "705:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "705:3:12"
																								},
																								"nativeSrc": "705:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "705:13:12"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "720:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "720:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "701:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "701:3:12"
																						},
																						"nativeSrc": "701:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "701:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "725:2:12",
																						"nodeType": "YulLiteral",
																						"src": "725:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "697:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "697:3:12"
																				},
																				"nativeSrc": "697:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "697:31:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "730:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "693:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:12"
																		},
																		"nativeSrc": "693:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "693:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "681:3:12"
																},
																"nativeSrc": "681:53:12",
																"nodeType": "YulFunctionCall",
																"src": "681:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "667:10:12",
																	"nodeType": "YulTypedName",
																	"src": "667:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "793:22:12",
																"nodeType": "YulBlock",
																"src": "793:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "795:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "795:16:12"
																			},
																			"nativeSrc": "795:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "795:18:12"
																		},
																		"nativeSrc": "795:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "795:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "752:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "752:10:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "764:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "764:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "749:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "749:2:12"
																		},
																		"nativeSrc": "749:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "749:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "772:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "772:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "784:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "769:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "769:2:12"
																		},
																		"nativeSrc": "769:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "769:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "746:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "746:2:12"
																},
																"nativeSrc": "746:46:12",
																"nodeType": "YulFunctionCall",
																"src": "746:46:12"
															},
															"nativeSrc": "743:72:12",
															"nodeType": "YulIf",
															"src": "743:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "831:2:12",
																		"nodeType": "YulLiteral",
																		"src": "831:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "835:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "835:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "824:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "824:6:12"
																},
																"nativeSrc": "824:22:12",
																"nodeType": "YulFunctionCall",
																"src": "824:22:12"
															},
															"nativeSrc": "824:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "824:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "862:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "862:6:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "870:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "870:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:12"
																},
																"nativeSrc": "855:18:12",
																"nodeType": "YulFunctionCall",
																"src": "855:18:12"
															},
															"nativeSrc": "855:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "855:18:12"
														},
														{
															"body": {
																"nativeSrc": "919:16:12",
																"nodeType": "YulBlock",
																"src": "919:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "928:1:12",
																					"nodeType": "YulLiteral",
																					"src": "928:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "931:1:12",
																					"nodeType": "YulLiteral",
																					"src": "931:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "921:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "921:6:12"
																			},
																			"nativeSrc": "921:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "921:12:12"
																		},
																		"nativeSrc": "921:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "921:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "896:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "896:2:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "900:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "900:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "892:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "892:3:12"
																				},
																				"nativeSrc": "892:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "892:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "905:2:12",
																				"nodeType": "YulLiteral",
																				"src": "905:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "888:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "888:3:12"
																		},
																		"nativeSrc": "888:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "888:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "910:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "910:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "885:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "885:2:12"
																},
																"nativeSrc": "885:33:12",
																"nodeType": "YulFunctionCall",
																"src": "885:33:12"
															},
															"nativeSrc": "882:53:12",
															"nodeType": "YulIf",
															"src": "882:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "954:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "962:2:12",
																				"nodeType": "YulLiteral",
																				"src": "962:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:12"
																		},
																		"nativeSrc": "950:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "950:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "971:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "971:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "975:2:12",
																				"nodeType": "YulLiteral",
																				"src": "975:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:12"
																		},
																		"nativeSrc": "967:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "967:11:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "980:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "980:2:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "944:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:12"
																},
																"nativeSrc": "944:39:12",
																"nodeType": "YulFunctionCall",
																"src": "944:39:12"
															},
															"nativeSrc": "944:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "944:39:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1007:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1007:6:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1015:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1003:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:12"
																				},
																				"nativeSrc": "1003:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1003:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1020:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1020:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "999:3:12"
																		},
																		"nativeSrc": "999:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "999:24:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1025:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1025:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "992:6:12"
																},
																"nativeSrc": "992:35:12",
																"nodeType": "YulFunctionCall",
																"src": "992:35:12"
															},
															"nativeSrc": "992:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "992:35:12"
														},
														{
															"nativeSrc": "1036:16:12",
															"nodeType": "YulAssignment",
															"src": "1036:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1046:6:12",
																"nodeType": "YulIdentifier",
																"src": "1046:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1036:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "146:912:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "203:9:12",
														"nodeType": "YulTypedName",
														"src": "203:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "214:7:12",
														"nodeType": "YulTypedName",
														"src": "214:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "226:6:12",
														"nodeType": "YulTypedName",
														"src": "226:6:12",
														"type": ""
													}
												],
												"src": "146:912:12"
											},
											{
												"body": {
													"nativeSrc": "1118:325:12",
													"nodeType": "YulBlock",
													"src": "1118:325:12",
													"statements": [
														{
															"nativeSrc": "1128:22:12",
															"nodeType": "YulAssignment",
															"src": "1128:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1142:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1142:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1145:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1145:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1138:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:12"
																},
																"nativeSrc": "1138:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1138:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1128:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:12"
																}
															]
														},
														{
															"nativeSrc": "1159:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1159:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1189:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1189:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1195:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1195:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:12"
																},
																"nativeSrc": "1185:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1185:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1163:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1163:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1236:31:12",
																"nodeType": "YulBlock",
																"src": "1236:31:12",
																"statements": [
																	{
																		"nativeSrc": "1238:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1238:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1252:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1252:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1260:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1260:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1248:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1248:3:12"
																			},
																			"nativeSrc": "1248:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1248:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1238:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1216:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1216:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1209:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1209:6:12"
																},
																"nativeSrc": "1209:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1209:26:12"
															},
															"nativeSrc": "1206:61:12",
															"nodeType": "YulIf",
															"src": "1206:61:12"
														},
														{
															"body": {
																"nativeSrc": "1326:111:12",
																"nodeType": "YulBlock",
																"src": "1326:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1347:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1354:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1354:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1359:10:12",
																							"nodeType": "YulLiteral",
																							"src": "1359:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1350:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1350:3:12"
																					},
																					"nativeSrc": "1350:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1350:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1340:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:12"
																			},
																			"nativeSrc": "1340:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1340:31:12"
																		},
																		"nativeSrc": "1340:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1340:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1391:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1394:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1394:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1384:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:12"
																			},
																			"nativeSrc": "1384:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1384:15:12"
																		},
																		"nativeSrc": "1384:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1419:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1422:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1422:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1412:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:12"
																			},
																			"nativeSrc": "1412:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:15:12"
																		},
																		"nativeSrc": "1412:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1282:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1282:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1305:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1313:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1313:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1302:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1302:2:12"
																		},
																		"nativeSrc": "1302:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1302:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1279:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1279:2:12"
																},
																"nativeSrc": "1279:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1279:38:12"
															},
															"nativeSrc": "1276:161:12",
															"nodeType": "YulIf",
															"src": "1276:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1063:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1098:4:12",
														"nodeType": "YulTypedName",
														"src": "1098:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1107:6:12",
														"nodeType": "YulTypedName",
														"src": "1107:6:12",
														"type": ""
													}
												],
												"src": "1063:380:12"
											},
											{
												"body": {
													"nativeSrc": "1504:65:12",
													"nodeType": "YulBlock",
													"src": "1504:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1521:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1521:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1524:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1524:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1514:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:12"
																},
																"nativeSrc": "1514:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1514:14:12"
															},
															"nativeSrc": "1514:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "1514:14:12"
														},
														{
															"nativeSrc": "1537:26:12",
															"nodeType": "YulAssignment",
															"src": "1537:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1558:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1558:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1545:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1545:9:12"
																},
																"nativeSrc": "1545:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1545:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1537:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1537:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1448:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1487:3:12",
														"nodeType": "YulTypedName",
														"src": "1487:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1495:4:12",
														"nodeType": "YulTypedName",
														"src": "1495:4:12",
														"type": ""
													}
												],
												"src": "1448:121:12"
											},
											{
												"body": {
													"nativeSrc": "1655:437:12",
													"nodeType": "YulBlock",
													"src": "1655:437:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1688:398:12",
																"nodeType": "YulBlock",
																"src": "1688:398:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1709:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1709:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1712:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1712:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1702:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1702:6:12"
																			},
																			"nativeSrc": "1702:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1702:16:12"
																		},
																		"nativeSrc": "1702:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1702:16:12"
																	},
																	{
																		"nativeSrc": "1731:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1731:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1753:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1753:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1756:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1756:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1743:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:12"
																			},
																			"nativeSrc": "1743:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1735:4:12",
																				"nodeType": "YulTypedName",
																				"src": "1735:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1774:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1774:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1797:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1797:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1807:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1807:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1814:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1814:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1826:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1826:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1810:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:12"
																							},
																							"nativeSrc": "1810:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1810:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1803:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1803:3:12"
																					},
																					"nativeSrc": "1803:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1803:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1793:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1793:3:12"
																			},
																			"nativeSrc": "1793:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1778:11:12",
																				"nodeType": "YulTypedName",
																				"src": "1778:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1868:23:12",
																			"nodeType": "YulBlock",
																			"src": "1868:23:12",
																			"statements": [
																				{
																					"nativeSrc": "1870:19:12",
																					"nodeType": "YulAssignment",
																					"src": "1870:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1885:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1885:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1870:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "1870:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1850:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "1850:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1862:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1862:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1847:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1847:2:12"
																			},
																			"nativeSrc": "1847:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1847:20:12"
																		},
																		"nativeSrc": "1844:47:12",
																		"nodeType": "YulIf",
																		"src": "1844:47:12"
																	},
																	{
																		"nativeSrc": "1904:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1904:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1918:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1918:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1928:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1928:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1935:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1935:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1940:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1940:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1931:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1931:3:12"
																							},
																							"nativeSrc": "1931:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1931:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1924:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1924:3:12"
																					},
																					"nativeSrc": "1924:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1924:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			"nativeSrc": "1914:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1914:31:12"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1908:2:12",
																				"nodeType": "YulTypedName",
																				"src": "1908:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1958:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1958:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1971:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1971:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1962:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1962:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2056:20:12",
																			"nodeType": "YulBlock",
																			"src": "2056:20:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2065:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2065:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2072:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2072:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2058:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2058:6:12"
																						},
																						"nativeSrc": "2058:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2058:16:12"
																					},
																					"nativeSrc": "2058:16:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2058:16:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2006:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2006:5:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2013:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2013:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2003:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2003:2:12"
																			},
																			"nativeSrc": "2003:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2003:13:12"
																		},
																		"nativeSrc": "1995:81:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2017:26:12",
																			"nodeType": "YulBlock",
																			"src": "2017:26:12",
																			"statements": [
																				{
																					"nativeSrc": "2019:22:12",
																					"nodeType": "YulAssignment",
																					"src": "2019:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2032:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2032:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2039:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2039:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2028:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2028:3:12"
																						},
																						"nativeSrc": "2028:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2028:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2019:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "2019:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1999:3:12",
																			"nodeType": "YulBlock",
																			"src": "1999:3:12",
																			"statements": []
																		},
																		"src": "1995:81:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1671:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1671:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1676:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1676:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1668:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1668:2:12"
																},
																"nativeSrc": "1668:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1668:11:12"
															},
															"nativeSrc": "1665:421:12",
															"nodeType": "YulIf",
															"src": "1665:421:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1574:518:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1627:5:12",
														"nodeType": "YulTypedName",
														"src": "1627:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1634:3:12",
														"nodeType": "YulTypedName",
														"src": "1634:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1639:10:12",
														"nodeType": "YulTypedName",
														"src": "1639:10:12",
														"type": ""
													}
												],
												"src": "1574:518:12"
											},
											{
												"body": {
													"nativeSrc": "2182:81:12",
													"nodeType": "YulBlock",
													"src": "2182:81:12",
													"statements": [
														{
															"nativeSrc": "2192:65:12",
															"nodeType": "YulAssignment",
															"src": "2192:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2207:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2207:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2225:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2225:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2228:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2228:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2221:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2221:3:12"
																								},
																								"nativeSrc": "2221:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2221:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2238:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2238:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2234:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2234:3:12"
																								},
																								"nativeSrc": "2234:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2234:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2217:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:12"
																						},
																						"nativeSrc": "2217:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2217:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2213:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2213:3:12"
																				},
																				"nativeSrc": "2213:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2213:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2203:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:12"
																		},
																		"nativeSrc": "2203:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2203:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2249:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2249:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2252:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2252:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2245:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2245:3:12"
																		},
																		"nativeSrc": "2245:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2245:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2200:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2200:2:12"
																},
																"nativeSrc": "2200:57:12",
																"nodeType": "YulFunctionCall",
																"src": "2200:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2192:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2192:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2097:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2159:4:12",
														"nodeType": "YulTypedName",
														"src": "2159:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2165:3:12",
														"nodeType": "YulTypedName",
														"src": "2165:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2173:4:12",
														"nodeType": "YulTypedName",
														"src": "2173:4:12",
														"type": ""
													}
												],
												"src": "2097:166:12"
											},
											{
												"body": {
													"nativeSrc": "2364:1249:12",
													"nodeType": "YulBlock",
													"src": "2364:1249:12",
													"statements": [
														{
															"nativeSrc": "2374:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2374:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2394:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2388:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2388:5:12"
																},
																"nativeSrc": "2388:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2388:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2378:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2378:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2441:22:12",
																"nodeType": "YulBlock",
																"src": "2441:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2443:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2443:16:12"
																			},
																			"nativeSrc": "2443:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2443:18:12"
																		},
																		"nativeSrc": "2443:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2413:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2413:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2429:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2429:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2433:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2433:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2425:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:12"
																				},
																				"nativeSrc": "2425:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2425:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2437:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2437:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:12"
																		},
																		"nativeSrc": "2421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2421:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2410:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2410:2:12"
																},
																"nativeSrc": "2410:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2410:30:12"
															},
															"nativeSrc": "2407:56:12",
															"nodeType": "YulIf",
															"src": "2407:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2516:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2516:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2554:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2554:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2548:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2548:5:12"
																				},
																				"nativeSrc": "2548:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2548:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2522:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "2522:25:12"
																		},
																		"nativeSrc": "2522:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2562:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2562:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2472:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2472:43:12"
																},
																"nativeSrc": "2472:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2472:97:12"
															},
															"nativeSrc": "2472:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "2472:97:12"
														},
														{
															"nativeSrc": "2578:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2578:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2595:1:12",
																"nodeType": "YulLiteral",
																"src": "2595:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2582:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2582:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2605:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2605:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2624:4:12",
																"nodeType": "YulLiteral",
																"src": "2624:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2609:11:12",
																	"nodeType": "YulTypedName",
																	"src": "2609:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2637:17:12",
															"nodeType": "YulAssignment",
															"src": "2637:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2650:4:12",
																"nodeType": "YulLiteral",
																"src": "2650:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2637:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2700:656:12",
																		"nodeType": "YulBlock",
																		"src": "2700:656:12",
																		"statements": [
																			{
																				"nativeSrc": "2714:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2714:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2733:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2733:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2745:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2745:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2741:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2741:3:12"
																							},
																							"nativeSrc": "2741:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2741:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2729:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2729:3:12"
																					},
																					"nativeSrc": "2729:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2729:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2718:7:12",
																						"nodeType": "YulTypedName",
																						"src": "2718:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2762:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2762:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2806:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2806:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2776:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "2776:29:12"
																					},
																					"nativeSrc": "2776:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2776:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2766:6:12",
																						"nodeType": "YulTypedName",
																						"src": "2766:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2824:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2824:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2833:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2828:1:12",
																						"nodeType": "YulTypedName",
																						"src": "2828:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2911:172:12",
																					"nodeType": "YulBlock",
																					"src": "2911:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2936:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2936:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2954:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2954:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2959:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2959:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2950:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2950:3:12"
																												},
																												"nativeSrc": "2950:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2950:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2944:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "2944:5:12"
																										},
																										"nativeSrc": "2944:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2944:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2929:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2929:6:12"
																								},
																								"nativeSrc": "2929:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2929:42:12"
																							},
																							"nativeSrc": "2929:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2929:42:12"
																						},
																						{
																							"nativeSrc": "2988:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2988:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3002:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3002:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3010:1:12",
																										"nodeType": "YulLiteral",
																										"src": "3010:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2998:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2998:3:12"
																								},
																								"nativeSrc": "2998:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2998:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2988:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2988:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3029:40:12",
																							"nodeType": "YulAssignment",
																							"src": "3029:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3046:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "3046:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3057:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3057:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3042:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3042:3:12"
																								},
																								"nativeSrc": "3042:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3042:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3029:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "3029:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2858:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "2858:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2861:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2861:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2855:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2855:2:12"
																					},
																					"nativeSrc": "2855:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2855:14:12"
																				},
																				"nativeSrc": "2847:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2870:28:12",
																					"nodeType": "YulBlock",
																					"src": "2870:28:12",
																					"statements": [
																						{
																							"nativeSrc": "2872:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2872:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2881:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "2881:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2884:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2884:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2877:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2877:3:12"
																								},
																								"nativeSrc": "2877:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2877:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2872:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "2872:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2851:3:12",
																					"nodeType": "YulBlock",
																					"src": "2851:3:12",
																					"statements": []
																				},
																				"src": "2847:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "3131:166:12",
																					"nodeType": "YulBlock",
																					"src": "3131:166:12",
																					"statements": [
																						{
																							"nativeSrc": "3149:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3149:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3176:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3176:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3181:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3181:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3172:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3172:3:12"
																										},
																										"nativeSrc": "3172:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3172:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3166:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3166:5:12"
																								},
																								"nativeSrc": "3166:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3166:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3153:9:12",
																									"nodeType": "YulTypedName",
																									"src": "3153:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3216:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3216:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3228:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3228:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3255:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "3255:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3258:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "3258:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3251:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "3251:3:12"
																																		},
																																		"nativeSrc": "3251:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3251:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3267:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3267:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3247:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3247:3:12"
																																},
																																"nativeSrc": "3247:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3247:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3277:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3277:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3273:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3273:3:12"
																																},
																																"nativeSrc": "3273:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3273:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3243:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "3243:3:12"
																														},
																														"nativeSrc": "3243:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "3243:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3239:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3239:3:12"
																												},
																												"nativeSrc": "3239:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3239:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3224:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3224:3:12"
																										},
																										"nativeSrc": "3224:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3224:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3209:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3209:6:12"
																								},
																								"nativeSrc": "3209:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3209:74:12"
																							},
																							"nativeSrc": "3209:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3209:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3102:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3102:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3111:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3111:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3099:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3099:2:12"
																					},
																					"nativeSrc": "3099:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3099:19:12"
																				},
																				"nativeSrc": "3096:201:12",
																				"nodeType": "YulIf",
																				"src": "3096:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3317:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3317:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3331:1:12",
																											"nodeType": "YulLiteral",
																											"src": "3331:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3334:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "3334:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3327:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "3327:3:12"
																									},
																									"nativeSrc": "3327:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "3327:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3343:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3343:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3323:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3323:3:12"
																							},
																							"nativeSrc": "3323:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3323:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3310:6:12"
																					},
																					"nativeSrc": "3310:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3310:36:12"
																				},
																				"nativeSrc": "3310:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3310:36:12"
																			}
																		]
																	},
																	"nativeSrc": "2693:663:12",
																	"nodeType": "YulCase",
																	"src": "2693:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2698:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2698:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3373:234:12",
																		"nodeType": "YulBlock",
																		"src": "3373:234:12",
																		"statements": [
																			{
																				"nativeSrc": "3387:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3387:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3400:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3400:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3391:5:12",
																						"nodeType": "YulTypedName",
																						"src": "3391:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3436:67:12",
																					"nodeType": "YulBlock",
																					"src": "3436:67:12",
																					"statements": [
																						{
																							"nativeSrc": "3454:35:12",
																							"nodeType": "YulAssignment",
																							"src": "3454:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3473:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3473:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3478:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3478:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3469:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3469:3:12"
																										},
																										"nativeSrc": "3469:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3469:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3463:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3463:5:12"
																								},
																								"nativeSrc": "3463:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3463:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3454:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3454:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3417:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3417:6:12"
																				},
																				"nativeSrc": "3414:89:12",
																				"nodeType": "YulIf",
																				"src": "3414:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3523:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3523:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3582:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3582:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3589:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3589:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3529:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "3529:52:12"
																							},
																							"nativeSrc": "3529:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3529:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3516:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3516:6:12"
																					},
																					"nativeSrc": "3516:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3516:81:12"
																				},
																				"nativeSrc": "3516:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3516:81:12"
																			}
																		]
																	},
																	"nativeSrc": "3365:242:12",
																	"nodeType": "YulCase",
																	"src": "3365:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2673:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2673:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2681:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2681:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2670:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2670:2:12"
																},
																"nativeSrc": "2670:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2670:14:12"
															},
															"nativeSrc": "2663:944:12",
															"nodeType": "YulSwitch",
															"src": "2663:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2268:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2349:4:12",
														"nodeType": "YulTypedName",
														"src": "2349:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2355:3:12",
														"nodeType": "YulTypedName",
														"src": "2355:3:12",
														"type": ""
													}
												],
												"src": "2268:1345:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516115b63803806115b683398101604081905261002e91610063565b806100388161003f565b5050610250565b600261004b8282610191565b5050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610073575f80fd5b81516001600160401b0380821115610089575f80fd5b818401915084601f83011261009c575f80fd5b8151818111156100ae576100ae61004f565b604051601f8201601f19908116603f011681019083821181831017156100d6576100d661004f565b816040528281528760208487010111156100ee575f80fd5b8260208601602083015e5f928101602001929092525095945050505050565b600181811c9082168061012157607f821691505b60208210810361013f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018c57805f5260205f20601f840160051c8101602085101561016a5750805b601f840160051c820191505b81811015610189575f8155600101610176565b50505b505050565b81516001600160401b038111156101aa576101aa61004f565b6101be816101b8845461010d565b84610145565b602080601f8311600181146101f1575f84156101da5750858301515b5f19600386901b1c1916600185901b178555610248565b5f85815260208120601f198616915b8281101561021f57888601518255948401946001909101908401610200565b508582101561023c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6113598061025d5f395ff3fe608060405234801561000f575f80fd5b50600436106100ca575f3560e01c80634e1273f411610088578063a22cb46511610063578063a22cb465146101c4578063bd85b039146101d7578063e985e9c5146101f6578063f242432a14610209575f80fd5b80634e1273f41461017e5780638e81c64d1461019e57806393442218146101b1575f80fd5b8062fdd58e146100ce57806301ffc9a7146100f45780630e89341c146101175780631cb0d48114610137578063202955591461014c5780632eb2c2d61461016b575b5f80fd5b6100e16100dc366004610cb9565b61021c565b6040519081526020015b60405180910390f35b610107610102366004610cf9565b610243565b60405190151581526020016100eb565b61012a610125366004610d1b565b610292565b6040516100eb9190610d60565b61014a610145366004610e46565b610324565b005b6100e161015a366004610d1b565b5f9081526003602052604090205490565b61014a610179366004610f21565b610344565b61019161018c366004610fc4565b6103b0565b6040516100eb91906110b8565b61014a6101ac3660046110ca565b61047b565b61014a6101bf366004610d1b565b610505565b61014a6101d23660046110ea565b610557565b6100e16101e5366004610d1b565b60036020525f908152604090205481565b610107610204366004611123565b610562565b61014a610217366004611154565b61058f565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061027357506001600160e01b031982166303a24d0760e21b145b8061023d57506301ffc9a760e01b6001600160e01b031983161461023d565b6060600280546102a1906111b4565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd906111b4565b80156103185780601f106102ef57610100808354040283529160200191610318565b820191905f5260205f20905b8154815290600101906020018083116102fb57829003601f168201915b50505050509050919050565b61033f3384848460405180602001604052805f8152506105ee565b505050565b336001600160a01b038616811480159061036557506103638682610562565b155b1561039b5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6103a886868686866105ee565b505050505050565b606081518351146103e15781518351604051635b05999160e01b815260048101929092526024820152604401610392565b5f835167ffffffffffffffff8111156103fc576103fc610d72565b604051908082528060200260200182016040528015610425578160200160208202803683370190505b5090505f5b84518110156104735760208082028601015161044e9060208084028701015161021c565b828281518110610460576104606111ec565b602090810291909101015260010161042a565b509392505050565b80610486338461021c565b10156104d45760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152606401610392565b6104df338383610653565b5f82815260036020526040812080548392906104fc908490611214565b90915550505050565b600360209081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff545f818152604080822085905580519384019052825290610553903090839085906106b9565b5050565b610553338383610714565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906105b057506105ae8682610562565b155b156105e15760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610392565b6103a886868686866107a8565b6001600160a01b03841661061757604051632bfa23e760e11b81525f6004820152602401610392565b6001600160a01b03851661063f57604051626a0d4560e21b81525f6004820152602401610392565b61064c8585858585610834565b5050505050565b6001600160a01b03831661067b57604051626a0d4560e21b81525f6004820152602401610392565b604080516001808252602082018590528183019081526060820184905260a082019092525f6080820181815291929161064c91879185908590610834565b6001600160a01b0384166106e257604051632bfa23e760e11b81525f6004820152602401610392565b604080516001808252602082018690528183019081526060820185905260808201909252906103a85f87848487610834565b6001600160a01b03821661073c5760405162ced3e160e81b81525f6004820152602401610392565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107d157604051632bfa23e760e11b81525f6004820152602401610392565b6001600160a01b0385166107f957604051626a0d4560e21b81525f6004820152602401610392565b6040805160018082526020820186905281830190815260608201859052608082019092529061082b8787848487610834565b50505050505050565b61084085858585610887565b6001600160a01b0384161561064c57825133906001036108795760208481015190840151610872838989858589610a96565b50506103a8565b6103a8818787878787610bb7565b80518251146108b65781518151604051635b05999160e01b815260048101929092526024820152604401610392565b335f5b83518110156109b8576020818102858101820151908501909101516001600160a01b0388161561096a575f828152602081815260408083206001600160a01b038c16845290915290205481811015610944576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610392565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156109ae575f828152602081815260408083206001600160a01b038b168452909152812080548392906109a8908490611227565b90915550505b50506001016108b9565b508251600103610a385760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a29929190918252602082015260400190565b60405180910390a4505061064c565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a8792919061123a565b60405180910390a45050505050565b6001600160a01b0384163b156103a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ada9089908990889088908890600401611267565b6020604051808303815f875af1925050508015610b14575060408051601f3d908101601f19168201909252610b11918101906112ab565b60015b610b7b573d808015610b41576040519150601f19603f3d011682016040523d82523d5f602084013e610b46565b606091505b5080515f03610b7357604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461082b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b6001600160a01b0384163b156103a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bfb90899089908890889088906004016112c6565b6020604051808303815f875af1925050508015610c35575060408051601f3d908101601f19168201909252610c32918101906112ab565b60015b610c62573d808015610b41576040519150601f19603f3d011682016040523d82523d5f602084013e610b46565b6001600160e01b0319811663bc197c8160e01b1461082b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b80356001600160a01b0381168114610cb4575f80fd5b919050565b5f8060408385031215610cca575f80fd5b610cd383610c9e565b946020939093013593505050565b6001600160e01b031981168114610cf6575f80fd5b50565b5f60208284031215610d09575f80fd5b8135610d1481610ce1565b9392505050565b5f60208284031215610d2b575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610d146020830184610d32565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610daf57610daf610d72565b604052919050565b5f67ffffffffffffffff821115610dd057610dd0610d72565b5060051b60200190565b5f82601f830112610de9575f80fd5b81356020610dfe610df983610db7565b610d86565b8083825260208201915060208460051b870101935086841115610e1f575f80fd5b602086015b84811015610e3b5780358352918301918301610e24565b509695505050505050565b5f805f60608486031215610e58575f80fd5b610e6184610c9e565b9250602084013567ffffffffffffffff80821115610e7d575f80fd5b610e8987838801610dda565b93506040860135915080821115610e9e575f80fd5b50610eab86828701610dda565b9150509250925092565b5f82601f830112610ec4575f80fd5b813567ffffffffffffffff811115610ede57610ede610d72565b610ef1601f8201601f1916602001610d86565b818152846020838601011115610f05575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610f35575f80fd5b610f3e86610c9e565b9450610f4c60208701610c9e565b9350604086013567ffffffffffffffff80821115610f68575f80fd5b610f7489838a01610dda565b94506060880135915080821115610f89575f80fd5b610f9589838a01610dda565b93506080880135915080821115610faa575f80fd5b50610fb788828901610eb5565b9150509295509295909350565b5f8060408385031215610fd5575f80fd5b823567ffffffffffffffff80821115610fec575f80fd5b818501915085601f830112610fff575f80fd5b8135602061100f610df983610db7565b82815260059290921b8401810191818101908984111561102d575f80fd5b948201945b838610156110525761104386610c9e565b82529482019490820190611032565b96505086013592505080821115611067575f80fd5b5061107485828601610dda565b9150509250929050565b5f815180845260208085019450602084015f5b838110156110ad57815187529582019590820190600101611091565b509495945050505050565b602081525f610d14602083018461107e565b5f80604083850312156110db575f80fd5b50508035926020909101359150565b5f80604083850312156110fb575f80fd5b61110483610c9e565b915060208301358015158114611118575f80fd5b809150509250929050565b5f8060408385031215611134575f80fd5b61113d83610c9e565b915061114b60208401610c9e565b90509250929050565b5f805f805f60a08688031215611168575f80fd5b61117186610c9e565b945061117f60208701610c9e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111a8575f80fd5b610fb788828901610eb5565b600181811c908216806111c857607f821691505b6020821081036111e657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561023d5761023d611200565b8082018082111561023d5761023d611200565b604081525f61124c604083018561107e565b828103602084015261125e818561107e565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906112a090830184610d32565b979650505050505050565b5f602082840312156112bb575f80fd5b8151610d1481610ce1565b6001600160a01b0386811682528516602082015260a0604082018190525f906112f19083018661107e565b8281036060840152611303818661107e565b905082810360808401526113178185610d32565b9897505050505050505056fea2646970667358221220708d813e048a13d9ddbb68ef1d7996ba2d0fd98dc762eae2f4752fe91cbd131064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15B6 CODESIZE SUB DUP1 PUSH2 0x15B6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x63 JUMP JUMPDEST DUP1 PUSH2 0x38 DUP2 PUSH2 0x3F JUMP JUMPDEST POP POP PUSH2 0x250 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x4B DUP3 DUP3 PUSH2 0x191 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xAE PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD6 JUMPI PUSH2 0xD6 PUSH2 0x4F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x121 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x16A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x176 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1AA PUSH2 0x4F JUMP JUMPDEST PUSH2 0x1BE DUP2 PUSH2 0x1B8 DUP5 SLOAD PUSH2 0x10D JUMP JUMPDEST DUP5 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x248 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x200 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x23C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1359 DUP1 PUSH2 0x25D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8E81C64D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x93442218 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1CB0D481 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x20295559 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x273 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x23D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x23D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0x11B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x318 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x318 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x365 JUMPI POP PUSH2 0x363 DUP7 DUP3 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5EE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3E1 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x425 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x44E SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x21C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x460 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x42A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x486 CALLER DUP5 PUSH2 0x21C JUMP JUMPDEST LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x4DF CALLER DUP4 DUP4 PUSH2 0x653 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4FC SWAP1 DUP5 SWAP1 PUSH2 0x1214 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 ADD SWAP1 MSTORE DUP3 MSTORE SWAP1 PUSH2 0x553 SWAP1 ADDRESS SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x553 CALLER DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x5B0 JUMPI POP PUSH2 0x5AE DUP7 DUP3 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3A8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x64C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x834 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0x64C SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3A8 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x82B DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x834 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 DUP6 DUP6 DUP6 DUP6 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x64C JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x879 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x872 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xA96 JUMP JUMPDEST POP POP PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xBB7 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8B6 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x96A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x9AE JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A8 SWAP1 DUP5 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x8B9 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xA38 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x64C JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA87 SWAP3 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xADA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB11 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB7B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xBFB SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC35 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC32 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC62 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCD3 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD09 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD14 DUP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDAF JUMPI PUSH2 0xDAF PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDD0 JUMPI PUSH2 0xDD0 PUSH2 0xD72 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDFE PUSH2 0xDF9 DUP4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xE1F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE3B JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE24 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE61 DUP5 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE7D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP8 DUP4 DUP9 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEAB DUP7 DUP3 DUP8 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xEF1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xD86 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xF05 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xC9E JUMP JUMPDEST SWAP5 POP PUSH2 0xF4C PUSH1 0x20 DUP8 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF74 DUP10 DUP4 DUP11 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF95 DUP10 DUP4 DUP11 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xFAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB7 DUP9 DUP3 DUP10 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFEC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x100F PUSH2 0xDF9 DUP4 PUSH2 0xDB7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x102D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1043 DUP7 PUSH2 0xC9E JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1074 DUP6 DUP3 DUP7 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10AD JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1091 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x107E JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1104 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x113D DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0x114B PUSH1 0x20 DUP5 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1171 DUP7 PUSH2 0xC9E JUMP JUMPDEST SWAP5 POP PUSH2 0x117F PUSH1 0x20 DUP8 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB7 DUP9 DUP3 DUP10 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23D PUSH2 0x1200 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23D PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x124C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x107E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x125E DUP2 DUP6 PUSH2 0x107E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12A0 SWAP1 DUP4 ADD DUP5 PUSH2 0xD32 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD14 DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12F1 SWAP1 DUP4 ADD DUP7 PUSH2 0x107E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1303 DUP2 DUP7 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1317 DUP2 DUP6 PUSH2 0xD32 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x8D813E048A13D9DDBB68EF1D7996BA2D0F 0xD9 DUP14 0xC7 PUSH3 0xEAE2F4 PUSH22 0x2FE91CBD131064736F6C634300081900330000000000 ",
							"sourceMap": "119:847:11:-:0;;;208:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;247:3;1293:13:1;247:3:11;1293:7:1;:13::i;:::-;1251:62;208:46:11;119:847;;10282:86:1;10348:4;:13;10355:6;10348:4;:13;:::i;:::-;;10282:86;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:912;226:6;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;322:16;;-1:-1:-1;;;;;387:14:12;;;384:34;;;414:1;411;404:12;384:34;452:6;441:9;437:22;427:32;;497:7;490:4;486:2;482:13;478:27;468:55;;519:1;516;509:12;468:55;548:2;542:9;570:2;566;563:10;560:36;;;576:18;;:::i;:::-;651:2;645:9;619:2;705:13;;-1:-1:-1;;701:22:12;;;725:2;697:31;693:40;681:53;;;749:18;;;769:22;;;746:46;743:72;;;795:18;;:::i;:::-;835:10;831:2;824:22;870:2;862:6;855:18;910:7;905:2;900;896;892:11;888:20;885:33;882:53;;;931:1;928;921:12;882:53;980:2;975;971;967:11;962:2;954:6;950:15;944:39;1025:1;1003:15;;;1020:2;999:24;992:35;;;;-1:-1:-1;1007:6:12;146:912;-1:-1:-1;;;;;146:912:12:o;1063:380::-;1142:1;1138:12;;;;1185;;;1206:61;;1260:4;1252:6;1248:17;1238:27;;1206:61;1313:2;1305:6;1302:14;1282:18;1279:38;1276:161;;1359:10;1354:3;1350:20;1347:1;1340:31;1394:4;1391:1;1384:15;1422:4;1419:1;1412:15;1276:161;;1063:380;;;:::o;1574:518::-;1676:2;1671:3;1668:11;1665:421;;;1712:5;1709:1;1702:16;1756:4;1753:1;1743:18;1826:2;1814:10;1810:19;1807:1;1803:27;1797:4;1793:38;1862:4;1850:10;1847:20;1844:47;;;-1:-1:-1;1885:4:12;1844:47;1940:2;1935:3;1931:12;1928:1;1924:20;1918:4;1914:31;1904:41;;1995:81;2013:2;2006:5;2003:13;1995:81;;;2072:1;2058:16;;2039:1;2028:13;1995:81;;;1999:3;;1665:421;1574:518;;;:::o;2268:1345::-;2388:10;;-1:-1:-1;;;;;2410:30:12;;2407:56;;;2443:18;;:::i;:::-;2472:97;2562:6;2522:38;2554:4;2548:11;2522:38;:::i;:::-;2516:4;2472:97;:::i;:::-;2624:4;;2681:2;2670:14;;2698:1;2693:663;;;;3400:1;3417:6;3414:89;;;-1:-1:-1;3469:19:12;;;3463:26;3414:89;-1:-1:-1;;2225:1:12;2221:11;;;2217:24;2213:29;2203:40;2249:1;2245:11;;;2200:57;3516:81;;2663:944;;2693:663;1521:1;1514:14;;;1558:4;1545:18;;-1:-1:-1;;2729:20:12;;;2847:236;2861:7;2858:1;2855:14;2847:236;;;2950:19;;;2944:26;2929:42;;3042:27;;;;3010:1;2998:14;;;;2877:19;;2847:236;;;2851:3;3111:6;3102:7;3099:19;3096:201;;;3172:19;;;3166:26;-1:-1:-1;;3255:1:12;3251:14;;;3267:3;3247:24;3243:37;3239:42;3224:58;3209:74;;3096:201;;;3343:1;3334:6;3331:1;3327:14;3323:22;3317:4;3310:36;2663:944;;;;;2268:1345;;:::o;:::-;119:847:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": null,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burn_953": {
									"entryPoint": 1619,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 2999,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 2710,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 1721,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": null,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 1518,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 1960,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 1812,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 2100,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 2183,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addTokenType_2827": {
									"entryPoint": 1285,
									"id": 2827,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 944,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 540,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnTokens_2880": {
									"entryPoint": 1147,
									"id": 2880,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gettotalSupply_2892": {
									"entryPoint": null,
									"id": 2892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1378,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 836,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1423,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1367,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1714": {
									"entryPoint": null,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 579,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_2790": {
									"entryPoint": null,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferTokens_2848": {
									"entryPoint": 804,
									"id": 2848,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": null,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1550": {
									"entryPoint": null,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 658,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13267:12",
										"nodeType": "YulBlock",
										"src": "0:13267:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:12",
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nativeSrc": "73:29:12",
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nativeSrc": "82:20:12",
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:12",
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:12",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:12",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nativeSrc": "167:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nativeSrc": "167:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:12",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:12",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nativeSrc": "146:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:12",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nativeSrc": "142:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nativeSrc": "131:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nativeSrc": "121:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nativeSrc": "114:50:12",
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nativeSrc": "111:70:12",
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:12",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:12",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nativeSrc": "279:167:12",
													"nodeType": "YulBlock",
													"src": "279:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:12",
																"nodeType": "YulBlock",
																"src": "325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:12",
																					"nodeType": "YulLiteral",
																					"src": "334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nativeSrc": "327:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:12"
																		},
																		"nativeSrc": "327:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nativeSrc": "296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nativeSrc": "292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nativeSrc": "289:52:12",
															"nodeType": "YulIf",
															"src": "289:52:12"
														},
														{
															"nativeSrc": "350:39:12",
															"nodeType": "YulAssignment",
															"src": "350:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:12"
																},
																"nativeSrc": "360:29:12",
																"nodeType": "YulFunctionCall",
																"src": "360:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:12"
																}
															]
														},
														{
															"nativeSrc": "398:42:12",
															"nodeType": "YulAssignment",
															"src": "398:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "425:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "436:2:12",
																				"nodeType": "YulLiteral",
																				"src": "436:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:12"
																		},
																		"nativeSrc": "421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "408:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:12"
																},
																"nativeSrc": "408:32:12",
																"nodeType": "YulFunctionCall",
																"src": "408:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:12",
														"nodeType": "YulTypedName",
														"src": "237:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:12",
														"nodeType": "YulTypedName",
														"src": "248:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:12",
														"nodeType": "YulTypedName",
														"src": "260:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:12",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "192:254:12"
											},
											{
												"body": {
													"nativeSrc": "552:76:12",
													"nodeType": "YulBlock",
													"src": "552:76:12",
													"statements": [
														{
															"nativeSrc": "562:26:12",
															"nodeType": "YulAssignment",
															"src": "562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:12"
																},
																"nativeSrc": "570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "604:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "615:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nativeSrc": "597:25:12",
																"nodeType": "YulFunctionCall",
																"src": "597:25:12"
															},
															"nativeSrc": "597:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "597:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "451:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "521:9:12",
														"nodeType": "YulTypedName",
														"src": "521:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "532:6:12",
														"nodeType": "YulTypedName",
														"src": "532:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "543:4:12",
														"nodeType": "YulTypedName",
														"src": "543:4:12",
														"type": ""
													}
												],
												"src": "451:177:12"
											},
											{
												"body": {
													"nativeSrc": "677:87:12",
													"nodeType": "YulBlock",
													"src": "677:87:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "742:16:12",
																"nodeType": "YulBlock",
																"src": "742:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "751:1:12",
																					"nodeType": "YulLiteral",
																					"src": "751:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "754:1:12",
																					"nodeType": "YulLiteral",
																					"src": "754:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "744:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:12"
																			},
																			"nativeSrc": "744:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:12"
																		},
																		"nativeSrc": "744:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "700:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "711:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "722:3:12",
																								"nodeType": "YulLiteral",
																								"src": "722:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "727:10:12",
																								"nodeType": "YulLiteral",
																								"src": "727:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "718:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:12"
																						},
																						"nativeSrc": "718:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "707:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:12"
																				},
																				"nativeSrc": "707:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "697:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:12"
																		},
																		"nativeSrc": "697:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "690:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:12"
																},
																"nativeSrc": "690:51:12",
																"nodeType": "YulFunctionCall",
																"src": "690:51:12"
															},
															"nativeSrc": "687:71:12",
															"nodeType": "YulIf",
															"src": "687:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "633:131:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "666:5:12",
														"nodeType": "YulTypedName",
														"src": "666:5:12",
														"type": ""
													}
												],
												"src": "633:131:12"
											},
											{
												"body": {
													"nativeSrc": "838:176:12",
													"nodeType": "YulBlock",
													"src": "838:176:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "884:16:12",
																"nodeType": "YulBlock",
																"src": "884:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "893:1:12",
																					"nodeType": "YulLiteral",
																					"src": "893:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "896:1:12",
																					"nodeType": "YulLiteral",
																					"src": "896:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "886:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:12"
																			},
																			"nativeSrc": "886:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:12"
																		},
																		"nativeSrc": "886:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "859:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "868:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "855:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:12"
																		},
																		"nativeSrc": "855:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:2:12",
																		"nodeType": "YulLiteral",
																		"src": "880:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "851:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:12"
																},
																"nativeSrc": "851:32:12",
																"nodeType": "YulFunctionCall",
																"src": "851:32:12"
															},
															"nativeSrc": "848:52:12",
															"nodeType": "YulIf",
															"src": "848:52:12"
														},
														{
															"nativeSrc": "909:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "935:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "922:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:12"
																},
																"nativeSrc": "922:23:12",
																"nodeType": "YulFunctionCall",
																"src": "922:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "913:5:12",
																	"nodeType": "YulTypedName",
																	"src": "913:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "978:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "954:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:12"
																},
																"nativeSrc": "954:30:12",
																"nodeType": "YulFunctionCall",
																"src": "954:30:12"
															},
															"nativeSrc": "954:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "954:30:12"
														},
														{
															"nativeSrc": "993:15:12",
															"nodeType": "YulAssignment",
															"src": "993:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1003:5:12",
																"nodeType": "YulIdentifier",
																"src": "1003:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "769:245:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "804:9:12",
														"nodeType": "YulTypedName",
														"src": "804:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "815:7:12",
														"nodeType": "YulTypedName",
														"src": "815:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "827:6:12",
														"nodeType": "YulTypedName",
														"src": "827:6:12",
														"type": ""
													}
												],
												"src": "769:245:12"
											},
											{
												"body": {
													"nativeSrc": "1114:92:12",
													"nodeType": "YulBlock",
													"src": "1114:92:12",
													"statements": [
														{
															"nativeSrc": "1124:26:12",
															"nodeType": "YulAssignment",
															"src": "1124:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1136:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1147:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1132:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:12"
																},
																"nativeSrc": "1132:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1132:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1124:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1166:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1191:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1184:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:12"
																				},
																				"nativeSrc": "1184:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1177:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:12"
																		},
																		"nativeSrc": "1177:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1159:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:12"
																},
																"nativeSrc": "1159:41:12",
																"nodeType": "YulFunctionCall",
																"src": "1159:41:12"
															},
															"nativeSrc": "1159:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1019:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1083:9:12",
														"nodeType": "YulTypedName",
														"src": "1083:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1094:6:12",
														"nodeType": "YulTypedName",
														"src": "1094:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1105:4:12",
														"nodeType": "YulTypedName",
														"src": "1105:4:12",
														"type": ""
													}
												],
												"src": "1019:187:12"
											},
											{
												"body": {
													"nativeSrc": "1281:110:12",
													"nodeType": "YulBlock",
													"src": "1281:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1327:16:12",
																"nodeType": "YulBlock",
																"src": "1327:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:12"
																			},
																			"nativeSrc": "1329:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:12"
																		},
																		"nativeSrc": "1329:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1302:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1311:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:12"
																		},
																		"nativeSrc": "1298:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1323:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1294:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:12"
																},
																"nativeSrc": "1294:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:12"
															},
															"nativeSrc": "1291:52:12",
															"nodeType": "YulIf",
															"src": "1291:52:12"
														},
														{
															"nativeSrc": "1352:33:12",
															"nodeType": "YulAssignment",
															"src": "1352:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1375:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1362:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:12"
																},
																"nativeSrc": "1362:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1362:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1211:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1247:9:12",
														"nodeType": "YulTypedName",
														"src": "1247:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1258:7:12",
														"nodeType": "YulTypedName",
														"src": "1258:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1270:6:12",
														"nodeType": "YulTypedName",
														"src": "1270:6:12",
														"type": ""
													}
												],
												"src": "1211:180:12"
											},
											{
												"body": {
													"nativeSrc": "1446:239:12",
													"nodeType": "YulBlock",
													"src": "1446:239:12",
													"statements": [
														{
															"nativeSrc": "1456:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1476:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1470:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:12"
																},
																"nativeSrc": "1470:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1470:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1460:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1498:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1503:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1491:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:12"
																},
																"nativeSrc": "1491:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1491:19:12"
															},
															"nativeSrc": "1491:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1529:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1534:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1534:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:12"
																		},
																		"nativeSrc": "1525:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1545:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1545:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1552:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1552:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1541:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:12"
																		},
																		"nativeSrc": "1541:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:16:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1559:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1519:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1519:5:12"
																},
																"nativeSrc": "1519:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1519:47:12"
															},
															"nativeSrc": "1519:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1519:47:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1590:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1590:3:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1595:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1595:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1586:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1586:3:12"
																				},
																				"nativeSrc": "1586:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1586:16:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1604:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1604:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1582:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:12"
																		},
																		"nativeSrc": "1582:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1582:27:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1611:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1611:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1575:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1575:6:12"
																},
																"nativeSrc": "1575:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1575:38:12"
															},
															"nativeSrc": "1575:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "1575:38:12"
														},
														{
															"nativeSrc": "1622:57:12",
															"nodeType": "YulAssignment",
															"src": "1622:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1637:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1637:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1650:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1650:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1658:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1658:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1646:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1646:3:12"
																						},
																						"nativeSrc": "1646:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1646:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1667:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1667:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1663:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1663:3:12"
																						},
																						"nativeSrc": "1663:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1663:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1642:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1642:3:12"
																				},
																				"nativeSrc": "1642:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1642:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1633:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1633:3:12"
																		},
																		"nativeSrc": "1633:39:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:39:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1674:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1629:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1629:3:12"
																},
																"nativeSrc": "1629:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1629:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1622:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1396:289:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1423:5:12",
														"nodeType": "YulTypedName",
														"src": "1423:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1430:3:12",
														"nodeType": "YulTypedName",
														"src": "1430:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1438:3:12",
														"nodeType": "YulTypedName",
														"src": "1438:3:12",
														"type": ""
													}
												],
												"src": "1396:289:12"
											},
											{
												"body": {
													"nativeSrc": "1811:99:12",
													"nodeType": "YulBlock",
													"src": "1811:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1828:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1828:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1839:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1821:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:12"
																},
																"nativeSrc": "1821:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1821:21:12"
															},
															"nativeSrc": "1821:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1821:21:12"
														},
														{
															"nativeSrc": "1851:53:12",
															"nodeType": "YulAssignment",
															"src": "1851:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1877:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1889:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1889:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1900:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1900:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1885:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:3:12"
																		},
																		"nativeSrc": "1885:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1859:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1859:17:12"
																},
																"nativeSrc": "1859:45:12",
																"nodeType": "YulFunctionCall",
																"src": "1859:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1851:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1851:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1690:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1780:9:12",
														"nodeType": "YulTypedName",
														"src": "1780:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1791:6:12",
														"nodeType": "YulTypedName",
														"src": "1791:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1802:4:12",
														"nodeType": "YulTypedName",
														"src": "1802:4:12",
														"type": ""
													}
												],
												"src": "1690:220:12"
											},
											{
												"body": {
													"nativeSrc": "1947:95:12",
													"nodeType": "YulBlock",
													"src": "1947:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1964:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1964:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1971:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1971:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1976:10:12",
																				"nodeType": "YulLiteral",
																				"src": "1976:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:12"
																		},
																		"nativeSrc": "1967:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1957:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1957:6:12"
																},
																"nativeSrc": "1957:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1957:31:12"
															},
															"nativeSrc": "1957:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1957:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2004:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2004:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2007:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2007:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1997:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:12"
																},
																"nativeSrc": "1997:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1997:15:12"
															},
															"nativeSrc": "1997:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1997:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2028:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2031:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2031:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2021:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:12"
																},
																"nativeSrc": "2021:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2021:15:12"
															},
															"nativeSrc": "2021:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2021:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1915:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1915:127:12"
											},
											{
												"body": {
													"nativeSrc": "2092:230:12",
													"nodeType": "YulBlock",
													"src": "2092:230:12",
													"statements": [
														{
															"nativeSrc": "2102:19:12",
															"nodeType": "YulAssignment",
															"src": "2102:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2118:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2112:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2112:5:12"
																},
																"nativeSrc": "2112:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2112:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:12"
																}
															]
														},
														{
															"nativeSrc": "2130:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2130:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2152:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2152:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2168:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2168:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2174:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2174:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:12"
																				},
																				"nativeSrc": "2164:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2183:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2183:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2179:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2179:3:12"
																				},
																				"nativeSrc": "2179:7:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2179:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2160:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2160:3:12"
																		},
																		"nativeSrc": "2160:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:12"
																},
																"nativeSrc": "2148:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2148:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2134:10:12",
																	"nodeType": "YulTypedName",
																	"src": "2134:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2263:22:12",
																"nodeType": "YulBlock",
																"src": "2263:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2265:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2265:16:12"
																			},
																			"nativeSrc": "2265:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2265:18:12"
																		},
																		"nativeSrc": "2265:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2206:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2206:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2218:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2218:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2203:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2203:2:12"
																		},
																		"nativeSrc": "2203:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2203:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2242:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2242:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2254:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2239:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2239:2:12"
																		},
																		"nativeSrc": "2239:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2239:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2200:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2200:2:12"
																},
																"nativeSrc": "2200:62:12",
																"nodeType": "YulFunctionCall",
																"src": "2200:62:12"
															},
															"nativeSrc": "2197:88:12",
															"nodeType": "YulIf",
															"src": "2197:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2301:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2305:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2305:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:12"
																},
																"nativeSrc": "2294:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2294:22:12"
															},
															"nativeSrc": "2294:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2294:22:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2047:275:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2072:4:12",
														"nodeType": "YulTypedName",
														"src": "2072:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2081:6:12",
														"nodeType": "YulTypedName",
														"src": "2081:6:12",
														"type": ""
													}
												],
												"src": "2047:275:12"
											},
											{
												"body": {
													"nativeSrc": "2396:114:12",
													"nodeType": "YulBlock",
													"src": "2396:114:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2440:22:12",
																"nodeType": "YulBlock",
																"src": "2440:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2442:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2442:16:12"
																			},
																			"nativeSrc": "2442:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2442:18:12"
																		},
																		"nativeSrc": "2442:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2412:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2412:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2420:18:12",
																		"nodeType": "YulLiteral",
																		"src": "2420:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2409:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:12"
																},
																"nativeSrc": "2409:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:30:12"
															},
															"nativeSrc": "2406:56:12",
															"nodeType": "YulIf",
															"src": "2406:56:12"
														},
														{
															"nativeSrc": "2471:33:12",
															"nodeType": "YulAssignment",
															"src": "2471:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2487:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2487:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2490:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2483:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:12"
																		},
																		"nativeSrc": "2483:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2499:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2499:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2479:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2479:3:12"
																},
																"nativeSrc": "2479:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2479:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2471:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2471:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "2327:183:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2376:6:12",
														"nodeType": "YulTypedName",
														"src": "2376:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2387:4:12",
														"nodeType": "YulTypedName",
														"src": "2387:4:12",
														"type": ""
													}
												],
												"src": "2327:183:12"
											},
											{
												"body": {
													"nativeSrc": "2579:604:12",
													"nodeType": "YulBlock",
													"src": "2579:604:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2628:16:12",
																"nodeType": "YulBlock",
																"src": "2628:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2630:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2630:6:12"
																			},
																			"nativeSrc": "2630:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2630:12:12"
																		},
																		"nativeSrc": "2630:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2630:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2607:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2607:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2615:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2615:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2603:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2603:3:12"
																				},
																				"nativeSrc": "2603:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2603:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2622:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2622:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2599:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2599:3:12"
																		},
																		"nativeSrc": "2599:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2599:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2592:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:12"
																},
																"nativeSrc": "2592:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2592:35:12"
															},
															"nativeSrc": "2589:55:12",
															"nodeType": "YulIf",
															"src": "2589:55:12"
														},
														{
															"nativeSrc": "2653:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2653:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2676:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2663:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2663:12:12"
																},
																"nativeSrc": "2663:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2663:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2657:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2657:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2692:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2692:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2702:4:12",
																"nodeType": "YulLiteral",
																"src": "2702:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2696:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2696:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2715:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2715:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2782:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2782:2:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "2742:39:12",
																			"nodeType": "YulIdentifier",
																			"src": "2742:39:12"
																		},
																		"nativeSrc": "2742:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:43:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2726:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:12"
																},
																"nativeSrc": "2726:60:12",
																"nodeType": "YulFunctionCall",
																"src": "2726:60:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2719:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2719:3:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2795:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2795:16:12",
															"value": {
																"name": "dst",
																"nativeSrc": "2808:3:12",
																"nodeType": "YulIdentifier",
																"src": "2808:3:12"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "2799:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2799:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2827:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2827:3:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2832:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "2832:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2820:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:12"
																},
																"nativeSrc": "2820:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2820:15:12"
															},
															"nativeSrc": "2820:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2820:15:12"
														},
														{
															"nativeSrc": "2844:21:12",
															"nodeType": "YulAssignment",
															"src": "2844:21:12",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2855:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2855:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2860:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2851:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:12"
																},
																"nativeSrc": "2851:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2851:14:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2844:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2844:3:12"
																}
															]
														},
														{
															"nativeSrc": "2874:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2874:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2896:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2896:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2908:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2908:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2911:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2911:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2904:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2904:3:12"
																				},
																				"nativeSrc": "2904:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2904:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:12"
																		},
																		"nativeSrc": "2892:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2917:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2917:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2888:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:12"
																},
																"nativeSrc": "2888:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2888:34:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2878:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2878:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2950:16:12",
																"nodeType": "YulBlock",
																"src": "2950:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2959:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2959:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2962:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2962:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2952:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2952:6:12"
																			},
																			"nativeSrc": "2952:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2952:12:12"
																		},
																		"nativeSrc": "2952:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2952:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2937:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2945:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2945:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2934:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2934:2:12"
																},
																"nativeSrc": "2934:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2934:15:12"
															},
															"nativeSrc": "2931:35:12",
															"nodeType": "YulIf",
															"src": "2931:35:12"
														},
														{
															"nativeSrc": "2975:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2975:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2998:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2998:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2986:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:12"
																},
																"nativeSrc": "2986:17:12",
																"nodeType": "YulFunctionCall",
																"src": "2986:17:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2979:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2979:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3068:86:12",
																"nodeType": "YulBlock",
																"src": "3068:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3089:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3089:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3107:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3107:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "3094:12:12",
																						"nodeType": "YulIdentifier",
																						"src": "3094:12:12"
																					},
																					"nativeSrc": "3094:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3094:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3082:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:12"
																			},
																			"nativeSrc": "3082:30:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3082:30:12"
																		},
																		"nativeSrc": "3082:30:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3082:30:12"
																	},
																	{
																		"nativeSrc": "3125:19:12",
																		"nodeType": "YulAssignment",
																		"src": "3125:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3136:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3136:3:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3141:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3141:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3132:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3132:3:12"
																			},
																			"nativeSrc": "3132:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3132:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3125:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3125:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3023:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3023:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3028:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3028:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3020:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:12"
																},
																"nativeSrc": "3020:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3020:15:12"
															},
															"nativeSrc": "3012:142:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3036:23:12",
																"nodeType": "YulBlock",
																"src": "3036:23:12",
																"statements": [
																	{
																		"nativeSrc": "3038:19:12",
																		"nodeType": "YulAssignment",
																		"src": "3038:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3049:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3049:3:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3054:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3054:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3045:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3045:3:12"
																			},
																			"nativeSrc": "3045:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3038:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3038:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3016:3:12",
																"nodeType": "YulBlock",
																"src": "3016:3:12",
																"statements": []
															},
															"src": "3012:142:12"
														},
														{
															"nativeSrc": "3163:14:12",
															"nodeType": "YulAssignment",
															"src": "3163:14:12",
															"value": {
																"name": "dst_1",
																"nativeSrc": "3172:5:12",
																"nodeType": "YulIdentifier",
																"src": "3172:5:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3163:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3163:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "2515:668:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2553:6:12",
														"nodeType": "YulTypedName",
														"src": "2553:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2561:3:12",
														"nodeType": "YulTypedName",
														"src": "2561:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2569:5:12",
														"nodeType": "YulTypedName",
														"src": "2569:5:12",
														"type": ""
													}
												],
												"src": "2515:668:12"
											},
											{
												"body": {
													"nativeSrc": "3342:515:12",
													"nodeType": "YulBlock",
													"src": "3342:515:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3388:16:12",
																"nodeType": "YulBlock",
																"src": "3388:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3397:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3397:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3400:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3400:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3390:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:12"
																			},
																			"nativeSrc": "3390:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3390:12:12"
																		},
																		"nativeSrc": "3390:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3390:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3363:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3363:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3372:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3372:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3359:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:12"
																		},
																		"nativeSrc": "3359:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3384:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3355:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3355:3:12"
																},
																"nativeSrc": "3355:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3355:32:12"
															},
															"nativeSrc": "3352:52:12",
															"nodeType": "YulIf",
															"src": "3352:52:12"
														},
														{
															"nativeSrc": "3413:39:12",
															"nodeType": "YulAssignment",
															"src": "3413:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3442:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3442:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3423:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3423:18:12"
																},
																"nativeSrc": "3423:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3423:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3413:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:12"
																}
															]
														},
														{
															"nativeSrc": "3461:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3461:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3492:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3503:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:12"
																		},
																		"nativeSrc": "3488:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3475:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3475:12:12"
																},
																"nativeSrc": "3475:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3475:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3465:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3465:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3516:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3516:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3526:18:12",
																"nodeType": "YulLiteral",
																"src": "3526:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3520:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3520:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3571:16:12",
																"nodeType": "YulBlock",
																"src": "3571:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3580:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3580:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3583:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3583:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3573:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3573:6:12"
																			},
																			"nativeSrc": "3573:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3573:12:12"
																		},
																		"nativeSrc": "3573:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3573:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3559:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3559:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3567:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3567:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3556:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3556:2:12"
																},
																"nativeSrc": "3556:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3556:14:12"
															},
															"nativeSrc": "3553:34:12",
															"nodeType": "YulIf",
															"src": "3553:34:12"
														},
														{
															"nativeSrc": "3596:71:12",
															"nodeType": "YulAssignment",
															"src": "3596:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3639:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3639:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3650:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3650:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:12"
																		},
																		"nativeSrc": "3635:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3659:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3659:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "3606:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "3606:28:12"
																},
																"nativeSrc": "3606:61:12",
																"nodeType": "YulFunctionCall",
																"src": "3606:61:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3596:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:12"
																}
															]
														},
														{
															"nativeSrc": "3676:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3676:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3720:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3705:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:12"
																		},
																		"nativeSrc": "3705:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3692:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3692:12:12"
																},
																"nativeSrc": "3692:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3692:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3680:8:12",
																	"nodeType": "YulTypedName",
																	"src": "3680:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3753:16:12",
																"nodeType": "YulBlock",
																"src": "3753:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3762:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3765:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3755:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:12"
																			},
																			"nativeSrc": "3755:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3755:12:12"
																		},
																		"nativeSrc": "3755:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3755:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3739:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3739:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3749:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3749:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3736:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3736:2:12"
																},
																"nativeSrc": "3736:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3736:16:12"
															},
															"nativeSrc": "3733:36:12",
															"nodeType": "YulIf",
															"src": "3733:36:12"
														},
														{
															"nativeSrc": "3778:73:12",
															"nodeType": "YulAssignment",
															"src": "3778:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3832:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "3832:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3817:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:12"
																		},
																		"nativeSrc": "3817:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3843:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3843:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "3788:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "3788:28:12"
																},
																"nativeSrc": "3788:63:12",
																"nodeType": "YulFunctionCall",
																"src": "3788:63:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3778:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3188:669:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3292:9:12",
														"nodeType": "YulTypedName",
														"src": "3292:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3303:7:12",
														"nodeType": "YulTypedName",
														"src": "3303:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3315:6:12",
														"nodeType": "YulTypedName",
														"src": "3315:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3323:6:12",
														"nodeType": "YulTypedName",
														"src": "3323:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3331:6:12",
														"nodeType": "YulTypedName",
														"src": "3331:6:12",
														"type": ""
													}
												],
												"src": "3188:669:12"
											},
											{
												"body": {
													"nativeSrc": "3914:478:12",
													"nodeType": "YulBlock",
													"src": "3914:478:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:16:12",
																"nodeType": "YulBlock",
																"src": "3963:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3972:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3972:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3975:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3975:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3965:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3965:6:12"
																			},
																			"nativeSrc": "3965:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3965:12:12"
																		},
																		"nativeSrc": "3965:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3942:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3942:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3950:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3950:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3938:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3938:3:12"
																				},
																				"nativeSrc": "3938:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3938:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3957:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3957:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:12"
																		},
																		"nativeSrc": "3934:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:12"
																},
																"nativeSrc": "3927:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3927:35:12"
															},
															"nativeSrc": "3924:55:12",
															"nodeType": "YulIf",
															"src": "3924:55:12"
														},
														{
															"nativeSrc": "3988:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3988:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4011:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4011:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3998:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3998:12:12"
																},
																"nativeSrc": "3998:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3998:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3992:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3992:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4057:22:12",
																"nodeType": "YulBlock",
																"src": "4057:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4059:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4059:16:12"
																			},
																			"nativeSrc": "4059:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4059:18:12"
																		},
																		"nativeSrc": "4059:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4059:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4033:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4033:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4037:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4037:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4030:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4030:2:12"
																},
																"nativeSrc": "4030:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4030:26:12"
															},
															"nativeSrc": "4027:52:12",
															"nodeType": "YulIf",
															"src": "4027:52:12"
														},
														{
															"nativeSrc": "4088:70:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4088:70:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nativeSrc": "4131:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "4131:2:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4135:4:12",
																								"nodeType": "YulLiteral",
																								"src": "4135:4:12",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4127:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4127:3:12"
																						},
																						"nativeSrc": "4127:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4127:13:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4146:2:12",
																								"nodeType": "YulLiteral",
																								"src": "4146:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:12"
																						},
																						"nativeSrc": "4142:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4142:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4123:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4123:3:12"
																				},
																				"nativeSrc": "4123:27:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4123:27:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4152:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4152:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:12"
																		},
																		"nativeSrc": "4119:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:38:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4103:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "4103:15:12"
																},
																"nativeSrc": "4103:55:12",
																"nodeType": "YulFunctionCall",
																"src": "4103:55:12"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "4092:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4092:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nativeSrc": "4174:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4174:7:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4183:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4183:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4167:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4167:6:12"
																},
																"nativeSrc": "4167:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4167:19:12"
															},
															"nativeSrc": "4167:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "4167:19:12"
														},
														{
															"body": {
																"nativeSrc": "4234:16:12",
																"nodeType": "YulBlock",
																"src": "4234:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4243:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4243:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4236:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4236:6:12"
																			},
																			"nativeSrc": "4236:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:12:12"
																		},
																		"nativeSrc": "4236:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4209:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4209:6:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "4217:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4217:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4205:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4205:3:12"
																				},
																				"nativeSrc": "4205:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4205:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4222:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4222:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4201:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:12"
																		},
																		"nativeSrc": "4201:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4201:26:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4229:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4229:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4198:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4198:2:12"
																},
																"nativeSrc": "4198:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4198:35:12"
															},
															"nativeSrc": "4195:55:12",
															"nodeType": "YulIf",
															"src": "4195:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nativeSrc": "4276:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4276:7:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4285:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4285:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4272:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:12"
																		},
																		"nativeSrc": "4272:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4296:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4296:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4304:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4304:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4292:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4292:3:12"
																		},
																		"nativeSrc": "4292:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4292:17:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4311:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4259:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4259:12:12"
																},
																"nativeSrc": "4259:55:12",
																"nodeType": "YulFunctionCall",
																"src": "4259:55:12"
															},
															"nativeSrc": "4259:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "4259:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nativeSrc": "4338:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "4338:7:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "4347:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4347:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4334:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4334:3:12"
																				},
																				"nativeSrc": "4334:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4334:16:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4352:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4352:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4330:3:12"
																		},
																		"nativeSrc": "4330:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4330:27:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4359:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4323:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:12"
																},
																"nativeSrc": "4323:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4323:38:12"
															},
															"nativeSrc": "4323:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "4323:38:12"
														},
														{
															"nativeSrc": "4370:16:12",
															"nodeType": "YulAssignment",
															"src": "4370:16:12",
															"value": {
																"name": "array_1",
																"nativeSrc": "4379:7:12",
																"nodeType": "YulIdentifier",
																"src": "4379:7:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4370:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4370:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "3862:530:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3888:6:12",
														"nodeType": "YulTypedName",
														"src": "3888:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3896:3:12",
														"nodeType": "YulTypedName",
														"src": "3896:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3904:5:12",
														"nodeType": "YulTypedName",
														"src": "3904:5:12",
														"type": ""
													}
												],
												"src": "3862:530:12"
											},
											{
												"body": {
													"nativeSrc": "4594:746:12",
													"nodeType": "YulBlock",
													"src": "4594:746:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4641:16:12",
																"nodeType": "YulBlock",
																"src": "4641:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4650:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4650:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4643:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4643:6:12"
																			},
																			"nativeSrc": "4643:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4643:12:12"
																		},
																		"nativeSrc": "4643:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4643:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4615:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4615:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4624:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4611:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:12"
																		},
																		"nativeSrc": "4611:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4636:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4636:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4607:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4607:3:12"
																},
																"nativeSrc": "4607:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4607:33:12"
															},
															"nativeSrc": "4604:53:12",
															"nodeType": "YulIf",
															"src": "4604:53:12"
														},
														{
															"nativeSrc": "4666:39:12",
															"nodeType": "YulAssignment",
															"src": "4666:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4695:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4676:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4676:18:12"
																},
																"nativeSrc": "4676:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4676:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4666:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:12"
																}
															]
														},
														{
															"nativeSrc": "4714:48:12",
															"nodeType": "YulAssignment",
															"src": "4714:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4747:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4758:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4758:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:12"
																		},
																		"nativeSrc": "4743:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4743:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4724:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4724:18:12"
																},
																"nativeSrc": "4724:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4724:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:12"
																}
															]
														},
														{
															"nativeSrc": "4771:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4802:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4813:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4813:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4798:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4798:3:12"
																		},
																		"nativeSrc": "4798:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4798:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4785:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4785:12:12"
																},
																"nativeSrc": "4785:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4785:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4775:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4775:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4826:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4826:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4836:18:12",
																"nodeType": "YulLiteral",
																"src": "4836:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4830:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4830:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4881:16:12",
																"nodeType": "YulBlock",
																"src": "4881:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4890:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4890:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4893:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4893:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4883:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4883:6:12"
																			},
																			"nativeSrc": "4883:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4883:12:12"
																		},
																		"nativeSrc": "4883:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4883:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4869:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4869:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4877:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4877:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4866:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4866:2:12"
																},
																"nativeSrc": "4866:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4866:14:12"
															},
															"nativeSrc": "4863:34:12",
															"nodeType": "YulIf",
															"src": "4863:34:12"
														},
														{
															"nativeSrc": "4906:71:12",
															"nodeType": "YulAssignment",
															"src": "4906:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4960:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4960:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4945:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4945:3:12"
																		},
																		"nativeSrc": "4945:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4945:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4969:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4969:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "4916:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "4916:28:12"
																},
																"nativeSrc": "4916:61:12",
																"nodeType": "YulFunctionCall",
																"src": "4916:61:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4906:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:12"
																}
															]
														},
														{
															"nativeSrc": "4986:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4986:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5030:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:12"
																		},
																		"nativeSrc": "5015:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5002:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5002:12:12"
																},
																"nativeSrc": "5002:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5002:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4990:8:12",
																	"nodeType": "YulTypedName",
																	"src": "4990:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5063:16:12",
																"nodeType": "YulBlock",
																"src": "5063:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5072:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5072:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5075:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5075:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5065:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5065:6:12"
																			},
																			"nativeSrc": "5065:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5065:12:12"
																		},
																		"nativeSrc": "5065:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5065:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5049:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5049:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5059:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5059:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5046:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5046:2:12"
																},
																"nativeSrc": "5046:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5046:16:12"
															},
															"nativeSrc": "5043:36:12",
															"nodeType": "YulIf",
															"src": "5043:36:12"
														},
														{
															"nativeSrc": "5088:73:12",
															"nodeType": "YulAssignment",
															"src": "5088:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5131:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5131:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5142:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5142:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5127:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5127:3:12"
																		},
																		"nativeSrc": "5127:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5127:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5153:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5153:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "5098:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "5098:28:12"
																},
																"nativeSrc": "5098:63:12",
																"nodeType": "YulFunctionCall",
																"src": "5098:63:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5088:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5088:6:12"
																}
															]
														},
														{
															"nativeSrc": "5170:49:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5170:49:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5203:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5203:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5214:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5214:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5199:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:12"
																		},
																		"nativeSrc": "5199:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5199:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5186:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5186:12:12"
																},
																"nativeSrc": "5186:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5186:33:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "5174:8:12",
																	"nodeType": "YulTypedName",
																	"src": "5174:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5248:16:12",
																"nodeType": "YulBlock",
																"src": "5248:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5257:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5257:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5260:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5260:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5250:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5250:6:12"
																			},
																			"nativeSrc": "5250:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5250:12:12"
																		},
																		"nativeSrc": "5250:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5250:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "5234:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5234:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5244:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5244:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5231:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5231:2:12"
																},
																"nativeSrc": "5231:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5231:16:12"
															},
															"nativeSrc": "5228:36:12",
															"nodeType": "YulIf",
															"src": "5228:36:12"
														},
														{
															"nativeSrc": "5273:61:12",
															"nodeType": "YulAssignment",
															"src": "5273:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5304:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5304:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "5315:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5315:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:12"
																		},
																		"nativeSrc": "5300:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5326:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5326:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "5283:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "5283:16:12"
																},
																"nativeSrc": "5283:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5283:51:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5273:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "4397:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4528:9:12",
														"nodeType": "YulTypedName",
														"src": "4528:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4539:7:12",
														"nodeType": "YulTypedName",
														"src": "4539:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4551:6:12",
														"nodeType": "YulTypedName",
														"src": "4551:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4559:6:12",
														"nodeType": "YulTypedName",
														"src": "4559:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4567:6:12",
														"nodeType": "YulTypedName",
														"src": "4567:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4575:6:12",
														"nodeType": "YulTypedName",
														"src": "4575:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4583:6:12",
														"nodeType": "YulTypedName",
														"src": "4583:6:12",
														"type": ""
													}
												],
												"src": "4397:943:12"
											},
											{
												"body": {
													"nativeSrc": "5482:1009:12",
													"nodeType": "YulBlock",
													"src": "5482:1009:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5528:16:12",
																"nodeType": "YulBlock",
																"src": "5528:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5537:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5537:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5540:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5540:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5530:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5530:6:12"
																			},
																			"nativeSrc": "5530:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5530:12:12"
																		},
																		"nativeSrc": "5530:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5530:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5503:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5503:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5512:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5512:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5499:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:12"
																		},
																		"nativeSrc": "5499:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5499:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5524:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5524:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5495:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5495:3:12"
																},
																"nativeSrc": "5495:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5495:32:12"
															},
															"nativeSrc": "5492:52:12",
															"nodeType": "YulIf",
															"src": "5492:52:12"
														},
														{
															"nativeSrc": "5553:37:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5553:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5580:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5580:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5567:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5567:12:12"
																},
																"nativeSrc": "5567:23:12",
																"nodeType": "YulFunctionCall",
																"src": "5567:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5557:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5557:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5599:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5609:18:12",
																"nodeType": "YulLiteral",
																"src": "5609:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5603:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5603:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5654:16:12",
																"nodeType": "YulBlock",
																"src": "5654:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5663:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5666:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5666:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5656:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5656:6:12"
																			},
																			"nativeSrc": "5656:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5656:12:12"
																		},
																		"nativeSrc": "5656:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5656:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5642:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5650:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5650:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5639:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5639:2:12"
																},
																"nativeSrc": "5639:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5639:14:12"
															},
															"nativeSrc": "5636:34:12",
															"nodeType": "YulIf",
															"src": "5636:34:12"
														},
														{
															"nativeSrc": "5679:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5679:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:12"
																},
																"nativeSrc": "5689:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5689:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5683:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5683:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5759:16:12",
																"nodeType": "YulBlock",
																"src": "5759:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5768:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5768:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5771:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5771:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5761:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5761:6:12"
																			},
																			"nativeSrc": "5761:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5761:12:12"
																		},
																		"nativeSrc": "5761:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5761:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5738:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5738:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5742:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5742:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5734:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5734:3:12"
																				},
																				"nativeSrc": "5734:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5734:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5749:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5749:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:12"
																		},
																		"nativeSrc": "5730:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5723:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:12"
																},
																"nativeSrc": "5723:35:12",
																"nodeType": "YulFunctionCall",
																"src": "5723:35:12"
															},
															"nativeSrc": "5720:55:12",
															"nodeType": "YulIf",
															"src": "5720:55:12"
														},
														{
															"nativeSrc": "5784:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5784:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5807:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5807:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5794:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5794:12:12"
																},
																"nativeSrc": "5794:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5794:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "5788:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5788:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5819:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5819:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5829:4:12",
																"nodeType": "YulLiteral",
																"src": "5829:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "5823:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5823:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5842:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5842:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "5909:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "5909:2:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "5869:39:12",
																			"nodeType": "YulIdentifier",
																			"src": "5869:39:12"
																		},
																		"nativeSrc": "5869:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5869:43:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5853:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "5853:15:12"
																},
																"nativeSrc": "5853:60:12",
																"nodeType": "YulFunctionCall",
																"src": "5853:60:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5846:3:12",
																	"nodeType": "YulTypedName",
																	"src": "5846:3:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5922:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5922:16:12",
															"value": {
																"name": "dst",
																"nativeSrc": "5935:3:12",
																"nodeType": "YulIdentifier",
																"src": "5935:3:12"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "5926:5:12",
																	"nodeType": "YulTypedName",
																	"src": "5926:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5954:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5954:3:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "5959:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5959:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5947:6:12"
																},
																"nativeSrc": "5947:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5947:15:12"
															},
															"nativeSrc": "5947:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5947:15:12"
														},
														{
															"nativeSrc": "5971:19:12",
															"nodeType": "YulAssignment",
															"src": "5971:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5982:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5982:3:12"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "5987:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5987:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5978:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:12"
																},
																"nativeSrc": "5978:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5978:12:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5971:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:12"
																}
															]
														},
														{
															"nativeSrc": "5999:42:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5999:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6021:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6021:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6029:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6029:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "6032:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "6032:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6025:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6025:3:12"
																				},
																				"nativeSrc": "6025:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6025:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6017:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:12"
																		},
																		"nativeSrc": "6017:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6017:19:12"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6038:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6038:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6013:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:12"
																},
																"nativeSrc": "6013:28:12",
																"nodeType": "YulFunctionCall",
																"src": "6013:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6003:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6003:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6073:16:12",
																"nodeType": "YulBlock",
																"src": "6073:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6082:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6082:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6085:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6085:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6075:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6075:6:12"
																			},
																			"nativeSrc": "6075:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6075:12:12"
																		},
																		"nativeSrc": "6075:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6075:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6064:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6064:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6053:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6053:2:12"
																},
																"nativeSrc": "6053:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6053:19:12"
															},
															"nativeSrc": "6050:39:12",
															"nodeType": "YulIf",
															"src": "6050:39:12"
														},
														{
															"nativeSrc": "6098:22:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6098:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6113:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6113:2:12"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6117:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6117:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6109:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6109:3:12"
																},
																"nativeSrc": "6109:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6109:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6102:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6102:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6185:92:12",
																"nodeType": "YulBlock",
																"src": "6185:92:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6206:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6206:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6230:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6230:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "6211:18:12",
																						"nodeType": "YulIdentifier",
																						"src": "6211:18:12"
																					},
																					"nativeSrc": "6211:23:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6211:23:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6199:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6199:6:12"
																			},
																			"nativeSrc": "6199:36:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6199:36:12"
																		},
																		"nativeSrc": "6199:36:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6199:36:12"
																	},
																	{
																		"nativeSrc": "6248:19:12",
																		"nodeType": "YulAssignment",
																		"src": "6248:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6259:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6259:3:12"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6264:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6264:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6255:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6255:3:12"
																			},
																			"nativeSrc": "6255:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6255:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6248:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6248:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6140:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6140:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6145:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6137:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6137:2:12"
																},
																"nativeSrc": "6137:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6137:15:12"
															},
															"nativeSrc": "6129:148:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6153:23:12",
																"nodeType": "YulBlock",
																"src": "6153:23:12",
																"statements": [
																	{
																		"nativeSrc": "6155:19:12",
																		"nodeType": "YulAssignment",
																		"src": "6155:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6166:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6166:3:12"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6171:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6171:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6162:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6162:3:12"
																			},
																			"nativeSrc": "6162:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6162:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6155:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6155:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6133:3:12",
																"nodeType": "YulBlock",
																"src": "6133:3:12",
																"statements": []
															},
															"src": "6129:148:12"
														},
														{
															"nativeSrc": "6286:15:12",
															"nodeType": "YulAssignment",
															"src": "6286:15:12",
															"value": {
																"name": "dst_1",
																"nativeSrc": "6296:5:12",
																"nodeType": "YulIdentifier",
																"src": "6296:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:12"
																}
															]
														},
														{
															"nativeSrc": "6310:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6310:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6343:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6343:9:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "6354:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6354:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6339:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6339:3:12"
																		},
																		"nativeSrc": "6339:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6339:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6326:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6326:12:12"
																},
																"nativeSrc": "6326:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6326:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6314:8:12",
																	"nodeType": "YulTypedName",
																	"src": "6314:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6387:16:12",
																"nodeType": "YulBlock",
																"src": "6387:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6396:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6396:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6399:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6389:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:12"
																			},
																			"nativeSrc": "6389:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6389:12:12"
																		},
																		"nativeSrc": "6389:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6389:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6373:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6373:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6383:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6383:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6370:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6370:2:12"
																},
																"nativeSrc": "6370:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6370:16:12"
															},
															"nativeSrc": "6367:36:12",
															"nodeType": "YulIf",
															"src": "6367:36:12"
														},
														{
															"nativeSrc": "6412:73:12",
															"nodeType": "YulAssignment",
															"src": "6412:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6455:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6455:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6466:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "6466:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6451:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:12"
																		},
																		"nativeSrc": "6451:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6451:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6477:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6477:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "6422:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "6422:28:12"
																},
																"nativeSrc": "6422:63:12",
																"nodeType": "YulFunctionCall",
																"src": "6422:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6412:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5345:1146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5440:9:12",
														"nodeType": "YulTypedName",
														"src": "5440:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5451:7:12",
														"nodeType": "YulTypedName",
														"src": "5451:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5463:6:12",
														"nodeType": "YulTypedName",
														"src": "5463:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5471:6:12",
														"nodeType": "YulTypedName",
														"src": "5471:6:12",
														"type": ""
													}
												],
												"src": "5345:1146:12"
											},
											{
												"body": {
													"nativeSrc": "6557:378:12",
													"nodeType": "YulBlock",
													"src": "6557:378:12",
													"statements": [
														{
															"nativeSrc": "6567:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6567:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6587:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6587:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6581:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6581:5:12"
																},
																"nativeSrc": "6581:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6581:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6571:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6571:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6609:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6614:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6602:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:12"
																},
																"nativeSrc": "6602:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6602:19:12"
															},
															"nativeSrc": "6602:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "6602:19:12"
														},
														{
															"nativeSrc": "6630:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6630:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6640:4:12",
																"nodeType": "YulLiteral",
																"src": "6640:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6634:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6634:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6653:21:12",
															"nodeType": "YulAssignment",
															"src": "6653:21:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6664:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6669:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:12"
																},
																"nativeSrc": "6660:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:14:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6653:3:12"
																}
															]
														},
														{
															"nativeSrc": "6683:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6683:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6701:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6701:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6708:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6708:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6697:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:12"
																},
																"nativeSrc": "6697:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6697:16:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6687:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6687:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6722:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6722:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6731:1:12",
																"nodeType": "YulLiteral",
																"src": "6731:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6726:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6726:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6790:120:12",
																"nodeType": "YulBlock",
																"src": "6790:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6811:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6811:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "6822:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "6822:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6816:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6816:5:12"
																					},
																					"nativeSrc": "6816:13:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6816:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6804:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6804:6:12"
																			},
																			"nativeSrc": "6804:26:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6804:26:12"
																		},
																		"nativeSrc": "6804:26:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6804:26:12"
																	},
																	{
																		"nativeSrc": "6843:19:12",
																		"nodeType": "YulAssignment",
																		"src": "6843:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6854:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6854:3:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6859:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6859:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6850:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6850:3:12"
																			},
																			"nativeSrc": "6850:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6850:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6843:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6843:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6875:25:12",
																		"nodeType": "YulAssignment",
																		"src": "6875:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6889:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6889:6:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6897:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6897:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6885:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6885:3:12"
																			},
																			"nativeSrc": "6885:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6885:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6875:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6875:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6752:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6752:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6755:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6755:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6749:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6749:2:12"
																},
																"nativeSrc": "6749:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6749:13:12"
															},
															"nativeSrc": "6741:169:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6763:18:12",
																"nodeType": "YulBlock",
																"src": "6763:18:12",
																"statements": [
																	{
																		"nativeSrc": "6765:14:12",
																		"nodeType": "YulAssignment",
																		"src": "6765:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6774:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "6774:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6777:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6777:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6770:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6770:3:12"
																			},
																			"nativeSrc": "6770:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6770:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6765:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6765:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6745:3:12",
																"nodeType": "YulBlock",
																"src": "6745:3:12",
																"statements": []
															},
															"src": "6741:169:12"
														},
														{
															"nativeSrc": "6919:10:12",
															"nodeType": "YulAssignment",
															"src": "6919:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "6926:3:12",
																"nodeType": "YulIdentifier",
																"src": "6926:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6919:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "6496:439:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6534:5:12",
														"nodeType": "YulTypedName",
														"src": "6534:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6541:3:12",
														"nodeType": "YulTypedName",
														"src": "6541:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6549:3:12",
														"nodeType": "YulTypedName",
														"src": "6549:3:12",
														"type": ""
													}
												],
												"src": "6496:439:12"
											},
											{
												"body": {
													"nativeSrc": "7091:110:12",
													"nodeType": "YulBlock",
													"src": "7091:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7108:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7108:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7119:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7101:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:12"
																},
																"nativeSrc": "7101:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7101:21:12"
															},
															"nativeSrc": "7101:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7101:21:12"
														},
														{
															"nativeSrc": "7131:64:12",
															"nodeType": "YulAssignment",
															"src": "7131:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7168:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7168:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7180:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7180:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7191:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:12"
																		},
																		"nativeSrc": "7176:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "7139:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "7139:28:12"
																},
																"nativeSrc": "7139:56:12",
																"nodeType": "YulFunctionCall",
																"src": "7139:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7131:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7131:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6940:261:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7060:9:12",
														"nodeType": "YulTypedName",
														"src": "7060:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7071:6:12",
														"nodeType": "YulTypedName",
														"src": "7071:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7082:4:12",
														"nodeType": "YulTypedName",
														"src": "7082:4:12",
														"type": ""
													}
												],
												"src": "6940:261:12"
											},
											{
												"body": {
													"nativeSrc": "7293:161:12",
													"nodeType": "YulBlock",
													"src": "7293:161:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7339:16:12",
																"nodeType": "YulBlock",
																"src": "7339:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7348:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7348:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7351:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7351:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7341:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7341:6:12"
																			},
																			"nativeSrc": "7341:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7341:12:12"
																		},
																		"nativeSrc": "7341:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7341:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7314:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7314:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7323:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7323:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7310:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:12"
																		},
																		"nativeSrc": "7310:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7310:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7335:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7335:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7306:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7306:3:12"
																},
																"nativeSrc": "7306:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7306:32:12"
															},
															"nativeSrc": "7303:52:12",
															"nodeType": "YulIf",
															"src": "7303:52:12"
														},
														{
															"nativeSrc": "7364:33:12",
															"nodeType": "YulAssignment",
															"src": "7364:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7387:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7387:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7374:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7374:12:12"
																},
																"nativeSrc": "7374:23:12",
																"nodeType": "YulFunctionCall",
																"src": "7374:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7364:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:12"
																}
															]
														},
														{
															"nativeSrc": "7406:42:12",
															"nodeType": "YulAssignment",
															"src": "7406:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7433:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7433:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7444:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7444:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7429:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7429:3:12"
																		},
																		"nativeSrc": "7429:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7429:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7416:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7416:12:12"
																},
																"nativeSrc": "7416:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7416:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7406:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7406:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7206:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7251:9:12",
														"nodeType": "YulTypedName",
														"src": "7251:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7262:7:12",
														"nodeType": "YulTypedName",
														"src": "7262:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7274:6:12",
														"nodeType": "YulTypedName",
														"src": "7274:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7282:6:12",
														"nodeType": "YulTypedName",
														"src": "7282:6:12",
														"type": ""
													}
												],
												"src": "7206:248:12"
											},
											{
												"body": {
													"nativeSrc": "7543:263:12",
													"nodeType": "YulBlock",
													"src": "7543:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7589:16:12",
																"nodeType": "YulBlock",
																"src": "7589:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7598:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7598:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7601:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7601:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7591:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7591:6:12"
																			},
																			"nativeSrc": "7591:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7591:12:12"
																		},
																		"nativeSrc": "7591:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7591:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7564:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7573:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7560:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:12"
																		},
																		"nativeSrc": "7560:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7556:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:12"
																},
																"nativeSrc": "7556:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7556:32:12"
															},
															"nativeSrc": "7553:52:12",
															"nodeType": "YulIf",
															"src": "7553:52:12"
														},
														{
															"nativeSrc": "7614:39:12",
															"nodeType": "YulAssignment",
															"src": "7614:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7643:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7624:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7624:18:12"
																},
																"nativeSrc": "7624:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7624:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7614:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7614:6:12"
																}
															]
														},
														{
															"nativeSrc": "7662:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7662:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7692:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7692:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7703:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7703:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7688:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:12"
																		},
																		"nativeSrc": "7688:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7688:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7675:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7675:12:12"
																},
																"nativeSrc": "7675:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7675:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7666:5:12",
																	"nodeType": "YulTypedName",
																	"src": "7666:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7760:16:12",
																"nodeType": "YulBlock",
																"src": "7760:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7769:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7769:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7772:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7772:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7762:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7762:6:12"
																			},
																			"nativeSrc": "7762:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7762:12:12"
																		},
																		"nativeSrc": "7762:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7762:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7729:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7729:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7750:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "7750:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7743:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7743:6:12"
																						},
																						"nativeSrc": "7743:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7743:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7736:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7736:6:12"
																				},
																				"nativeSrc": "7736:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7736:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7726:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7726:2:12"
																		},
																		"nativeSrc": "7726:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7726:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:12"
																},
																"nativeSrc": "7719:40:12",
																"nodeType": "YulFunctionCall",
																"src": "7719:40:12"
															},
															"nativeSrc": "7716:60:12",
															"nodeType": "YulIf",
															"src": "7716:60:12"
														},
														{
															"nativeSrc": "7785:15:12",
															"nodeType": "YulAssignment",
															"src": "7785:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "7795:5:12",
																"nodeType": "YulIdentifier",
																"src": "7795:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7459:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7501:9:12",
														"nodeType": "YulTypedName",
														"src": "7501:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7512:7:12",
														"nodeType": "YulTypedName",
														"src": "7512:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7524:6:12",
														"nodeType": "YulTypedName",
														"src": "7524:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7532:6:12",
														"nodeType": "YulTypedName",
														"src": "7532:6:12",
														"type": ""
													}
												],
												"src": "7459:347:12"
											},
											{
												"body": {
													"nativeSrc": "7898:173:12",
													"nodeType": "YulBlock",
													"src": "7898:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7944:16:12",
																"nodeType": "YulBlock",
																"src": "7944:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7953:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7953:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7956:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7956:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7946:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7946:6:12"
																			},
																			"nativeSrc": "7946:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7946:12:12"
																		},
																		"nativeSrc": "7946:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7946:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7919:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7919:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7928:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7928:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7915:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7915:3:12"
																		},
																		"nativeSrc": "7915:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7915:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7940:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7940:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7911:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7911:3:12"
																},
																"nativeSrc": "7911:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7911:32:12"
															},
															"nativeSrc": "7908:52:12",
															"nodeType": "YulIf",
															"src": "7908:52:12"
														},
														{
															"nativeSrc": "7969:39:12",
															"nodeType": "YulAssignment",
															"src": "7969:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7998:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7998:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7979:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7979:18:12"
																},
																"nativeSrc": "7979:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7979:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7969:6:12"
																}
															]
														},
														{
															"nativeSrc": "8017:48:12",
															"nodeType": "YulAssignment",
															"src": "8017:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8050:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8050:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8061:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8061:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8046:3:12"
																		},
																		"nativeSrc": "8046:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8046:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8027:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8027:18:12"
																},
																"nativeSrc": "8027:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8027:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8017:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7811:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7856:9:12",
														"nodeType": "YulTypedName",
														"src": "7856:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7867:7:12",
														"nodeType": "YulTypedName",
														"src": "7867:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7879:6:12",
														"nodeType": "YulTypedName",
														"src": "7879:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7887:6:12",
														"nodeType": "YulTypedName",
														"src": "7887:6:12",
														"type": ""
													}
												],
												"src": "7811:260:12"
											},
											{
												"body": {
													"nativeSrc": "8223:459:12",
													"nodeType": "YulBlock",
													"src": "8223:459:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8270:16:12",
																"nodeType": "YulBlock",
																"src": "8270:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8279:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8279:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8282:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8282:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8272:6:12"
																			},
																			"nativeSrc": "8272:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8272:12:12"
																		},
																		"nativeSrc": "8272:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8272:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8244:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8244:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8253:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8253:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8240:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8240:3:12"
																		},
																		"nativeSrc": "8240:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8240:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8265:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8265:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8236:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8236:3:12"
																},
																"nativeSrc": "8236:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8236:33:12"
															},
															"nativeSrc": "8233:53:12",
															"nodeType": "YulIf",
															"src": "8233:53:12"
														},
														{
															"nativeSrc": "8295:39:12",
															"nodeType": "YulAssignment",
															"src": "8295:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8324:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8324:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8305:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8305:18:12"
																},
																"nativeSrc": "8305:29:12",
																"nodeType": "YulFunctionCall",
																"src": "8305:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8295:6:12"
																}
															]
														},
														{
															"nativeSrc": "8343:48:12",
															"nodeType": "YulAssignment",
															"src": "8343:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8376:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8376:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8387:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8387:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8372:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8372:3:12"
																		},
																		"nativeSrc": "8372:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8372:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8353:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8353:18:12"
																},
																"nativeSrc": "8353:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8353:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:12"
																}
															]
														},
														{
															"nativeSrc": "8400:42:12",
															"nodeType": "YulAssignment",
															"src": "8400:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8427:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8427:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8438:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8438:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8423:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8423:3:12"
																		},
																		"nativeSrc": "8423:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8423:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8410:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8410:12:12"
																},
																"nativeSrc": "8410:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8410:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8400:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8400:6:12"
																}
															]
														},
														{
															"nativeSrc": "8451:42:12",
															"nodeType": "YulAssignment",
															"src": "8451:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8478:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8478:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8489:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8474:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:12"
																		},
																		"nativeSrc": "8474:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8461:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8461:12:12"
																},
																"nativeSrc": "8461:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8461:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "8451:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8451:6:12"
																}
															]
														},
														{
															"nativeSrc": "8502:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8502:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8533:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8533:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8544:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8544:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8529:3:12"
																		},
																		"nativeSrc": "8529:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8529:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8516:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8516:12:12"
																},
																"nativeSrc": "8516:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8516:33:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8506:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8506:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8592:16:12",
																"nodeType": "YulBlock",
																"src": "8592:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8601:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8601:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8604:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8604:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8594:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8594:6:12"
																			},
																			"nativeSrc": "8594:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8594:12:12"
																		},
																		"nativeSrc": "8594:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8594:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8564:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8564:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8572:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8572:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8561:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8561:2:12"
																},
																"nativeSrc": "8561:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8561:30:12"
															},
															"nativeSrc": "8558:50:12",
															"nodeType": "YulIf",
															"src": "8558:50:12"
														},
														{
															"nativeSrc": "8617:59:12",
															"nodeType": "YulAssignment",
															"src": "8617:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8648:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8648:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8659:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8659:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8644:3:12"
																		},
																		"nativeSrc": "8644:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8644:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8668:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "8668:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "8627:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "8627:16:12"
																},
																"nativeSrc": "8627:49:12",
																"nodeType": "YulFunctionCall",
																"src": "8627:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "8617:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "8076:606:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8157:9:12",
														"nodeType": "YulTypedName",
														"src": "8157:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8168:7:12",
														"nodeType": "YulTypedName",
														"src": "8168:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8180:6:12",
														"nodeType": "YulTypedName",
														"src": "8180:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8188:6:12",
														"nodeType": "YulTypedName",
														"src": "8188:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8196:6:12",
														"nodeType": "YulTypedName",
														"src": "8196:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8204:6:12",
														"nodeType": "YulTypedName",
														"src": "8204:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8212:6:12",
														"nodeType": "YulTypedName",
														"src": "8212:6:12",
														"type": ""
													}
												],
												"src": "8076:606:12"
											},
											{
												"body": {
													"nativeSrc": "8742:325:12",
													"nodeType": "YulBlock",
													"src": "8742:325:12",
													"statements": [
														{
															"nativeSrc": "8752:22:12",
															"nodeType": "YulAssignment",
															"src": "8752:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8766:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8766:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8769:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8769:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8762:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8762:3:12"
																},
																"nativeSrc": "8762:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8762:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:12"
																}
															]
														},
														{
															"nativeSrc": "8783:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8783:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8813:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8813:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8819:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8819:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8809:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8809:3:12"
																},
																"nativeSrc": "8809:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8809:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8787:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8787:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8860:31:12",
																"nodeType": "YulBlock",
																"src": "8860:31:12",
																"statements": [
																	{
																		"nativeSrc": "8862:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8862:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8876:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8876:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8884:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8884:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8872:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8872:3:12"
																			},
																			"nativeSrc": "8872:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8872:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8862:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8862:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8840:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8840:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8833:6:12"
																},
																"nativeSrc": "8833:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8833:26:12"
															},
															"nativeSrc": "8830:61:12",
															"nodeType": "YulIf",
															"src": "8830:61:12"
														},
														{
															"body": {
																"nativeSrc": "8950:111:12",
																"nodeType": "YulBlock",
																"src": "8950:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8971:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8971:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8978:3:12",
																							"nodeType": "YulLiteral",
																							"src": "8978:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8983:10:12",
																							"nodeType": "YulLiteral",
																							"src": "8983:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8974:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8974:3:12"
																					},
																					"nativeSrc": "8974:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8974:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8964:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8964:6:12"
																			},
																			"nativeSrc": "8964:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8964:31:12"
																		},
																		"nativeSrc": "8964:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8964:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9015:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9015:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9018:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9018:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9008:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9008:6:12"
																			},
																			"nativeSrc": "9008:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9008:15:12"
																		},
																		"nativeSrc": "9008:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9008:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9043:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9043:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9046:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9046:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9036:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9036:6:12"
																			},
																			"nativeSrc": "9036:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9036:15:12"
																		},
																		"nativeSrc": "9036:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9036:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8906:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8906:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8929:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8929:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8937:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8937:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8926:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8926:2:12"
																		},
																		"nativeSrc": "8926:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8926:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8903:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8903:2:12"
																},
																"nativeSrc": "8903:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8903:38:12"
															},
															"nativeSrc": "8900:161:12",
															"nodeType": "YulIf",
															"src": "8900:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8687:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8722:4:12",
														"nodeType": "YulTypedName",
														"src": "8722:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8731:6:12",
														"nodeType": "YulTypedName",
														"src": "8731:6:12",
														"type": ""
													}
												],
												"src": "8687:380:12"
											},
											{
												"body": {
													"nativeSrc": "9201:175:12",
													"nodeType": "YulBlock",
													"src": "9201:175:12",
													"statements": [
														{
															"nativeSrc": "9211:26:12",
															"nodeType": "YulAssignment",
															"src": "9211:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9223:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9234:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9219:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9219:3:12"
																},
																"nativeSrc": "9219:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9219:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9211:4:12"
																}
															]
														},
														{
															"nativeSrc": "9246:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9246:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9264:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9264:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9269:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9269:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9260:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:12"
																		},
																		"nativeSrc": "9260:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9260:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9256:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9256:3:12"
																},
																"nativeSrc": "9256:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9256:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9250:2:12",
																	"nodeType": "YulTypedName",
																	"src": "9250:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9291:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9291:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9306:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9306:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9314:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9314:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:12"
																		},
																		"nativeSrc": "9302:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9302:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9284:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9284:6:12"
																},
																"nativeSrc": "9284:34:12",
																"nodeType": "YulFunctionCall",
																"src": "9284:34:12"
															},
															"nativeSrc": "9284:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "9284:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9338:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9338:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9349:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9349:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9334:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9334:3:12"
																		},
																		"nativeSrc": "9334:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9334:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9358:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9358:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9366:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9366:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9354:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:12"
																		},
																		"nativeSrc": "9354:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9354:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:12"
																},
																"nativeSrc": "9327:43:12",
																"nodeType": "YulFunctionCall",
																"src": "9327:43:12"
															},
															"nativeSrc": "9327:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "9327:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9072:304:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9162:9:12",
														"nodeType": "YulTypedName",
														"src": "9162:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9173:6:12",
														"nodeType": "YulTypedName",
														"src": "9173:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9181:6:12",
														"nodeType": "YulTypedName",
														"src": "9181:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9192:4:12",
														"nodeType": "YulTypedName",
														"src": "9192:4:12",
														"type": ""
													}
												],
												"src": "9072:304:12"
											},
											{
												"body": {
													"nativeSrc": "9510:119:12",
													"nodeType": "YulBlock",
													"src": "9510:119:12",
													"statements": [
														{
															"nativeSrc": "9520:26:12",
															"nodeType": "YulAssignment",
															"src": "9520:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9532:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9532:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9543:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9543:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9528:3:12"
																},
																"nativeSrc": "9528:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9528:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9520:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9520:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9562:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9562:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9573:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9573:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9555:6:12"
																},
																"nativeSrc": "9555:25:12",
																"nodeType": "YulFunctionCall",
																"src": "9555:25:12"
															},
															"nativeSrc": "9555:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "9555:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9600:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9611:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9596:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:12"
																		},
																		"nativeSrc": "9596:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9616:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9616:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:12"
																},
																"nativeSrc": "9589:34:12",
																"nodeType": "YulFunctionCall",
																"src": "9589:34:12"
															},
															"nativeSrc": "9589:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "9589:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9381:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9471:9:12",
														"nodeType": "YulTypedName",
														"src": "9471:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9482:6:12",
														"nodeType": "YulTypedName",
														"src": "9482:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9490:6:12",
														"nodeType": "YulTypedName",
														"src": "9490:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9501:4:12",
														"nodeType": "YulTypedName",
														"src": "9501:4:12",
														"type": ""
													}
												],
												"src": "9381:248:12"
											},
											{
												"body": {
													"nativeSrc": "9666:95:12",
													"nodeType": "YulBlock",
													"src": "9666:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9683:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9683:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9690:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9690:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9695:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9695:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9686:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9686:3:12"
																		},
																		"nativeSrc": "9686:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9686:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9676:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9676:6:12"
																},
																"nativeSrc": "9676:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9676:31:12"
															},
															"nativeSrc": "9676:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9676:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9723:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9723:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9726:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9726:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9716:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9716:6:12"
																},
																"nativeSrc": "9716:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9716:15:12"
															},
															"nativeSrc": "9716:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9716:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9747:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9747:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9750:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9750:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9740:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9740:6:12"
																},
																"nativeSrc": "9740:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9740:15:12"
															},
															"nativeSrc": "9740:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9740:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9634:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9634:127:12"
											},
											{
												"body": {
													"nativeSrc": "9940:178:12",
													"nodeType": "YulBlock",
													"src": "9940:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9957:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9957:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9968:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9968:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9950:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9950:6:12"
																},
																"nativeSrc": "9950:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9950:21:12"
															},
															"nativeSrc": "9950:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9950:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9991:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9991:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10002:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10002:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9987:3:12"
																		},
																		"nativeSrc": "9987:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9987:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10007:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10007:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9980:6:12"
																},
																"nativeSrc": "9980:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9980:30:12"
															},
															"nativeSrc": "9980:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9980:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10030:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10030:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10041:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10041:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10026:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10026:3:12"
																		},
																		"nativeSrc": "10026:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10026:18:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
																		"kind": "string",
																		"nativeSrc": "10046:30:12",
																		"nodeType": "YulLiteral",
																		"src": "10046:30:12",
																		"type": "",
																		"value": "Insufficient balance to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10019:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10019:6:12"
																},
																"nativeSrc": "10019:58:12",
																"nodeType": "YulFunctionCall",
																"src": "10019:58:12"
															},
															"nativeSrc": "10019:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "10019:58:12"
														},
														{
															"nativeSrc": "10086:26:12",
															"nodeType": "YulAssignment",
															"src": "10086:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10098:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10098:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10109:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10109:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10094:3:12"
																},
																"nativeSrc": "10094:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10094:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10086:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10086:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9766:352:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9917:9:12",
														"nodeType": "YulTypedName",
														"src": "9917:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9931:4:12",
														"nodeType": "YulTypedName",
														"src": "9931:4:12",
														"type": ""
													}
												],
												"src": "9766:352:12"
											},
											{
												"body": {
													"nativeSrc": "10155:95:12",
													"nodeType": "YulBlock",
													"src": "10155:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10172:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10172:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10179:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10179:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10184:10:12",
																				"nodeType": "YulLiteral",
																				"src": "10184:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10175:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10175:3:12"
																		},
																		"nativeSrc": "10175:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10175:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10165:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:12"
																},
																"nativeSrc": "10165:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10165:31:12"
															},
															"nativeSrc": "10165:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10165:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10212:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10212:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10215:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10215:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10205:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:12"
																},
																"nativeSrc": "10205:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10205:15:12"
															},
															"nativeSrc": "10205:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10205:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10236:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10236:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10239:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10239:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10229:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10229:6:12"
																},
																"nativeSrc": "10229:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10229:15:12"
															},
															"nativeSrc": "10229:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10229:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10123:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10123:127:12"
											},
											{
												"body": {
													"nativeSrc": "10304:79:12",
													"nodeType": "YulBlock",
													"src": "10304:79:12",
													"statements": [
														{
															"nativeSrc": "10314:17:12",
															"nodeType": "YulAssignment",
															"src": "10314:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10326:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10326:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10329:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10329:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10322:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10322:3:12"
																},
																"nativeSrc": "10322:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10322:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10314:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10314:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10355:22:12",
																"nodeType": "YulBlock",
																"src": "10355:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10357:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10357:16:12"
																			},
																			"nativeSrc": "10357:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10357:18:12"
																		},
																		"nativeSrc": "10357:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10357:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10346:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10346:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10352:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10352:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10343:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10343:2:12"
																},
																"nativeSrc": "10343:11:12",
																"nodeType": "YulFunctionCall",
																"src": "10343:11:12"
															},
															"nativeSrc": "10340:37:12",
															"nodeType": "YulIf",
															"src": "10340:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10255:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10286:1:12",
														"nodeType": "YulTypedName",
														"src": "10286:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10289:1:12",
														"nodeType": "YulTypedName",
														"src": "10289:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10295:4:12",
														"nodeType": "YulTypedName",
														"src": "10295:4:12",
														"type": ""
													}
												],
												"src": "10255:128:12"
											},
											{
												"body": {
													"nativeSrc": "10489:102:12",
													"nodeType": "YulBlock",
													"src": "10489:102:12",
													"statements": [
														{
															"nativeSrc": "10499:26:12",
															"nodeType": "YulAssignment",
															"src": "10499:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10511:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10511:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10522:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10522:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10507:3:12"
																},
																"nativeSrc": "10507:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10507:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10499:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10499:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10541:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10541:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10556:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10556:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10572:3:12",
																								"nodeType": "YulLiteral",
																								"src": "10572:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10577:1:12",
																								"nodeType": "YulLiteral",
																								"src": "10577:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10568:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10568:3:12"
																						},
																						"nativeSrc": "10568:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10568:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10581:1:12",
																						"nodeType": "YulLiteral",
																						"src": "10581:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10564:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10564:3:12"
																				},
																				"nativeSrc": "10564:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10564:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10552:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:12"
																		},
																		"nativeSrc": "10552:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10552:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10534:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10534:6:12"
																},
																"nativeSrc": "10534:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10534:51:12"
															},
															"nativeSrc": "10534:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10534:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10388:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10458:9:12",
														"nodeType": "YulTypedName",
														"src": "10458:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10469:6:12",
														"nodeType": "YulTypedName",
														"src": "10469:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10480:4:12",
														"nodeType": "YulTypedName",
														"src": "10480:4:12",
														"type": ""
													}
												],
												"src": "10388:203:12"
											},
											{
												"body": {
													"nativeSrc": "10781:232:12",
													"nodeType": "YulBlock",
													"src": "10781:232:12",
													"statements": [
														{
															"nativeSrc": "10791:27:12",
															"nodeType": "YulAssignment",
															"src": "10791:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10803:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10803:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10814:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10814:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10799:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10799:3:12"
																},
																"nativeSrc": "10799:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10799:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10791:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10791:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10834:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10834:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10849:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10849:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10865:3:12",
																								"nodeType": "YulLiteral",
																								"src": "10865:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10870:1:12",
																								"nodeType": "YulLiteral",
																								"src": "10870:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10861:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10861:3:12"
																						},
																						"nativeSrc": "10861:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10861:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10874:1:12",
																						"nodeType": "YulLiteral",
																						"src": "10874:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10857:3:12"
																				},
																				"nativeSrc": "10857:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10857:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10845:3:12"
																		},
																		"nativeSrc": "10845:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10845:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10827:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10827:6:12"
																},
																"nativeSrc": "10827:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10827:51:12"
															},
															"nativeSrc": "10827:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10827:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10898:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10898:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10909:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10909:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:12"
																		},
																		"nativeSrc": "10894:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10894:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10914:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10914:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:12"
																},
																"nativeSrc": "10887:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10887:34:12"
															},
															"nativeSrc": "10887:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10887:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10941:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10952:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10952:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10937:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:12"
																		},
																		"nativeSrc": "10937:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10937:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10957:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10930:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10930:6:12"
																},
																"nativeSrc": "10930:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10930:34:12"
															},
															"nativeSrc": "10930:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10930:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10984:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10984:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10995:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10995:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10980:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10980:3:12"
																		},
																		"nativeSrc": "10980:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10980:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11000:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11000:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10973:6:12"
																},
																"nativeSrc": "10973:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10973:34:12"
															},
															"nativeSrc": "10973:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10973:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10596:417:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10726:9:12",
														"nodeType": "YulTypedName",
														"src": "10726:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10737:6:12",
														"nodeType": "YulTypedName",
														"src": "10737:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10745:6:12",
														"nodeType": "YulTypedName",
														"src": "10745:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10753:6:12",
														"nodeType": "YulTypedName",
														"src": "10753:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10761:6:12",
														"nodeType": "YulTypedName",
														"src": "10761:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10772:4:12",
														"nodeType": "YulTypedName",
														"src": "10772:4:12",
														"type": ""
													}
												],
												"src": "10596:417:12"
											},
											{
												"body": {
													"nativeSrc": "11066:77:12",
													"nodeType": "YulBlock",
													"src": "11066:77:12",
													"statements": [
														{
															"nativeSrc": "11076:16:12",
															"nodeType": "YulAssignment",
															"src": "11076:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11087:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11087:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11090:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11090:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11083:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11083:3:12"
																},
																"nativeSrc": "11083:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11083:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11076:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11115:22:12",
																"nodeType": "YulBlock",
																"src": "11115:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11117:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11117:16:12"
																			},
																			"nativeSrc": "11117:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11117:18:12"
																		},
																		"nativeSrc": "11117:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11117:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11107:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11110:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11110:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11104:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11104:2:12"
																},
																"nativeSrc": "11104:10:12",
																"nodeType": "YulFunctionCall",
																"src": "11104:10:12"
															},
															"nativeSrc": "11101:36:12",
															"nodeType": "YulIf",
															"src": "11101:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11018:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11049:1:12",
														"nodeType": "YulTypedName",
														"src": "11049:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11052:1:12",
														"nodeType": "YulTypedName",
														"src": "11052:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11058:3:12",
														"nodeType": "YulTypedName",
														"src": "11058:3:12",
														"type": ""
													}
												],
												"src": "11018:125:12"
											},
											{
												"body": {
													"nativeSrc": "11377:236:12",
													"nodeType": "YulBlock",
													"src": "11377:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11394:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11394:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11405:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11405:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11387:6:12"
																},
																"nativeSrc": "11387:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11387:21:12"
															},
															"nativeSrc": "11387:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11387:21:12"
														},
														{
															"nativeSrc": "11417:70:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11417:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11460:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11460:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11472:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11472:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11483:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11483:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11468:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11468:3:12"
																		},
																		"nativeSrc": "11468:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11468:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "11431:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "11431:28:12"
																},
																"nativeSrc": "11431:56:12",
																"nodeType": "YulFunctionCall",
																"src": "11431:56:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "11421:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11421:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11507:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11507:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11518:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11518:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11503:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11503:3:12"
																		},
																		"nativeSrc": "11503:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11503:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "11527:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11527:6:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11535:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11535:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11523:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:12"
																		},
																		"nativeSrc": "11523:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11523:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11496:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11496:6:12"
																},
																"nativeSrc": "11496:50:12",
																"nodeType": "YulFunctionCall",
																"src": "11496:50:12"
															},
															"nativeSrc": "11496:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "11496:50:12"
														},
														{
															"nativeSrc": "11555:52:12",
															"nodeType": "YulAssignment",
															"src": "11555:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11592:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11592:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "11600:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11600:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "11563:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "11563:28:12"
																},
																"nativeSrc": "11563:44:12",
																"nodeType": "YulFunctionCall",
																"src": "11563:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11555:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "11148:465:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11338:9:12",
														"nodeType": "YulTypedName",
														"src": "11338:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11349:6:12",
														"nodeType": "YulTypedName",
														"src": "11349:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11357:6:12",
														"nodeType": "YulTypedName",
														"src": "11357:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11368:4:12",
														"nodeType": "YulTypedName",
														"src": "11368:4:12",
														"type": ""
													}
												],
												"src": "11148:465:12"
											},
											{
												"body": {
													"nativeSrc": "11849:330:12",
													"nodeType": "YulBlock",
													"src": "11849:330:12",
													"statements": [
														{
															"nativeSrc": "11859:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11859:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11877:3:12",
																				"nodeType": "YulLiteral",
																				"src": "11877:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11882:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11882:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11873:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:12"
																		},
																		"nativeSrc": "11873:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11873:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11886:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11886:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11869:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11869:3:12"
																},
																"nativeSrc": "11869:19:12",
																"nodeType": "YulFunctionCall",
																"src": "11869:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11863:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11863:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11904:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11904:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11919:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11927:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11927:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11915:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:12"
																		},
																		"nativeSrc": "11915:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11915:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11897:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:12"
																},
																"nativeSrc": "11897:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11897:34:12"
															},
															"nativeSrc": "11897:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11897:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11962:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11962:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11947:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11947:3:12"
																		},
																		"nativeSrc": "11947:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11947:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11971:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11971:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11979:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11979:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:12"
																		},
																		"nativeSrc": "11967:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11940:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:12"
																},
																"nativeSrc": "11940:43:12",
																"nodeType": "YulFunctionCall",
																"src": "11940:43:12"
															},
															"nativeSrc": "11940:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "11940:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12003:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12003:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12014:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12014:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11999:3:12"
																		},
																		"nativeSrc": "11999:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11999:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12019:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11992:6:12"
																},
																"nativeSrc": "11992:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11992:34:12"
															},
															"nativeSrc": "11992:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11992:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12046:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12046:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12057:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12057:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12042:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12042:3:12"
																		},
																		"nativeSrc": "12042:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12042:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "12062:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12062:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12035:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12035:6:12"
																},
																"nativeSrc": "12035:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12035:34:12"
															},
															"nativeSrc": "12035:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12035:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12100:3:12",
																				"nodeType": "YulLiteral",
																				"src": "12100:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12085:3:12"
																		},
																		"nativeSrc": "12085:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12085:19:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12106:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12106:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12078:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12078:6:12"
																},
																"nativeSrc": "12078:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12078:32:12"
															},
															"nativeSrc": "12078:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "12078:32:12"
														},
														{
															"nativeSrc": "12119:54:12",
															"nodeType": "YulAssignment",
															"src": "12119:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12145:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12145:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12168:3:12",
																				"nodeType": "YulLiteral",
																				"src": "12168:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12153:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:12"
																		},
																		"nativeSrc": "12153:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12127:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12127:17:12"
																},
																"nativeSrc": "12127:46:12",
																"nodeType": "YulFunctionCall",
																"src": "12127:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12119:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12119:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11618:561:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11786:9:12",
														"nodeType": "YulTypedName",
														"src": "11786:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11797:6:12",
														"nodeType": "YulTypedName",
														"src": "11797:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11805:6:12",
														"nodeType": "YulTypedName",
														"src": "11805:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11813:6:12",
														"nodeType": "YulTypedName",
														"src": "11813:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11821:6:12",
														"nodeType": "YulTypedName",
														"src": "11821:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11829:6:12",
														"nodeType": "YulTypedName",
														"src": "11829:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11840:4:12",
														"nodeType": "YulTypedName",
														"src": "11840:4:12",
														"type": ""
													}
												],
												"src": "11618:561:12"
											},
											{
												"body": {
													"nativeSrc": "12264:169:12",
													"nodeType": "YulBlock",
													"src": "12264:169:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12310:16:12",
																"nodeType": "YulBlock",
																"src": "12310:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12319:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12319:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12322:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12322:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12312:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12312:6:12"
																			},
																			"nativeSrc": "12312:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12312:12:12"
																		},
																		"nativeSrc": "12312:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12312:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12285:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12294:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12294:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12281:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12281:3:12"
																		},
																		"nativeSrc": "12281:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12281:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12306:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12306:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12277:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12277:3:12"
																},
																"nativeSrc": "12277:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12277:32:12"
															},
															"nativeSrc": "12274:52:12",
															"nodeType": "YulIf",
															"src": "12274:52:12"
														},
														{
															"nativeSrc": "12335:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12335:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12354:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12354:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12348:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12348:5:12"
																},
																"nativeSrc": "12348:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12348:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12339:5:12",
																	"nodeType": "YulTypedName",
																	"src": "12339:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12397:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12397:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "12373:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "12373:23:12"
																},
																"nativeSrc": "12373:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12373:30:12"
															},
															"nativeSrc": "12373:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "12373:30:12"
														},
														{
															"nativeSrc": "12412:15:12",
															"nodeType": "YulAssignment",
															"src": "12412:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "12422:5:12",
																"nodeType": "YulIdentifier",
																"src": "12422:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12412:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12184:249:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12230:9:12",
														"nodeType": "YulTypedName",
														"src": "12230:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12241:7:12",
														"nodeType": "YulTypedName",
														"src": "12241:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12253:6:12",
														"nodeType": "YulTypedName",
														"src": "12253:6:12",
														"type": ""
													}
												],
												"src": "12184:249:12"
											},
											{
												"body": {
													"nativeSrc": "12769:496:12",
													"nodeType": "YulBlock",
													"src": "12769:496:12",
													"statements": [
														{
															"nativeSrc": "12779:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12779:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12797:3:12",
																				"nodeType": "YulLiteral",
																				"src": "12797:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12802:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12802:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12793:3:12"
																		},
																		"nativeSrc": "12793:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12793:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12806:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12806:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12789:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12789:3:12"
																},
																"nativeSrc": "12789:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12789:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12783:2:12",
																	"nodeType": "YulTypedName",
																	"src": "12783:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12824:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12824:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12839:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12839:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12847:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "12847:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12835:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12835:3:12"
																		},
																		"nativeSrc": "12835:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12835:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12817:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12817:6:12"
																},
																"nativeSrc": "12817:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12817:34:12"
															},
															"nativeSrc": "12817:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12817:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12871:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12871:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12882:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12882:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12867:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12867:3:12"
																		},
																		"nativeSrc": "12867:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12867:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12891:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12891:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12899:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "12899:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12887:3:12"
																		},
																		"nativeSrc": "12887:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12887:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12860:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12860:6:12"
																},
																"nativeSrc": "12860:43:12",
																"nodeType": "YulFunctionCall",
																"src": "12860:43:12"
															},
															"nativeSrc": "12860:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "12860:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12923:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12923:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12934:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12934:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12919:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12919:3:12"
																		},
																		"nativeSrc": "12919:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12919:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12939:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12939:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12912:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12912:6:12"
																},
																"nativeSrc": "12912:31:12",
																"nodeType": "YulFunctionCall",
																"src": "12912:31:12"
															},
															"nativeSrc": "12912:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "12912:31:12"
														},
														{
															"nativeSrc": "12952:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12952:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12995:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12995:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13007:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13007:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13018:3:12",
																				"nodeType": "YulLiteral",
																				"src": "13018:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13003:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13003:3:12"
																		},
																		"nativeSrc": "13003:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13003:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "12966:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "12966:28:12"
																},
																"nativeSrc": "12966:57:12",
																"nodeType": "YulFunctionCall",
																"src": "12966:57:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "12956:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12956:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13043:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13043:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13054:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13054:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13039:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13039:3:12"
																		},
																		"nativeSrc": "13039:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13039:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "13063:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13063:6:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13071:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13071:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13059:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:12"
																		},
																		"nativeSrc": "13059:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13032:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13032:6:12"
																},
																"nativeSrc": "13032:50:12",
																"nodeType": "YulFunctionCall",
																"src": "13032:50:12"
															},
															"nativeSrc": "13032:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "13032:50:12"
														},
														{
															"nativeSrc": "13091:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13091:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13134:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13134:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "13142:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13142:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "13105:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "13105:28:12"
																},
																"nativeSrc": "13105:44:12",
																"nodeType": "YulFunctionCall",
																"src": "13105:44:12"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "13095:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13095:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13169:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13169:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13180:3:12",
																				"nodeType": "YulLiteral",
																				"src": "13180:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13165:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13165:3:12"
																		},
																		"nativeSrc": "13165:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13165:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "13190:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13190:6:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13198:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13186:3:12"
																		},
																		"nativeSrc": "13186:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13158:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13158:6:12"
																},
																"nativeSrc": "13158:51:12",
																"nodeType": "YulFunctionCall",
																"src": "13158:51:12"
															},
															"nativeSrc": "13158:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "13158:51:12"
														},
														{
															"nativeSrc": "13218:41:12",
															"nodeType": "YulAssignment",
															"src": "13218:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13244:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13244:6:12"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "13252:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13252:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "13226:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13226:17:12"
																},
																"nativeSrc": "13226:33:12",
																"nodeType": "YulFunctionCall",
																"src": "13226:33:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13218:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13218:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12438:827:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12706:9:12",
														"nodeType": "YulTypedName",
														"src": "12706:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12717:6:12",
														"nodeType": "YulTypedName",
														"src": "12717:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12725:6:12",
														"nodeType": "YulTypedName",
														"src": "12725:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12733:6:12",
														"nodeType": "YulTypedName",
														"src": "12733:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12741:6:12",
														"nodeType": "YulTypedName",
														"src": "12741:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12749:6:12",
														"nodeType": "YulTypedName",
														"src": "12749:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12760:4:12",
														"nodeType": "YulTypedName",
														"src": "12760:4:12",
														"type": ""
													}
												],
												"src": "12438:827:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient balance to burn\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100ca575f3560e01c80634e1273f411610088578063a22cb46511610063578063a22cb465146101c4578063bd85b039146101d7578063e985e9c5146101f6578063f242432a14610209575f80fd5b80634e1273f41461017e5780638e81c64d1461019e57806393442218146101b1575f80fd5b8062fdd58e146100ce57806301ffc9a7146100f45780630e89341c146101175780631cb0d48114610137578063202955591461014c5780632eb2c2d61461016b575b5f80fd5b6100e16100dc366004610cb9565b61021c565b6040519081526020015b60405180910390f35b610107610102366004610cf9565b610243565b60405190151581526020016100eb565b61012a610125366004610d1b565b610292565b6040516100eb9190610d60565b61014a610145366004610e46565b610324565b005b6100e161015a366004610d1b565b5f9081526003602052604090205490565b61014a610179366004610f21565b610344565b61019161018c366004610fc4565b6103b0565b6040516100eb91906110b8565b61014a6101ac3660046110ca565b61047b565b61014a6101bf366004610d1b565b610505565b61014a6101d23660046110ea565b610557565b6100e16101e5366004610d1b565b60036020525f908152604090205481565b610107610204366004611123565b610562565b61014a610217366004611154565b61058f565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061027357506001600160e01b031982166303a24d0760e21b145b8061023d57506301ffc9a760e01b6001600160e01b031983161461023d565b6060600280546102a1906111b4565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd906111b4565b80156103185780601f106102ef57610100808354040283529160200191610318565b820191905f5260205f20905b8154815290600101906020018083116102fb57829003601f168201915b50505050509050919050565b61033f3384848460405180602001604052805f8152506105ee565b505050565b336001600160a01b038616811480159061036557506103638682610562565b155b1561039b5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6103a886868686866105ee565b505050505050565b606081518351146103e15781518351604051635b05999160e01b815260048101929092526024820152604401610392565b5f835167ffffffffffffffff8111156103fc576103fc610d72565b604051908082528060200260200182016040528015610425578160200160208202803683370190505b5090505f5b84518110156104735760208082028601015161044e9060208084028701015161021c565b828281518110610460576104606111ec565b602090810291909101015260010161042a565b509392505050565b80610486338461021c565b10156104d45760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152606401610392565b6104df338383610653565b5f82815260036020526040812080548392906104fc908490611214565b90915550505050565b600360209081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff545f818152604080822085905580519384019052825290610553903090839085906106b9565b5050565b610553338383610714565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906105b057506105ae8682610562565b155b156105e15760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610392565b6103a886868686866107a8565b6001600160a01b03841661061757604051632bfa23e760e11b81525f6004820152602401610392565b6001600160a01b03851661063f57604051626a0d4560e21b81525f6004820152602401610392565b61064c8585858585610834565b5050505050565b6001600160a01b03831661067b57604051626a0d4560e21b81525f6004820152602401610392565b604080516001808252602082018590528183019081526060820184905260a082019092525f6080820181815291929161064c91879185908590610834565b6001600160a01b0384166106e257604051632bfa23e760e11b81525f6004820152602401610392565b604080516001808252602082018690528183019081526060820185905260808201909252906103a85f87848487610834565b6001600160a01b03821661073c5760405162ced3e160e81b81525f6004820152602401610392565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107d157604051632bfa23e760e11b81525f6004820152602401610392565b6001600160a01b0385166107f957604051626a0d4560e21b81525f6004820152602401610392565b6040805160018082526020820186905281830190815260608201859052608082019092529061082b8787848487610834565b50505050505050565b61084085858585610887565b6001600160a01b0384161561064c57825133906001036108795760208481015190840151610872838989858589610a96565b50506103a8565b6103a8818787878787610bb7565b80518251146108b65781518151604051635b05999160e01b815260048101929092526024820152604401610392565b335f5b83518110156109b8576020818102858101820151908501909101516001600160a01b0388161561096a575f828152602081815260408083206001600160a01b038c16845290915290205481811015610944576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610392565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156109ae575f828152602081815260408083206001600160a01b038b168452909152812080548392906109a8908490611227565b90915550505b50506001016108b9565b508251600103610a385760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a29929190918252602082015260400190565b60405180910390a4505061064c565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a8792919061123a565b60405180910390a45050505050565b6001600160a01b0384163b156103a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ada9089908990889088908890600401611267565b6020604051808303815f875af1925050508015610b14575060408051601f3d908101601f19168201909252610b11918101906112ab565b60015b610b7b573d808015610b41576040519150601f19603f3d011682016040523d82523d5f602084013e610b46565b606091505b5080515f03610b7357604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461082b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b6001600160a01b0384163b156103a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bfb90899089908890889088906004016112c6565b6020604051808303815f875af1925050508015610c35575060408051601f3d908101601f19168201909252610c32918101906112ab565b60015b610c62573d808015610b41576040519150601f19603f3d011682016040523d82523d5f602084013e610b46565b6001600160e01b0319811663bc197c8160e01b1461082b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610392565b80356001600160a01b0381168114610cb4575f80fd5b919050565b5f8060408385031215610cca575f80fd5b610cd383610c9e565b946020939093013593505050565b6001600160e01b031981168114610cf6575f80fd5b50565b5f60208284031215610d09575f80fd5b8135610d1481610ce1565b9392505050565b5f60208284031215610d2b575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610d146020830184610d32565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610daf57610daf610d72565b604052919050565b5f67ffffffffffffffff821115610dd057610dd0610d72565b5060051b60200190565b5f82601f830112610de9575f80fd5b81356020610dfe610df983610db7565b610d86565b8083825260208201915060208460051b870101935086841115610e1f575f80fd5b602086015b84811015610e3b5780358352918301918301610e24565b509695505050505050565b5f805f60608486031215610e58575f80fd5b610e6184610c9e565b9250602084013567ffffffffffffffff80821115610e7d575f80fd5b610e8987838801610dda565b93506040860135915080821115610e9e575f80fd5b50610eab86828701610dda565b9150509250925092565b5f82601f830112610ec4575f80fd5b813567ffffffffffffffff811115610ede57610ede610d72565b610ef1601f8201601f1916602001610d86565b818152846020838601011115610f05575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610f35575f80fd5b610f3e86610c9e565b9450610f4c60208701610c9e565b9350604086013567ffffffffffffffff80821115610f68575f80fd5b610f7489838a01610dda565b94506060880135915080821115610f89575f80fd5b610f9589838a01610dda565b93506080880135915080821115610faa575f80fd5b50610fb788828901610eb5565b9150509295509295909350565b5f8060408385031215610fd5575f80fd5b823567ffffffffffffffff80821115610fec575f80fd5b818501915085601f830112610fff575f80fd5b8135602061100f610df983610db7565b82815260059290921b8401810191818101908984111561102d575f80fd5b948201945b838610156110525761104386610c9e565b82529482019490820190611032565b96505086013592505080821115611067575f80fd5b5061107485828601610dda565b9150509250929050565b5f815180845260208085019450602084015f5b838110156110ad57815187529582019590820190600101611091565b509495945050505050565b602081525f610d14602083018461107e565b5f80604083850312156110db575f80fd5b50508035926020909101359150565b5f80604083850312156110fb575f80fd5b61110483610c9e565b915060208301358015158114611118575f80fd5b809150509250929050565b5f8060408385031215611134575f80fd5b61113d83610c9e565b915061114b60208401610c9e565b90509250929050565b5f805f805f60a08688031215611168575f80fd5b61117186610c9e565b945061117f60208701610c9e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111a8575f80fd5b610fb788828901610eb5565b600181811c908216806111c857607f821691505b6020821081036111e657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561023d5761023d611200565b8082018082111561023d5761023d611200565b604081525f61124c604083018561107e565b828103602084015261125e818561107e565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906112a090830184610d32565b979650505050505050565b5f602082840312156112bb575f80fd5b8151610d1481610ce1565b6001600160a01b0386811682528516602082015260a0604082018190525f906112f19083018661107e565b8281036060840152611303818661107e565b905082810360808401526113178185610d32565b9897505050505050505056fea2646970667358221220708d813e048a13d9ddbb68ef1d7996ba2d0fd98dc762eae2f4752fe91cbd131064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8E81C64D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x93442218 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1CB0D481 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x20295559 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x273 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x23D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x23D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0x11B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x318 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x318 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x365 JUMPI POP PUSH2 0x363 DUP7 DUP3 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5EE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3E1 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x425 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x44E SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x21C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x460 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x42A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x486 CALLER DUP5 PUSH2 0x21C JUMP JUMPDEST LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x4DF CALLER DUP4 DUP4 PUSH2 0x653 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4FC SWAP1 DUP5 SWAP1 PUSH2 0x1214 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 ADD SWAP1 MSTORE DUP3 MSTORE SWAP1 PUSH2 0x553 SWAP1 ADDRESS SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x553 CALLER DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x5B0 JUMPI POP PUSH2 0x5AE DUP7 DUP3 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3A8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x64C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x834 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0x64C SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3A8 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x82B DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x834 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 DUP6 DUP6 DUP6 DUP6 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x64C JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x879 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x872 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xA96 JUMP JUMPDEST POP POP PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xBB7 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8B6 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x96A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x9AE JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9A8 SWAP1 DUP5 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x8B9 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xA38 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x64C JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA87 SWAP3 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xADA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB11 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB7B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xBFB SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC35 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC32 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC62 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCD3 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD09 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD14 DUP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDAF JUMPI PUSH2 0xDAF PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDD0 JUMPI PUSH2 0xDD0 PUSH2 0xD72 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDFE PUSH2 0xDF9 DUP4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xE1F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE3B JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE24 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE61 DUP5 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE7D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP8 DUP4 DUP9 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEAB DUP7 DUP3 DUP8 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xEF1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xD86 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xF05 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xC9E JUMP JUMPDEST SWAP5 POP PUSH2 0xF4C PUSH1 0x20 DUP8 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF74 DUP10 DUP4 DUP11 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF95 DUP10 DUP4 DUP11 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xFAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB7 DUP9 DUP3 DUP10 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFEC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x100F PUSH2 0xDF9 DUP4 PUSH2 0xDB7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x102D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1043 DUP7 PUSH2 0xC9E JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1074 DUP6 DUP3 DUP7 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10AD JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1091 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x107E JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1104 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x113D DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0x114B PUSH1 0x20 DUP5 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1171 DUP7 PUSH2 0xC9E JUMP JUMPDEST SWAP5 POP PUSH2 0x117F PUSH1 0x20 DUP8 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB7 DUP9 DUP3 DUP10 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23D PUSH2 0x1200 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23D PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x124C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x107E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x125E DUP2 DUP6 PUSH2 0x107E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12A0 SWAP1 DUP4 ADD DUP5 PUSH2 0xD32 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD14 DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12F1 SWAP1 DUP4 ADD DUP7 PUSH2 0x107E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1303 DUP2 DUP7 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1317 DUP2 DUP6 PUSH2 0xD32 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x8D813E048A13D9DDBB68EF1D7996BA2D0F 0xD9 DUP14 0xC7 PUSH3 0xEAE2F4 PUSH22 0x2FE91CBD131064736F6C634300081900330000000000 ",
							"sourceMap": "119:847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;:::i;:::-;;:::i;:::-;;;597:25:12;;;585:2;570:18;2247:132:1;;;;;;;;1380:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:12;;1177:22;1159:41;;1147:2;1132:18;1380:305:1;1019:187:12;2084:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;465:172:11:-;;;;;;:::i;:::-;;:::i;:::-;;865:98;;;;;;:::i;:::-;918:4;941:15;;;:11;:15;;;;;;;865:98;4014:429:1;;;;;;:::i;:::-;;:::i;2536:552::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;643:216:11:-;;;;;;:::i;:::-;;:::i;260:199::-;;;;;;:::i;:::-;;:::i;3156:144:1:-;;;;;;:::i;:::-;;:::i;161:40:11:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3367:157:1;;;;;;:::i;:::-;;:::i;3591:351::-;;;;;;:::i;:::-;;:::i;2247:132::-;2324:7;2350:13;;;;;;;;;;;-1:-1:-1;;;;;2350:22:1;;;;;;;;;;2247:132;;;;;:::o;1380:305::-;1482:4;-1:-1:-1;;;;;;1517:41:1;;-1:-1:-1;;;1517:41:1;;:109;;-1:-1:-1;;;;;;;1574:52:1;;-1:-1:-1;;;1574:52:1;1517:109;:161;;;-1:-1:-1;;;;;;;;;;861:40:8;;;1642:36:1;762:146:8;2084:103:1;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;465:172:11:-;567:63;590:10;602:9;613:3;618:7;567:63;;;;;;;;;;;;:22;:63::i;:::-;465:172;;;:::o;4014:429:1:-;735:10:6;-1:-1:-1;;;;;4251:14:1;;;;;;;:49;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4323:42;;-1:-1:-1;;;4323:42:1;;-1:-1:-1;;;;;9302:15:12;;;4323:42:1;;;9284:34:12;9354:15;;9334:18;;;9327:43;9219:18;;4323:42:1;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:10;;2782:15;;2744:54;;-1:-1:-1;;;2744:54:1;;;;;9555:25:12;;;;9596:18;;;9589:34;9528:18;;2744:54:1;9381:248:12;2688:121:1;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2852:30:1;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;4777:4:5;4768:14;;;4748:35;;;4742:42;2972:68:1;;4777:4:5;4768:14;;;4748:35;;;4742:42;2247:132:1;:::i;2972:68::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2934:3;;2893:158;;;-1:-1:-1;3068:13:1;2536:552;-1:-1:-1;;;2536:552:1:o;643:216:11:-;739:6;710:25;720:10;732:2;710:9;:25::i;:::-;:35;;702:76;;;;-1:-1:-1;;;702:76:11;;9968:2:12;702:76:11;;;9950:21:12;10007:2;9987:18;;;9980:30;10046;10026:18;;;10019:58;10094:18;;702:76:11;9766:352:12;702:76:11;788:29;794:10;806:2;810:6;788:5;:29::i;:::-;827:15;;;;:11;:15;;;;;:25;;846:6;;827:15;:25;;846:6;;827:25;:::i;:::-;;;;-1:-1:-1;;;;643:216:11:o;260:199::-;334:11;:14;;;;;;319:12;358:20;;;334:14;358:20;;;:36;;;404:48;;;;;;;;;334:14;404:48;;418:4;;334:14;;381:13;;404:5;:48::i;:::-;309:150;260:199;:::o;3156:144:1:-;3241:52;735:10:6;3274:8:1;3284;3241:18;:52::i;3367:157::-;-1:-1:-1;;;;;3480:27:1;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3367:157::o;3591:351::-;735:10:6;-1:-1:-1;;;;;3757:14:1;;;;;;;:49;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3829:42;;-1:-1:-1;;;3829:42:1;;-1:-1:-1;;;;;9302:15:12;;;3829:42:1;;;9284:34:12;9354:15;;9334:18;;;9327:43;9219:18;;3829:42:1;9072:304:12;3753:129:1;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;9015:445::-;-1:-1:-1;;;;;9208:16:1;;9204:88;;9247:34;;-1:-1:-1;;;9247:34:1;;9278:1;9247:34;;;10534:51:12;10507:18;;9247:34:1;10388:203:12;9204:88:1;-1:-1:-1;;;;;9305:18:1;;9301:88;;9346:32;;-1:-1:-1;;;9346:32:1;;9375:1;9346:32;;;10534:51:12;10507:18;;9346:32:1;10388:203:12;9301:88:1;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;12099:329::-;-1:-1:-1;;;;;12178:18:1;;12174:88;;12219:32;;-1:-1:-1;;;12219:32:1;;12248:1;12219:32;;;10534:51:12;10507:18;;12219:32:1;10388:203:12;12174:88:1;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;12360:61;;;;;;-1:-1:-1;16895:17:1;;;12360:61;;;16368:11;;16692:17;12360:61;;12387:4;;16368:11;;16692:17;;12360:26;:61::i;10746:346::-;-1:-1:-1;;;;;10842:16:1;;10838:88;;10881:34;;-1:-1:-1;;;10881:34:1;;10912:1;10881:34;;;10534:51:12;10507:18;;10881:34:1;10388:203:12;10838:88:1;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;11024:61;-1:-1:-1;11063:2:1;16368:11;16692:17;11080:4;11024:26;:61::i;13268:315::-;-1:-1:-1;;;;;13375:22:1;;13371:94;;13420:34;;-1:-1:-1;;;13420:34:1;;13451:1;13420:34;;;10534:51:12;10507:18;;13420:34:1;10388:203:12;13371:94:1;-1:-1:-1;;;;;13474:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13474:46:1;;;;;;;;;;13535:41;;1159::12;;;13535::1;;1132:18:12;13535:41:1;;;;;;;13268:315;;;:::o;8151:463::-;-1:-1:-1;;;;;8273:16:1;;8269:88;;8312:34;;-1:-1:-1;;;8312:34:1;;8343:1;8312:34;;;10534:51:12;10507:18;;8312:34:1;10388:203:12;8269:88:1;-1:-1:-1;;;;;8370:18:1;;8366:88;;8411:32;;-1:-1:-1;;;8411:32:1;;8440:1;8411:32;;;10534:51:12;10507:18;;8411:32:1;10388:203:12;8366:88:1;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;8552:55;8579:4;8585:2;16368:11;16692:17;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;-1:-1:-1;;;;;7249:16:1;;;7245:443;;7330:10;;735::6;;7344:1:1;7330:15;7326:352;;4777:4:5;4748:35;;;4742:42;4748:35;;;4742:42;7483:67:1;7514:8;7524:4;7530:2;4742:42:5;;7545:4:1;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:10;;5353:13;;5315:52;;-1:-1:-1;;;5315:52:1;;;;;9555:25:12;;;;9596:18;;;9589:34;9528:18;;5315:52:1;9381:248:12;5261:117:1;735:10:6;5388:16:1;5430:691;5454:3;:10;5450:1;:14;5430:691;;;4777:4:5;4768:14;;;4748:35;;;;;4742:42;4748:35;;;;;;4742:42;-1:-1:-1;;;;;5600:18:1;;;5596:420;;5638:19;5660:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:1;;;;;;;;;;5701;;;5697:129;;;5751:56;;-1:-1:-1;;;5751:56:1;;-1:-1:-1;;;;;10845:32:12;;5751:56:1;;;10827:51:12;10894:18;;;10887:34;;;10937:18;;;10930:34;;;10980:18;;;10973:34;;;10799:19;;5751:56:1;10596:417:12;5697:129:1;5942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5942:19:1;;;;;;;;;5964;;;;5942:41;;5596:420;-1:-1:-1;;;;;6034:16:1;;;6030:81;;6070:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6070:17:1;;;;;;;;;:26;;6091:5;;6070:9;:26;;6091:5;;6070:26;:::i;:::-;;;;-1:-1:-1;;6030:81:1;-1:-1:-1;;5466:3:1;;5430:691;;;;6135:3;:10;6149:1;6135:15;6131:288;;4777:4:5;4748:35;;4742:42;6166:10:1;;4777:4:5;4748:35;;4742:42;6166:38:1;;-1:-1:-1;6312:2:1;-1:-1:-1;;;;;6281:45:1;6306:4;-1:-1:-1;;;;;6281:45:1;6296:8;-1:-1:-1;;;;;6281:45:1;;6316:2;6320:5;6281:45;;;;;;9555:25:12;;;9611:2;9596:18;;9589:34;9543:2;9528:18;;9381:248;6281:45:1;;;;;;;;6152:185;;6131:288;;;6392:2;-1:-1:-1;;;;;6362:46:1;6386:4;-1:-1:-1;;;;;6362:46:1;6376:8;-1:-1:-1;;;;;6362:46:1;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;5251:1174;5144:1281;;;;:::o;13761:974::-;-1:-1:-1;;;;;13967:14:1;;;:18;13963:766;;14005:71;;-1:-1:-1;;;14005:71:1;;-1:-1:-1;;;;;14005:38:1;;;;;:71;;14044:8;;14054:4;;14060:2;;14064:5;;14071:4;;14005:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14005:71:1;;;;;;;;-1:-1:-1;;14005:71:1;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:6;:13;14377:1;14360:18;14356:349;;14464:26;;-1:-1:-1;;;14464:26:1;;-1:-1:-1;;;;;10552:32:12;;14464:26:1;;;10534:51:12;10507:18;;14464:26:1;10388:203:12;14356:349:1;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;-1:-1:-1;;;;;;14125:55:1;;-1:-1:-1;;;14125:55:1;14121:174;;14250:26;;-1:-1:-1;;;14250:26:1;;-1:-1:-1;;;;;10552:32:12;;14250:26:1;;;10534:51:12;10507:18;;14250:26:1;10388:203:12;14923:1041:1;-1:-1:-1;;;;;15154:14:1;;;:18;15150:808;;15192:78;;-1:-1:-1;;;15192:78:1;;-1:-1:-1;;;;;15192:43:1;;;;;:78;;15236:8;;15246:4;;15252:3;;15257:6;;15265:4;;15192:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15192:78:1;;;;;;;;-1:-1:-1;;15192:78:1;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15349:60:1;;-1:-1:-1;;;15349:60:1;15345:179;;15479:26;;-1:-1:-1;;;15479:26:1;;-1:-1:-1;;;;;10552:32:12;;15479:26:1;;;10534:51:12;10507:18;;15479:26:1;10388:203:12;14:173;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;633:131::-;-1:-1:-1;;;;;;707:32:12;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:12:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:12;;1211:180;-1:-1:-1;1211:180:12:o;1396:289::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1559:6;1552:4;1545:5;1541:16;1534:4;1529:3;1525:14;1519:47;1611:1;1604:4;1595:6;1590:3;1586:16;1582:27;1575:38;1674:4;1667:2;1663:7;1658:2;1650:6;1646:15;1642:29;1637:3;1633:39;1629:50;1622:57;;;1396:289;;;;:::o;1690:220::-;1839:2;1828:9;1821:21;1802:4;1859:45;1900:2;1889:9;1885:18;1877:6;1859:45;:::i;1915:127::-;1976:10;1971:3;1967:20;1964:1;1957:31;2007:4;2004:1;1997:15;2031:4;2028:1;2021:15;2047:275;2118:2;2112:9;2183:2;2164:13;;-1:-1:-1;;2160:27:12;2148:40;;2218:18;2203:34;;2239:22;;;2200:62;2197:88;;;2265:18;;:::i;:::-;2301:2;2294:22;2047:275;;-1:-1:-1;2047:275:12:o;2327:183::-;2387:4;2420:18;2412:6;2409:30;2406:56;;;2442:18;;:::i;:::-;-1:-1:-1;2487:1:12;2483:14;2499:4;2479:25;;2327:183::o;2515:668::-;2569:5;2622:3;2615:4;2607:6;2603:17;2599:27;2589:55;;2640:1;2637;2630:12;2589:55;2676:6;2663:20;2702:4;2726:60;2742:43;2782:2;2742:43;:::i;:::-;2726:60;:::i;:::-;2808:3;2832:2;2827:3;2820:15;2860:4;2855:3;2851:14;2844:21;;2917:4;2911:2;2908:1;2904:10;2896:6;2892:23;2888:34;2874:48;;2945:3;2937:6;2934:15;2931:35;;;2962:1;2959;2952:12;2931:35;2998:4;2990:6;2986:17;3012:142;3028:6;3023:3;3020:15;3012:142;;;3094:17;;3082:30;;3132:12;;;;3045;;3012:142;;;-1:-1:-1;3172:5:12;2515:668;-1:-1:-1;;;;;;2515:668:12:o;3188:669::-;3315:6;3323;3331;3384:2;3372:9;3363:7;3359:23;3355:32;3352:52;;;3400:1;3397;3390:12;3352:52;3423:29;3442:9;3423:29;:::i;:::-;3413:39;;3503:2;3492:9;3488:18;3475:32;3526:18;3567:2;3559:6;3556:14;3553:34;;;3583:1;3580;3573:12;3553:34;3606:61;3659:7;3650:6;3639:9;3635:22;3606:61;:::i;:::-;3596:71;;3720:2;3709:9;3705:18;3692:32;3676:48;;3749:2;3739:8;3736:16;3733:36;;;3765:1;3762;3755:12;3733:36;;3788:63;3843:7;3832:8;3821:9;3817:24;3788:63;:::i;:::-;3778:73;;;3188:669;;;;;:::o;3862:530::-;3904:5;3957:3;3950:4;3942:6;3938:17;3934:27;3924:55;;3975:1;3972;3965:12;3924:55;4011:6;3998:20;4037:18;4033:2;4030:26;4027:52;;;4059:18;;:::i;:::-;4103:55;4146:2;4127:13;;-1:-1:-1;;4123:27:12;4152:4;4119:38;4103:55;:::i;:::-;4183:2;4174:7;4167:19;4229:3;4222:4;4217:2;4209:6;4205:15;4201:26;4198:35;4195:55;;;4246:1;4243;4236:12;4195:55;4311:2;4304:4;4296:6;4292:17;4285:4;4276:7;4272:18;4259:55;4359:1;4334:16;;;4352:4;4330:27;4323:38;;;;4338:7;3862:530;-1:-1:-1;;;3862:530:12:o;4397:943::-;4551:6;4559;4567;4575;4583;4636:3;4624:9;4615:7;4611:23;4607:33;4604:53;;;4653:1;4650;4643:12;4604:53;4676:29;4695:9;4676:29;:::i;:::-;4666:39;;4724:38;4758:2;4747:9;4743:18;4724:38;:::i;:::-;4714:48;;4813:2;4802:9;4798:18;4785:32;4836:18;4877:2;4869:6;4866:14;4863:34;;;4893:1;4890;4883:12;4863:34;4916:61;4969:7;4960:6;4949:9;4945:22;4916:61;:::i;:::-;4906:71;;5030:2;5019:9;5015:18;5002:32;4986:48;;5059:2;5049:8;5046:16;5043:36;;;5075:1;5072;5065:12;5043:36;5098:63;5153:7;5142:8;5131:9;5127:24;5098:63;:::i;:::-;5088:73;;5214:3;5203:9;5199:19;5186:33;5170:49;;5244:2;5234:8;5231:16;5228:36;;;5260:1;5257;5250:12;5228:36;;5283:51;5326:7;5315:8;5304:9;5300:24;5283:51;:::i;:::-;5273:61;;;4397:943;;;;;;;;:::o;5345:1146::-;5463:6;5471;5524:2;5512:9;5503:7;5499:23;5495:32;5492:52;;;5540:1;5537;5530:12;5492:52;5580:9;5567:23;5609:18;5650:2;5642:6;5639:14;5636:34;;;5666:1;5663;5656:12;5636:34;5704:6;5693:9;5689:22;5679:32;;5749:7;5742:4;5738:2;5734:13;5730:27;5720:55;;5771:1;5768;5761:12;5720:55;5807:2;5794:16;5829:4;5853:60;5869:43;5909:2;5869:43;:::i;5853:60::-;5947:15;;;6029:1;6025:10;;;;6017:19;;6013:28;;;5978:12;;;;6053:19;;;6050:39;;;6085:1;6082;6075:12;6050:39;6109:11;;;;6129:148;6145:6;6140:3;6137:15;6129:148;;;6211:23;6230:3;6211:23;:::i;:::-;6199:36;;6162:12;;;;6255;;;;6129:148;;;6296:5;-1:-1:-1;;6339:18:12;;6326:32;;-1:-1:-1;;6370:16:12;;;6367:36;;;6399:1;6396;6389:12;6367:36;;6422:63;6477:7;6466:8;6455:9;6451:24;6422:63;:::i;:::-;6412:73;;;5345:1146;;;;;:::o;6496:439::-;6549:3;6587:5;6581:12;6614:6;6609:3;6602:19;6640:4;6669;6664:3;6660:14;6653:21;;6708:4;6701:5;6697:16;6731:1;6741:169;6755:6;6752:1;6749:13;6741:169;;;6816:13;;6804:26;;6850:12;;;;6885:15;;;;6777:1;6770:9;6741:169;;;-1:-1:-1;6926:3:12;;6496:439;-1:-1:-1;;;;;6496:439:12:o;6940:261::-;7119:2;7108:9;7101:21;7082:4;7139:56;7191:2;7180:9;7176:18;7168:6;7139:56;:::i;7206:248::-;7274:6;7282;7335:2;7323:9;7314:7;7310:23;7306:32;7303:52;;;7351:1;7348;7341:12;7303:52;-1:-1:-1;;7374:23:12;;;7444:2;7429:18;;;7416:32;;-1:-1:-1;7206:248:12:o;7459:347::-;7524:6;7532;7585:2;7573:9;7564:7;7560:23;7556:32;7553:52;;;7601:1;7598;7591:12;7553:52;7624:29;7643:9;7624:29;:::i;:::-;7614:39;;7703:2;7692:9;7688:18;7675:32;7750:5;7743:13;7736:21;7729:5;7726:32;7716:60;;7772:1;7769;7762:12;7716:60;7795:5;7785:15;;;7459:347;;;;;:::o;7811:260::-;7879:6;7887;7940:2;7928:9;7919:7;7915:23;7911:32;7908:52;;;7956:1;7953;7946:12;7908:52;7979:29;7998:9;7979:29;:::i;:::-;7969:39;;8027:38;8061:2;8050:9;8046:18;8027:38;:::i;:::-;8017:48;;7811:260;;;;;:::o;8076:606::-;8180:6;8188;8196;8204;8212;8265:3;8253:9;8244:7;8240:23;8236:33;8233:53;;;8282:1;8279;8272:12;8233:53;8305:29;8324:9;8305:29;:::i;:::-;8295:39;;8353:38;8387:2;8376:9;8372:18;8353:38;:::i;:::-;8343:48;;8438:2;8427:9;8423:18;8410:32;8400:42;;8489:2;8478:9;8474:18;8461:32;8451:42;;8544:3;8533:9;8529:19;8516:33;8572:18;8564:6;8561:30;8558:50;;;8604:1;8601;8594:12;8558:50;8627:49;8668:7;8659:6;8648:9;8644:22;8627:49;:::i;8687:380::-;8766:1;8762:12;;;;8809;;;8830:61;;8884:4;8876:6;8872:17;8862:27;;8830:61;8937:2;8929:6;8926:14;8906:18;8903:38;8900:161;;8983:10;8978:3;8974:20;8971:1;8964:31;9018:4;9015:1;9008:15;9046:4;9043:1;9036:15;8900:161;;8687:380;;;:::o;9634:127::-;9695:10;9690:3;9686:20;9683:1;9676:31;9726:4;9723:1;9716:15;9750:4;9747:1;9740:15;10123:127;10184:10;10179:3;10175:20;10172:1;10165:31;10215:4;10212:1;10205:15;10239:4;10236:1;10229:15;10255:128;10322:9;;;10343:11;;;10340:37;;;10357:18;;:::i;11018:125::-;11083:9;;;11104:10;;;11101:36;;;11117:18;;:::i;11148:465::-;11405:2;11394:9;11387:21;11368:4;11431:56;11483:2;11472:9;11468:18;11460:6;11431:56;:::i;:::-;11535:9;11527:6;11523:22;11518:2;11507:9;11503:18;11496:50;11563:44;11600:6;11592;11563:44;:::i;:::-;11555:52;11148:465;-1:-1:-1;;;;;11148:465:12:o;11618:561::-;-1:-1:-1;;;;;11915:15:12;;;11897:34;;11967:15;;11962:2;11947:18;;11940:43;12014:2;11999:18;;11992:34;;;12057:2;12042:18;;12035:34;;;11877:3;12100;12085:19;;12078:32;;;11840:4;;12127:46;;12153:19;;12145:6;12127:46;:::i;:::-;12119:54;11618:561;-1:-1:-1;;;;;;;11618:561:12:o;12184:249::-;12253:6;12306:2;12294:9;12285:7;12281:23;12277:32;12274:52;;;12322:1;12319;12312:12;12274:52;12354:9;12348:16;12373:30;12397:5;12373:30;:::i;12438:827::-;-1:-1:-1;;;;;12835:15:12;;;12817:34;;12887:15;;12882:2;12867:18;;12860:43;12797:3;12934:2;12919:18;;12912:31;;;12760:4;;12966:57;;13003:19;;12995:6;12966:57;:::i;:::-;13071:9;13063:6;13059:22;13054:2;13043:9;13039:18;13032:50;13105:44;13142:6;13134;13105:44;:::i;:::-;13091:58;;13198:9;13190:6;13186:22;13180:3;13169:9;13165:19;13158:51;13226:33;13252:6;13244;13226:33;:::i;:::-;13218:41;12438:827;-1:-1:-1;;;;;;;;12438:827:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "990600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addTokenType(uint256)": "infinite",
								"balanceOf(address,uint256)": "2634",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burnTokens(uint256,uint256)": "infinite",
								"gettotalSupply(uint256)": "2513",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26678",
								"supportsInterface(bytes4)": "552",
								"totalSupply(uint256)": "2468",
								"transferTokens(address,uint256[],uint256[])": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 208,
									"end": 254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 208,
									"end": 254,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 208,
									"end": 254,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 247,
									"end": 250,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 247,
									"end": 250,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 208,
									"end": 254,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1058,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 281,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 267,
									"end": 276,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 258,
									"end": 265,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 254,
									"end": 277,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 250,
									"end": 282,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 247,
									"end": 299,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 247,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 247,
									"end": 299,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 285,
									"end": 297,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 247,
									"end": 299,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 247,
									"end": 299,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 322,
									"end": 338,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 322,
									"end": 338,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 387,
									"end": 401,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 387,
									"end": 401,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 387,
									"end": 401,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 384,
									"end": 418,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 384,
									"end": 418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 384,
									"end": 418,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 404,
									"end": 416,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 384,
									"end": 418,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 384,
									"end": 418,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 452,
									"end": 458,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 450,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 437,
									"end": 459,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 427,
									"end": 459,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 427,
									"end": 459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 497,
									"end": 504,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 490,
									"end": 494,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 486,
									"end": 488,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 482,
									"end": 495,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 478,
									"end": 505,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 468,
									"end": 523,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 468,
									"end": 523,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 519,
									"end": 520,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 517,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 509,
									"end": 521,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 468,
									"end": 523,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 468,
									"end": 523,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 548,
									"end": 550,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 542,
									"end": 551,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 570,
									"end": 572,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 566,
									"end": 568,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 563,
									"end": 573,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 560,
									"end": 596,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 560,
									"end": 596,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 560,
									"end": 596,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 576,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 576,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 576,
									"end": 594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 576,
									"end": 594,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 576,
									"end": 594,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 651,
									"end": 653,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 645,
									"end": 654,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 619,
									"end": 621,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 705,
									"end": 718,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 705,
									"end": 718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 701,
									"end": 723,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 701,
									"end": 723,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 701,
									"end": 723,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 725,
									"end": 727,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 697,
									"end": 728,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 693,
									"end": 733,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 681,
									"end": 734,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 681,
									"end": 734,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 681,
									"end": 734,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 749,
									"end": 767,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 749,
									"end": 767,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 749,
									"end": 767,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 746,
									"end": 792,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 743,
									"end": 815,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 743,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 743,
									"end": 815,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 795,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 795,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 795,
									"end": 813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 795,
									"end": 813,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 795,
									"end": 813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 835,
									"end": 845,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 831,
									"end": 833,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 846,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 870,
									"end": 872,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 868,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 855,
									"end": 873,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 910,
									"end": 917,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 905,
									"end": 907,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 896,
									"end": 898,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 892,
									"end": 903,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 888,
									"end": 908,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 885,
									"end": 918,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 882,
									"end": 935,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 882,
									"end": 935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 882,
									"end": 935,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 931,
									"end": 932,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 929,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 921,
									"end": 933,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 882,
									"end": 935,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 882,
									"end": 935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 980,
									"end": 982,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 975,
									"end": 977,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 971,
									"end": 973,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 967,
									"end": 978,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 962,
									"end": 964,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 960,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 950,
									"end": 965,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 944,
									"end": 983,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1018,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1018,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1018,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1020,
									"end": 1022,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 999,
									"end": 1023,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1027,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1027,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1027,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1027,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1007,
									"end": 1013,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1058,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1058,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1063,
									"end": 1443,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1063,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1197,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1197,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1197,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1264,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1252,
									"end": 1258,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1248,
									"end": 1265,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1265,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1315,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1305,
									"end": 1311,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1317,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1276,
									"end": 1437,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1359,
									"end": 1369,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1354,
									"end": 1357,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1350,
									"end": 1370,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1347,
									"end": 1348,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1371,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1394,
									"end": 1398,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1391,
									"end": 1392,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1384,
									"end": 1399,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1422,
									"end": 1426,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1419,
									"end": 1420,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1412,
									"end": 1427,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1437,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1276,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1437,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1063,
									"end": 1443,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1063,
									"end": 1443,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1063,
									"end": 1443,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1063,
									"end": 1443,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 2092,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1574,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1676,
									"end": 1678,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1671,
									"end": 1674,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1668,
									"end": 1679,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1665,
									"end": 2086,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1665,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1665,
									"end": 2086,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1717,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1710,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1702,
									"end": 1718,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1756,
									"end": 1760,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1753,
									"end": 1754,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1743,
									"end": 1761,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1826,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1814,
									"end": 1824,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 1829,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1803,
									"end": 1830,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1797,
									"end": 1801,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1793,
									"end": 1831,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 1866,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1860,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1847,
									"end": 1867,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1891,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1844,
									"end": 1891,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1885,
									"end": 1889,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1891,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1844,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1940,
									"end": 1942,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1935,
									"end": 1938,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1931,
									"end": 1943,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1928,
									"end": 1929,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1924,
									"end": 1944,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1922,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1914,
									"end": 1945,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1904,
									"end": 1945,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1904,
									"end": 1945,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2015,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2003,
									"end": 2016,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2058,
									"end": 2074,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2074,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2039,
									"end": 2040,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2028,
									"end": 2041,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1995,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1999,
									"end": 2002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1999,
									"end": 2002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1665,
									"end": 2086,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1665,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 2092,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 2092,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 2092,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 2092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2388,
									"end": 2398,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2388,
									"end": 2398,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2410,
									"end": 2440,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2410,
									"end": 2440,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2407,
									"end": 2463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2443,
									"end": 2461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2472,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2562,
									"end": 2568,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2554,
									"end": 2558,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2548,
									"end": 2559,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2522,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2560,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2522,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2520,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2472,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2472,
									"end": 2569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2472,
									"end": 2569,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2472,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2628,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2624,
									"end": 2628,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2681,
									"end": 2683,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2670,
									"end": 2684,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2670,
									"end": 2684,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2698,
									"end": 2699,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3400,
									"end": 3401,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3417,
									"end": 3423,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 3503,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 3503,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3414,
									"end": 3503,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3469,
									"end": 3488,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3488,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3488,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3463,
									"end": 3489,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 3503,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3414,
									"end": 3503,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2225,
									"end": 2226,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2221,
									"end": 2232,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2232,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2232,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2241,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2242,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2203,
									"end": 2243,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2249,
									"end": 2250,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2245,
									"end": 2256,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2245,
									"end": 2256,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2245,
									"end": 2256,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2200,
									"end": 2257,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3597,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3597,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2693,
									"end": 3356,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1514,
									"end": 1528,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1528,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1528,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1562,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 1563,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1545,
									"end": 1563,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2729,
									"end": 2749,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2729,
									"end": 2749,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2729,
									"end": 2749,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2861,
									"end": 2868,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2950,
									"end": 2969,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2950,
									"end": 2969,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2950,
									"end": 2969,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2944,
									"end": 2970,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2971,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2971,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3042,
									"end": 3069,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3042,
									"end": 3069,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3042,
									"end": 3069,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3042,
									"end": 3069,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2998,
									"end": 3012,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3012,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3012,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3012,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2847,
									"end": 3083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2851,
									"end": 2854,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3111,
									"end": 3117,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3102,
									"end": 3109,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3099,
									"end": 3118,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3172,
									"end": 3191,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3172,
									"end": 3191,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3172,
									"end": 3191,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3166,
									"end": 3192,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3255,
									"end": 3256,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3251,
									"end": 3265,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3265,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3265,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3267,
									"end": 3270,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3247,
									"end": 3271,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3243,
									"end": 3280,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3239,
									"end": 3281,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3224,
									"end": 3282,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3209,
									"end": 3283,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3209,
									"end": 3283,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3297,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3343,
									"end": 3344,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3334,
									"end": 3340,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3331,
									"end": 3332,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3327,
									"end": 3341,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3323,
									"end": 3345,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3317,
									"end": 3321,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3310,
									"end": 3346,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2663,
									"end": 3607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2268,
									"end": 3613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2268,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 119,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 966,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220708d813e048a13d9ddbb68ef1d7996ba2d0fd98dc762eae2f4752fe91cbd131064736f6c63430008190033",
									".code": [
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "BD85B039"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "8E81C64D"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "93442218"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "E89341C"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "1CB0D481"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "20295559"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "2EB2C2D6"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 966,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 465,
											"end": 637,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 465,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 465,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 865,
											"end": 963,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 865,
											"end": 963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 865,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 865,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 865,
											"end": 963,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 865,
											"end": 963,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 865,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 865,
											"end": 963,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 865,
											"end": 963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 918,
											"end": 922,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 941,
											"end": 956,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 956,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 941,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 865,
											"end": 963,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 643,
											"end": 859,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 643,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 643,
											"end": 859,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 643,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 643,
											"end": 859,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 643,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 643,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 260,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 260,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 161,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 465,
											"end": 637,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 465,
											"end": 637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 590,
											"end": 600,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 602,
											"end": 611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 613,
											"end": 616,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 630,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 567,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 630,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 567,
											"end": 630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 465,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9318,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9327,
											"end": 9370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9381,
											"end": 9629,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 643,
											"end": 859,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 643,
											"end": 859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 732,
											"end": 734,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 710,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 710,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 735,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 710,
											"end": 735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 745,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 710,
											"end": 745,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 702,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 702,
											"end": 778,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 702,
											"end": 778,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 778,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 702,
											"end": 778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 702,
											"end": 778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9968,
											"end": 9970,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 778,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 702,
											"end": 778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9950,
											"end": 9971,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10009,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9980,
											"end": 10010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10046,
											"end": 10076,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E636520746F206275726E00000000"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10019,
											"end": 10077,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10112,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10094,
											"end": 10112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 702,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 9766,
											"end": 10118,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 778,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 702,
											"end": 778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 806,
											"end": 808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 788,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 817,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 788,
											"end": 817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 827,
											"end": 838,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 846,
											"end": 852,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 827,
											"end": 842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 846,
											"end": 852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 827,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 260,
											"end": 459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 334,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 334,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF"
										},
										{
											"begin": 334,
											"end": 348,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 319,
											"end": 331,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 358,
											"end": 378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 358,
											"end": 378,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 378,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 378,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 358,
											"end": 378,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 358,
											"end": 394,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 358,
											"end": 394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 394,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 404,
											"end": 452,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 418,
											"end": 422,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 418,
											"end": 422,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 334,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 381,
											"end": 394,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 381,
											"end": 394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 404,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 404,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 404,
											"end": 452,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 404,
											"end": 452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 309,
											"end": 459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 260,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9318,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9327,
											"end": 9370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9072,
											"end": 9376,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CED3E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9381,
											"end": 9629,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DEE4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10845,
											"end": 10877,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10845,
											"end": 10877,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 11007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 11007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 11007,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10596,
											"end": 11013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9543,
											"end": 9545,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9381,
											"end": 9629,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10388,
											"end": 10591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1541,
											"end": 1557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1593,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1660,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1646,
											"end": 1661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1633,
											"end": 1672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1690,
											"end": 1910,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1690,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1837,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 1898,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1859,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 2042,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1915,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1986,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1971,
											"end": 1974,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1967,
											"end": 1987,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1988,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2322,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2047,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2164,
											"end": 2177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2177,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2160,
											"end": 2187,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2237,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2203,
											"end": 2237,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2262,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2285,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2197,
											"end": 2285,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2265,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2316,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2510,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2327,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2438,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2406,
											"end": 2462,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2406,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2406,
											"end": 2462,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2442,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2483,
											"end": 2497,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 3183,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2515,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2625,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2619,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2599,
											"end": 2626,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2589,
											"end": 2644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2630,
											"end": 2642,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2589,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2683,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2742,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2742,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2785,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2742,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2726,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2786,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2726,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2834,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2827,
											"end": 2830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2865,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2921,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2913,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2904,
											"end": 2914,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2892,
											"end": 2915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2922,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2948,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2934,
											"end": 2949,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 3003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3020,
											"end": 3035,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3111,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3012,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3177,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 3183,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 3183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3390,
											"end": 3402,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3423,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3452,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3507,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3526,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3553,
											"end": 3587,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3553,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3553,
											"end": 3587,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3553,
											"end": 3587,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3553,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3659,
											"end": 3666,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3656,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3648,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3606,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3667,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3606,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3667,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3722,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3724,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3739,
											"end": 3747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3843,
											"end": 3850,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3788,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 4392,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3862,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3938,
											"end": 3955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3924,
											"end": 3979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3965,
											"end": 3977,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3979,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3924,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4017,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4056,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4079,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4027,
											"end": 4079,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4059,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4123,
											"end": 4150,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4156,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 4103,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4158,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4103,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4167,
											"end": 4186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4226,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4205,
											"end": 4220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4201,
											"end": 4227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4233,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4195,
											"end": 4250,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4195,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4195,
											"end": 4250,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4248,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4195,
											"end": 4250,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4195,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4309,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4289,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4276,
											"end": 4283,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4259,
											"end": 4314,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4334,
											"end": 4350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4334,
											"end": 4350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4361,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4361,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4361,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4338,
											"end": 4345,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 4392,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4583,
											"end": 4589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4622,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4640,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4657,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4604,
											"end": 4657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4643,
											"end": 4655,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4657,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4604,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4676,
											"end": 4705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4724,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4724,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4724,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4724,
											"end": 4762,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4724,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4714,
											"end": 4762,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4714,
											"end": 4762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4813,
											"end": 4815,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4798,
											"end": 4816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4817,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4879,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4895,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4969,
											"end": 4976,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 4916,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4977,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4916,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4977,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5030,
											"end": 5032,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5034,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5061,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5049,
											"end": 5057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5062,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5065,
											"end": 5077,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5153,
											"end": 5160,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5150,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5140,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5127,
											"end": 5151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5098,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5161,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5217,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5203,
											"end": 5212,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5219,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5242,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5247,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5260,
											"end": 5261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5258,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5262,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5283,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5326,
											"end": 5333,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5315,
											"end": 5323,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5283,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5283,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5283,
											"end": 5334,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5283,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5334,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5334,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5334,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5524,
											"end": 5526,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5522,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5495,
											"end": 5527,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5544,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5492,
											"end": 5544,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5542,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5544,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5492,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5567,
											"end": 5590,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5656,
											"end": 5668,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5749,
											"end": 5756,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5757,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5720,
											"end": 5775,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5761,
											"end": 5773,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5775,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5720,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5794,
											"end": 5810,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5869,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5869,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5913,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5853,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5947,
											"end": 5962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5947,
											"end": 5962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5947,
											"end": 5962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6030,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6072,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6072,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6089,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6050,
											"end": 6089,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6089,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6050,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6211,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6230,
											"end": 6233,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6211,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6211,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6211,
											"end": 6234,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6211,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6235,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6174,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6174,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6129,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6301,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6358,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6389,
											"end": 6401,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6477,
											"end": 6484,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6464,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6451,
											"end": 6475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 6422,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6485,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 6491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6935,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 6496,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6549,
											"end": 6552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6592,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6593,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6620,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6609,
											"end": 6612,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6644,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6673,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6706,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6749,
											"end": 6762,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6829,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6862,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6862,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6741,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6935,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7201,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6940,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7082,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7168,
											"end": 7174,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7139,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7139,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7206,
											"end": 7454,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 7206,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7288,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7323,
											"end": 7332,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7333,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7338,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7355,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7303,
											"end": 7355,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7303,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7374,
											"end": 7397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7374,
											"end": 7397,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7374,
											"end": 7397,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7446,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7206,
											"end": 7454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7556,
											"end": 7588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7553,
											"end": 7605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7605,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7553,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7624,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 7643,
											"end": 7652,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7624,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7624,
											"end": 7653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7624,
											"end": 7653,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 7624,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7653,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7692,
											"end": 7701,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7675,
											"end": 7707,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7756,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7736,
											"end": 7757,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7716,
											"end": 7776,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7772,
											"end": 7773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7774,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7776,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7716,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7795,
											"end": 7800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7459,
											"end": 7806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7940,
											"end": 7942,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7926,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7943,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7908,
											"end": 7960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7946,
											"end": 7958,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7960,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7908,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7998,
											"end": 8007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7979,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8008,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7979,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 8008,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 8008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8027,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8065,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8027,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8065,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 8071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8682,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 8076,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8196,
											"end": 8202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8212,
											"end": 8218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8265,
											"end": 8268,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8253,
											"end": 8262,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8251,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8263,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8269,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8286,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8233,
											"end": 8286,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8272,
											"end": 8284,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8286,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8233,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8324,
											"end": 8333,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8305,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8334,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8305,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8387,
											"end": 8389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8376,
											"end": 8385,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8353,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8391,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8353,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8343,
											"end": 8391,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8343,
											"end": 8391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8438,
											"end": 8440,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8427,
											"end": 8436,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8423,
											"end": 8441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8400,
											"end": 8442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8400,
											"end": 8442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8491,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8478,
											"end": 8487,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8461,
											"end": 8493,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8451,
											"end": 8493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8451,
											"end": 8493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8544,
											"end": 8547,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8533,
											"end": 8542,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8549,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8564,
											"end": 8570,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 8591,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8558,
											"end": 8608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8558,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8558,
											"end": 8608,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8594,
											"end": 8606,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8558,
											"end": 8608,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8558,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8668,
											"end": 8675,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8648,
											"end": 8657,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 8627,
											"end": 8676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 9067,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 8687,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8762,
											"end": 8774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8774,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8821,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8830,
											"end": 8891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8884,
											"end": 8888,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8872,
											"end": 8889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8891,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8830,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8939,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 8940,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8906,
											"end": 8924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 8941,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8900,
											"end": 9061,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8978,
											"end": 8981,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8974,
											"end": 8994,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 8972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9008,
											"end": 9023,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9050,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9051,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 9061,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8900,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 9061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 9067,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 9067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 9067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 9067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9634,
											"end": 9761,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 9634,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9695,
											"end": 9705,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9690,
											"end": 9693,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9686,
											"end": 9706,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9707,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9730,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9723,
											"end": 9724,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9750,
											"end": 9754,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9747,
											"end": 9748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9755,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10250,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 10123,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10194,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10172,
											"end": 10173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10196,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10205,
											"end": 10220,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10239,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10236,
											"end": 10237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10244,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10255,
											"end": 10383,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 10255,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10331,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10377,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 10340,
											"end": 10377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10357,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 10357,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 10357,
											"end": 10375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11143,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 11018,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11114,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11114,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11117,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 11117,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11117,
											"end": 11135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11613,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 11148,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11407,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11408,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11368,
											"end": 11372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 11483,
											"end": 11485,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11472,
											"end": 11481,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 11431,
											"end": 11487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11535,
											"end": 11544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11527,
											"end": 11533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11520,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11507,
											"end": 11516,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11496,
											"end": 11546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 11600,
											"end": 11606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11598,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 11563,
											"end": 11607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11607,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 11563,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11555,
											"end": 11607,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11613,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11148,
											"end": 11613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11618,
											"end": 12179,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 11618,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11915,
											"end": 11930,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11915,
											"end": 11930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11915,
											"end": 11930,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 11931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 11931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11967,
											"end": 11982,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11967,
											"end": 11982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 11964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11947,
											"end": 11965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11947,
											"end": 11965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11940,
											"end": 11983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12014,
											"end": 12016,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12026,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12026,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12057,
											"end": 12059,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 12100,
											"end": 12103,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12085,
											"end": 12104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12085,
											"end": 12104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12078,
											"end": 12110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12078,
											"end": 12110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12078,
											"end": 12110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11840,
											"end": 11844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12127,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12127,
											"end": 12173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12145,
											"end": 12151,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12127,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 12127,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12127,
											"end": 12173,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12127,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12119,
											"end": 12173,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 11618,
											"end": 12179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11618,
											"end": 12179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12433,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 12184,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12253,
											"end": 12259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12308,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12285,
											"end": 12292,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12281,
											"end": 12304,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12277,
											"end": 12309,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12274,
											"end": 12326,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12274,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12274,
											"end": 12326,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12322,
											"end": 12323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12312,
											"end": 12324,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12274,
											"end": 12326,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12274,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12348,
											"end": 12364,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 12397,
											"end": 12402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 12373,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12438,
											"end": 13265,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 12438,
											"end": 13265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12835,
											"end": 12850,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12835,
											"end": 12850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12835,
											"end": 12850,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 12902,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 12902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12882,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12860,
											"end": 12903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12797,
											"end": 12800,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13022,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13001,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 12966,
											"end": 13023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13059,
											"end": 13081,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13054,
											"end": 13056,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13043,
											"end": 13052,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13039,
											"end": 13057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13032,
											"end": 13082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13140,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 13105,
											"end": 13149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13149,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13105,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13091,
											"end": 13149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13091,
											"end": 13149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13198,
											"end": 13207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13186,
											"end": 13208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13180,
											"end": 13183,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13169,
											"end": 13178,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13158,
											"end": 13209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13226,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 13252,
											"end": 13258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13244,
											"end": 13250,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13226,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 13226,
											"end": 13259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13226,
											"end": 13259,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 13226,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13218,
											"end": 13259,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 12438,
											"end": 13265,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12438,
											"end": 13265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NFT Tokens/Tk9.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addTokenType(uint256)": "93442218",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burnTokens(uint256,uint256)": "8e81c64d",
							"gettotalSupply(uint256)": "20295559",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"transferTokens(address,uint256[],uint256[])": "1cb0d481",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"addTokenType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"gettotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT Tokens/Tk9.sol\":\"MultiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"NFT Tokens/Tk9.sol\":{\"keccak256\":\"0xf4d529289fba10243e914efce61ee87f7122fedb9d204a59b6816aceacbcebad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4afbb90e1564221e0e6602ff7840f267080817a148ca6d633d8602d11bfc7dcf\",\"dweb:/ipfs/QmR6Qgef1d27gdLStHysuYHSfzspDKzsXhyPJWNHDPzABG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "NFT Tokens/Tk9.sol:MultiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "NFT Tokens/Tk9.sol:MultiToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "NFT Tokens/Tk9.sol:MultiToken",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 2790,
								"contract": "NFT Tokens/Tk9.sol:MultiToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1715
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1369,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1368,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1582,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1581,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1716,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1715,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1552,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1551,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1581,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1715,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1368,
								1310,
								1715,
								1727,
								1581
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1714,
										1726
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1368",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1715,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1727,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1550,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							1727
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1728,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1727
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1728,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1727
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1368
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 1311,
							"src": "158:41:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:4"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								1310,
								1727
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "624:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "659:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:4"
									},
									"scope": 1368,
									"src": "611:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1369,
							"src": "366:310:4",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Math": [
							2781
						],
						"StorageSlot": [
							1691
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1692,
							"src": "126:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1691,
										"src": "134:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 2782,
							"src": "173:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1373,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2781,
										"src": "181:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1375,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:5",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "Arrays",
							"nameLocation": "284:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1378,
									"libraryName": {
										"id": 1376,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1691,
										"src": "303:11:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:5",
									"typeName": {
										"id": 1377,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "843:834:5",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "853:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"initialValue": {
													"hexValue": "30",
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:5"
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"expression": {
														"id": 1395,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "893:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "920:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "916:48:5",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "931:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1388,
															"id": 1402,
															"nodeType": "Return",
															"src": "945:8:5"
														}
													]
												}
											},
											{
												"body": {
													"id": 1436,
													"nodeType": "Block",
													"src": "993:423:5",
													"statements": [
														{
															"assignments": [
																1409
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1409,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "1007:11:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1415,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1412,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "1034:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1413,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1039:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1410,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2781,
																		"src": "1021:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2781_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:5",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1955,
																	"src": "1021:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1417,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "1282:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1418,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1289:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1416,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1482,
																				1503,
																				1524
																			],
																			"referencedDeclaration": 1524,
																			"src": "1269:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1595,
																	"src": "1269:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1421,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "1360:46:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1428,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1390,
																				"src": "1378:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1429,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "1384:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:5"
																	}
																]
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "1265:141:5",
															"trueBody": {
																"id": 1427,
																"nodeType": "Block",
																"src": "1311:43:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1423,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "1329:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1424,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1336:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "981:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1406,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "987:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "WhileStatement",
												"src": "974:442:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "1533:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1442,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "1557:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1443,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "1564:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1441,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1482,
																		1503,
																		1524
																	],
																	"referencedDeclaration": 1524,
																	"src": "1544:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1595,
															"src": "1544:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1448,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "1636:35:5",
													"statements": [
														{
															"expression": {
																"id": 1456,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1657:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1457,
															"nodeType": "Return",
															"src": "1650:10:5"
														}
													]
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "1529:142:5",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "1591:39:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1451,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1612:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1454,
															"nodeType": "Return",
															"src": "1605:14:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:5",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "769:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1380,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1381,
													"nodeType": "ArrayTypeName",
													"src": "769:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "794:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "834:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:5"
									},
									"scope": 1551,
									"src": "745:932:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "1993:459:5",
										"statements": [
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "2003:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1473,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:5"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:5",
													"nodeType": "YulBlock",
													"src": "2316:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:5"
																},
																"nativeSrc": "2330:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:5"
															},
															"nativeSrc": "2330:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:5"
														},
														{
															"nativeSrc": "2362:36:5",
															"nodeType": "YulAssignment",
															"src": "2362:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:5"
																		},
																		"nativeSrc": "2374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:5"
																},
																"nativeSrc": "2370:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:5",
														"valueSize": 1
													}
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "2307:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1477,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2424:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:5",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1613,
														"src": "2424:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1587_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1480,
												"nodeType": "Return",
												"src": "2417:28:5"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1901:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1464,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1924:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1960:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:5",
															"1972:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1960:23:5"
													},
													"referencedDeclaration": 1587,
													"src": "1960:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:5"
									},
									"scope": 1551,
									"src": "1879:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "2768:459:5",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "2778:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:5",
													"nodeType": "YulBlock",
													"src": "3091:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:5"
																},
																"nativeSrc": "3105:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:5"
															},
															"nativeSrc": "3105:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:5"
														},
														{
															"nativeSrc": "3137:36:5",
															"nodeType": "YulAssignment",
															"src": "3137:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:5"
																		},
																		"nativeSrc": "3149:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:5"
																},
																"nativeSrc": "3145:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1486,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1488,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:5",
														"valueSize": 1
													}
												],
												"id": 1497,
												"nodeType": "InlineAssembly",
												"src": "3082:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1498,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3199:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:5",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1635,
														"src": "3199:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1593_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1501,
												"nodeType": "Return",
												"src": "3192:28:5"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2676:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2699:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:5"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2735:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:5",
															"2747:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1593,
														"src": "2735:23:5"
													},
													"referencedDeclaration": 1593,
													"src": "2735:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:5"
									},
									"scope": 1551,
									"src": "2654:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3543:459:5",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "3553:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1515,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:5",
													"nodeType": "YulBlock",
													"src": "3866:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:5"
																},
																"nativeSrc": "3880:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:5"
															},
															"nativeSrc": "3880:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:5"
														},
														{
															"nativeSrc": "3912:36:5",
															"nodeType": "YulAssignment",
															"src": "3912:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:5"
																		},
																		"nativeSrc": "3924:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:5"
																},
																"nativeSrc": "3920:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1516,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:5",
														"valueSize": 1
													}
												],
												"id": 1518,
												"nodeType": "InlineAssembly",
												"src": "3857:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1519,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3974:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:5",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "3974:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1522,
												"nodeType": "Return",
												"src": "3967:28:5"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1505,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1506,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3474:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3510:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:5",
															"3522:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "3510:23:5"
													},
													"referencedDeclaration": 1596,
													"src": "3510:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:5"
									},
									"scope": 1551,
									"src": "3429:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "4303:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:5",
													"nodeType": "YulBlock",
													"src": "4322:73:5",
													"statements": [
														{
															"nativeSrc": "4336:49:5",
															"nodeType": "YulAssignment",
															"src": "4336:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:5"
																				},
																				"nativeSrc": "4353:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:5"
																				},
																				"nativeSrc": "4369:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:5"
																		},
																		"nativeSrc": "4349:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:5"
																},
																"nativeSrc": "4343:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1528,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:5",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "4313:82:5"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4232:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4254:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:5"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4290:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:5"
									},
									"scope": 1551,
									"src": "4204:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "4702:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:5",
													"nodeType": "YulBlock",
													"src": "4721:73:5",
													"statements": [
														{
															"nativeSrc": "4735:49:5",
															"nodeType": "YulAssignment",
															"src": "4735:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:5"
																				},
																				"nativeSrc": "4752:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:5"
																				},
																				"nativeSrc": "4768:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nativeSrc": "4748:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:5"
																},
																"nativeSrc": "4742:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:5",
														"valueSize": 1
													}
												],
												"id": 1548,
												"nodeType": "InlineAssembly",
												"src": "4712:82:5"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4631:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4653:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4689:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:5"
									},
									"scope": 1551,
									"src": "4603:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1552,
							"src": "276:4526:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1581
						]
					},
					"id": 1582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1581,
							"linearizedBaseContracts": [
								1581
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1581,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1570,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1581,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1576,
												"id": 1578,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1581,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1582,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1691
						]
					},
					"id": 1692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1584,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1691,
							"linearizedBaseContracts": [
								1691
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1587,
									"members": [
										{
											"constant": false,
											"id": 1586,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1587,
											"src": "1300:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1585,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1271:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1590,
									"members": [
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1590,
											"src": "1355:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1588,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1326:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1593,
									"members": [
										{
											"constant": false,
											"id": 1592,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1593,
											"src": "1407:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1591,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1378:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1596,
									"members": [
										{
											"constant": false,
											"id": 1595,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1596,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1594,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1599,
									"members": [
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1599,
											"src": "1516:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1597,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1488:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1602,
									"members": [
										{
											"constant": false,
											"id": 1601,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1602,
											"src": "1568:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1600,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1541:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "1768:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:7",
													"nodeType": "YulBlock",
													"src": "1830:38:7",
													"statements": [
														{
															"nativeSrc": "1844:14:7",
															"nodeType": "YulAssignment",
															"src": "1844:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:7",
																"nodeType": "YulIdentifier",
																"src": "1854:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:7",
														"valueSize": 1
													}
												],
												"id": 1611,
												"nodeType": "InlineAssembly",
												"src": "1821:47:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1708:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:7"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1745:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1607,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1745:11:7"
													},
													"referencedDeclaration": 1587,
													"src": "1745:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:7"
									},
									"scope": 1691,
									"src": "1684:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "2056:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:7",
													"nodeType": "YulBlock",
													"src": "2118:38:7",
													"statements": [
														{
															"nativeSrc": "2132:14:7",
															"nodeType": "YulAssignment",
															"src": "2132:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:7",
																"nodeType": "YulIdentifier",
																"src": "2142:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1620,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:7",
														"valueSize": 1
													}
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "2109:47:7"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "1996:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:7"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2033:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1590_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1618,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1590,
														"src": "2033:11:7"
													},
													"referencedDeclaration": 1590,
													"src": "2033:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1590_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:7"
									},
									"scope": 1691,
									"src": "1972:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "2344:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:7",
													"nodeType": "YulBlock",
													"src": "2406:38:7",
													"statements": [
														{
															"nativeSrc": "2420:14:7",
															"nodeType": "YulAssignment",
															"src": "2420:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:7",
																"nodeType": "YulIdentifier",
																"src": "2430:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:7",
														"valueSize": 1
													}
												],
												"id": 1633,
												"nodeType": "InlineAssembly",
												"src": "2397:47:7"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2284:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:7"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2321:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1629,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1593,
														"src": "2321:11:7"
													},
													"referencedDeclaration": 1593,
													"src": "2321:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:7"
									},
									"scope": 1691,
									"src": "2260:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "2632:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:7",
													"nodeType": "YulBlock",
													"src": "2694:38:7",
													"statements": [
														{
															"nativeSrc": "2708:14:7",
															"nodeType": "YulAssignment",
															"src": "2708:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:7",
																"nodeType": "YulIdentifier",
																"src": "2718:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1642,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:7",
														"valueSize": 1
													}
												],
												"id": 1644,
												"nodeType": "InlineAssembly",
												"src": "2685:47:7"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2572:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2609:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1641,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1640,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "2609:11:7"
													},
													"referencedDeclaration": 1596,
													"src": "2609:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:7"
									},
									"scope": 1691,
									"src": "2548:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "2917:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:7",
													"nodeType": "YulBlock",
													"src": "2979:38:7",
													"statements": [
														{
															"nativeSrc": "2993:14:7",
															"nodeType": "YulAssignment",
															"src": "2993:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:7",
																"nodeType": "YulIdentifier",
																"src": "3003:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:7",
														"valueSize": 1
													}
												],
												"id": 1655,
												"nodeType": "InlineAssembly",
												"src": "2970:47:7"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2895:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1599,
														"src": "2895:10:7"
													},
													"referencedDeclaration": 1599,
													"src": "2895:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:7"
									},
									"scope": 1691,
									"src": "2835:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "3225:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:7",
													"nodeType": "YulBlock",
													"src": "3287:44:7",
													"statements": [
														{
															"nativeSrc": "3301:20:7",
															"nodeType": "YulAssignment",
															"src": "3301:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:7",
																"nodeType": "YulIdentifier",
																"src": "3311:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1660,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3278:53:7"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3158:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:7"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3203:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1599,
														"src": "3203:10:7"
													},
													"referencedDeclaration": 1599,
													"src": "3203:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:7"
									},
									"scope": 1691,
									"src": "3135:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "3513:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:7",
													"nodeType": "YulBlock",
													"src": "3575:38:7",
													"statements": [
														{
															"nativeSrc": "3589:14:7",
															"nodeType": "YulAssignment",
															"src": "3589:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:7",
																"nodeType": "YulIdentifier",
																"src": "3599:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1675,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1671,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:7",
														"valueSize": 1
													}
												],
												"id": 1677,
												"nodeType": "InlineAssembly",
												"src": "3566:47:7"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3455:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3492:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1673,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "3492:9:7"
													},
													"referencedDeclaration": 1602,
													"src": "3492:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:7"
									},
									"scope": 1691,
									"src": "3433:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "3816:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:7",
													"nodeType": "YulBlock",
													"src": "3878:44:7",
													"statements": [
														{
															"nativeSrc": "3892:20:7",
															"nodeType": "YulAssignment",
															"src": "3892:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:7",
																"nodeType": "YulIdentifier",
																"src": "3902:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1686,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1688,
												"nodeType": "InlineAssembly",
												"src": "3869:53:7"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3751:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3795:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1684,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "3795:9:7"
													},
													"referencedDeclaration": 1602,
													"src": "3795:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:7"
									},
									"scope": 1691,
									"src": "3729:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1692,
							"src": "1245:2685:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1715
						],
						"IERC165": [
							1727
						]
					},
					"id": 1716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1716,
							"sourceUnit": 1728,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1694,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1697,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "687:7:8"
									},
									"id": 1698,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1715,
							"linearizedBaseContracts": [
								1715,
								1727
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1726
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1706,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1708,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1727_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1727_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1707,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1727",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1712,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1715,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1716,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1727
						]
					},
					"id": 1728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1718,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1727,
							"linearizedBaseContracts": [
								1727
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1727,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1728,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2781
						]
					},
					"id": 2782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1730,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2781,
							"linearizedBaseContracts": [
								2781
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1733,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1738,
									"members": [
										{
											"id": 1734,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1735,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1736,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1737,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1768,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1753,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1763,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1761,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1749,
															"id": 1762,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1765,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1767,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2781,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2781,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1817,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1815,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1816,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1819
														],
														"declarations": [
															{
																"constant": false,
																"id": 1819,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1823,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1821,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1824,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1825,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1833,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1832,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1835,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1836,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1809,
														"id": 1837,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2781,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1851,
															"id": 1858,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1861,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1862,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1851,
														"id": 1865,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2781,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1894,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1886,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1889,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1890,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1879,
														"id": 1893,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2781,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1906,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1907,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1910,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1909,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1912,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2781,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1924,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1925,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1928,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1927,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1930,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2781,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1942,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1943,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1945,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1946,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1947,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1937,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1949,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1941,
												"id": 1953,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2781,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1965,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1972,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1968,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1969,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1964,
															"id": 1971,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1978,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1987,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2781,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2113,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2002
														],
														"declarations": [
															{
																"constant": false,
																"id": 2002,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2006,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2004,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2008
														],
														"declarations": [
															{
																"constant": false,
																"id": 2008,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2007,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2009,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2010,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2019,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2018,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2014,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2002,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2015,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2000,
																	"id": 2017,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2020,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2021,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2026,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2023,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2025,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2029
														],
														"declarations": [
															{
																"constant": false,
																"id": 2029,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2028,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2030,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2031,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2033
														],
														"declarations": [
															{
																"constant": false,
																"id": 2033,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2040,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2034,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2036,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2038,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2041,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2042,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2043,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2044,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2047,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2049
														],
														"declarations": [
															{
																"constant": false,
																"id": 2049,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2048,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2051,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2053,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2057,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2059,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2060,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2064,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2065,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2067,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2068,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2073,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2076,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2080,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2081,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2084,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2089,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2091,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2092,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2099,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2100,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2104,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2105,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2107,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2111,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2000,
														"id": 2112,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2781,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2131
												],
												"declarations": [
													{
														"constant": false,
														"id": 2131,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"arguments": [
														{
															"id": 2133,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2134,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2135,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2115,
															2158
														],
														"referencedDeclaration": 2115,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2139,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1738",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1738",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2138,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2142,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2143,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2144,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2141,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2154,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2149,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2155,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2131,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2156,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2781,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2166,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2172,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2171,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2165,
															"id": 2170,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2174
												],
												"declarations": [
													{
														"constant": false,
														"id": 2174,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2269,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2177,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2176,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2437,
																			2472
																		],
																		"referencedDeclaration": 2437,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2181,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2268,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2184,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2185,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2186,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2187,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2190,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2194,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2195,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2196,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2197,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2198,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2205,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2207,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2208,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2209,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2216,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2217,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2218,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2219,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2220,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2223,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2227,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2228,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2229,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2230,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2231,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2238,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2239,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2240,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2241,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2242,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2249,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2250,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2251,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2252,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2253,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2256,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2260,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2262,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2263,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2264,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2261,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2165,
														"id": 2267,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2781,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2303,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2303,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2286,
														"initialValue": {
															"arguments": [
																{
																	"id": 2284,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2283,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2270,
																	2305
																],
																"referencedDeclaration": 2270,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2287,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2289,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2276,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2288,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2291,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2282,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2292,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2282,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2294,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2273,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2280,
														"id": 2302,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2274,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2781,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2314
												],
												"declarations": [
													{
														"constant": false,
														"id": 2314,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2436,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2316,
												"initialValue": {
													"hexValue": "30",
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2433,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2346,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2345,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2340,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2344,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2361,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2360,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2355,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2359,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2362,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2376,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2375,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2371,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2374,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2391,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2390,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2386,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2406,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2405,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2421,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2420,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2432,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2431,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2434,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2314,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2312,
												"id": 2435,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2781,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2470,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2449
														],
														"declarations": [
															{
																"constant": false,
																"id": 2449,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2470,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2448,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2453,
														"initialValue": {
															"arguments": [
																{
																	"id": 2451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2450,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2437,
																	2472
																],
																"referencedDeclaration": 2437,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2456,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2443,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2455,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2460,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2459,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2449,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2461,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2440,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2447,
														"id": 2469,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2441,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2781,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2481
												],
												"declarations": [
													{
														"constant": false,
														"id": 2481,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2483,
												"initialValue": {
													"hexValue": "30",
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2597,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2484,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2499,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2517,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2516,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2511,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2515,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2534,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2533,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2532,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2540,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2568,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2567,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2563,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2566,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2585,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2584,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2586,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2596,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2595,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2598,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2481,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2599,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2473,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2781,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2634,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2613
														],
														"declarations": [
															{
																"constant": false,
																"id": 2613,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2612,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2617,
														"initialValue": {
															"arguments": [
																{
																	"id": 2615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2604,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2614,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2601,
																	2636
																],
																"referencedDeclaration": 2601,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2618,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2613,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2620,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2607,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2619,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2623,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2613,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2625,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2604,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2611,
														"id": 2633,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2605,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2781,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2645
												],
												"declarations": [
													{
														"constant": false,
														"id": 2645,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2722,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2647,
												"initialValue": {
													"hexValue": "30",
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2719,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2677,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2676,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2675,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2678,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2691,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2707,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2706,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2705,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2718,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2717,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2720,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2643,
												"id": 2721,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2781,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2759,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2735
														],
														"declarations": [
															{
																"constant": false,
																"id": 2735,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2759,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2734,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2739,
														"initialValue": {
															"arguments": [
																{
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2736,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2723,
																	2761
																],
																"referencedDeclaration": 2723,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2735,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2742,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2729,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2741,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2745,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2735,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2746,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2748,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2750,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2726,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2733,
														"id": 2758,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2727,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2781,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2772,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1738",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1738",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2770,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2778,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2763,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2781,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2782,
							"src": "203:14914:10",
							"usedErrors": [
								1733
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"NFT Tokens/Tk9.sol": {
				"ast": {
					"absolutePath": "NFT Tokens/Tk9.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1715
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						],
						"MultiToken": [
							2893
						]
					},
					"id": 2894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2894,
							"sourceUnit": 1188,
							"src": "58:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2785,
										"name": "ERC1155",
										"nameLocations": [
											"142:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "142:7:11"
									},
									"id": 2786,
									"nodeType": "InheritanceSpecifier",
									"src": "142:7:11"
								}
							],
							"canonicalName": "MultiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2893,
							"linearizedBaseContracts": [
								2893,
								1187,
								136,
								1368,
								1310,
								1715,
								1727,
								1581
							],
							"name": "MultiToken",
							"nameLocation": "128:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bd85b039",
									"id": 2790,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "190:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2893,
									"src": "161:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2789,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2787,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "169:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "161:21:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2788,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "177:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "252:2:11",
										"statements": []
									},
									"id": 2799,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2795,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2792,
													"src": "247:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2796,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2794,
												"name": "ERC1155",
												"nameLocations": [
													"239:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "239:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "239:12:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "234:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "220:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "220:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:19:11"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:0:11"
									},
									"scope": 2893,
									"src": "208:46:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "309:150:11",
										"statements": [
											{
												"assignments": [
													2805
												],
												"declarations": [
													{
														"constant": false,
														"id": 2805,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "324:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2826,
														"src": "319:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2804,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "319:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2809,
												"initialValue": {
													"baseExpression": {
														"id": 2806,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2790,
														"src": "334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2808,
													"indexExpression": {
														"hexValue": "30",
														"id": 2807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "346:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "334:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "319:29:11"
											},
											{
												"expression": {
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2810,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2790,
															"src": "358:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2812,
														"indexExpression": {
															"id": 2811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "370:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "358:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2813,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "381:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "358:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "358:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2819,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "418:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiToken_$2893",
																		"typeString": "contract MultiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiToken_$2893",
																		"typeString": "contract MultiToken"
																	}
																],
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "410:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "410:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "410:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2821,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "425:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2822,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "434:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "449:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2816,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "404:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "404:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2825,
												"nodeType": "ExpressionStatement",
												"src": "404:48:11"
											}
										]
									},
									"functionSelector": "93442218",
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTokenType",
									"nameLocation": "269:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "287:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "282:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:20:11"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:11"
									},
									"scope": 2893,
									"src": "260:199:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "557:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2839,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "590:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "594:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "590:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2841,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "602:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2842,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2832,
															"src": "613:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2843,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "618:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "627:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2838,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "567:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "567:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2846,
												"nodeType": "ExpressionStatement",
												"src": "567:63:11"
											}
										]
									},
									"functionSelector": "1cb0d481",
									"id": 2848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "474:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "497:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "489:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "522:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "508:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2830,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "508:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2831,
													"nodeType": "ArrayTypeName",
													"src": "508:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "541:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "527:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2833,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "527:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2834,
													"nodeType": "ArrayTypeName",
													"src": "527:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:61:11"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:11"
									},
									"scope": 2893,
									"src": "465:172:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "692:167:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2857,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "720:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "724:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "720:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2859,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2850,
																		"src": "732:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2856,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "710:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "710:25:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2861,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "739:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "710:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "747:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															},
															"value": "Insufficient balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															}
														],
														"id": 2855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "702:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "702:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2865,
												"nodeType": "ExpressionStatement",
												"src": "702:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2867,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "794:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "798:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "794:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2869,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "806:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2870,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2852,
															"src": "810:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2866,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "788:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "788:29:11"
											},
											{
												"expression": {
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2873,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2790,
															"src": "827:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2875,
														"indexExpression": {
															"id": 2874,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "839:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "827:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2876,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2852,
														"src": "846:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "827:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2878,
												"nodeType": "ExpressionStatement",
												"src": "827:25:11"
											}
										]
									},
									"functionSelector": "8e81c64d",
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "652:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "668:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "663:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "677:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "672:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:11"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:11"
									},
									"scope": 2893,
									"src": "643:216:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2891,
										"nodeType": "Block",
										"src": "924:39:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2887,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2790,
														"src": "941:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2889,
													"indexExpression": {
														"id": 2888,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "953:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "941:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2886,
												"id": 2890,
												"nodeType": "Return",
												"src": "934:22:11"
											}
										]
									},
									"functionSelector": "20295559",
									"id": 2892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gettotalSupply",
									"nameLocation": "874:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "894:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "889:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "889:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:9:11"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "918:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:6:11"
									},
									"scope": 2893,
									"src": "865:98:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2894,
							"src": "119:847:11",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "32:934:11"
				},
				"id": 11
			}
		}
	}
}